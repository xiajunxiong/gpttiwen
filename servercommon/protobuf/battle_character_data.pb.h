// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: battle_character_data.proto

#ifndef PROTOBUF_battle_5fcharacter_5fdata_2eproto__INCLUDED
#define PROTOBUF_battle_5fcharacter_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_battle_5fcharacter_5fdata_2eproto();
void protobuf_AssignDesc_battle_5fcharacter_5fdata_2eproto();
void protobuf_ShutdownFile_battle_5fcharacter_5fdata_2eproto();

class PB_BattleCharacterData;
class PB_BattleCharacterData_SkillItem;

// ===================================================================

class PB_BattleCharacterData_SkillItem : public ::google::protobuf::Message {
 public:
  PB_BattleCharacterData_SkillItem();
  virtual ~PB_BattleCharacterData_SkillItem();

  PB_BattleCharacterData_SkillItem(const PB_BattleCharacterData_SkillItem& from);

  inline PB_BattleCharacterData_SkillItem& operator=(const PB_BattleCharacterData_SkillItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_BattleCharacterData_SkillItem& default_instance();

  void Swap(PB_BattleCharacterData_SkillItem* other);

  // implements Message ----------------------------------------------

  PB_BattleCharacterData_SkillItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_BattleCharacterData_SkillItem& from);
  void MergeFrom(const PB_BattleCharacterData_SkillItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint32 value);

  // optional uint32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_level() const;
  inline void set_skill_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PB_BattleCharacterData.SkillItem)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::uint32 skill_level_;
  friend void  protobuf_AddDesc_battle_5fcharacter_5fdata_2eproto();
  friend void protobuf_AssignDesc_battle_5fcharacter_5fdata_2eproto();
  friend void protobuf_ShutdownFile_battle_5fcharacter_5fdata_2eproto();

  void InitAsDefaultInstance();
  static PB_BattleCharacterData_SkillItem* default_instance_;
};
// -------------------------------------------------------------------

class PB_BattleCharacterData : public ::google::protobuf::Message {
 public:
  PB_BattleCharacterData();
  virtual ~PB_BattleCharacterData();

  PB_BattleCharacterData(const PB_BattleCharacterData& from);

  inline PB_BattleCharacterData& operator=(const PB_BattleCharacterData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_BattleCharacterData& default_instance();

  void Swap(PB_BattleCharacterData* other);

  // implements Message ----------------------------------------------

  PB_BattleCharacterData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_BattleCharacterData& from);
  void MergeFrom(const PB_BattleCharacterData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PB_BattleCharacterData_SkillItem SkillItem;

  // accessors -------------------------------------------------------

  // optional int32 character_id = 1;
  inline bool has_character_id() const;
  inline void clear_character_id();
  static const int kCharacterIdFieldNumber = 1;
  inline ::google::protobuf::int32 character_id() const;
  inline void set_character_id(::google::protobuf::int32 value);

  // optional int32 id_param = 2;
  inline bool has_id_param() const;
  inline void clear_id_param();
  static const int kIdParamFieldNumber = 2;
  inline ::google::protobuf::int32 id_param() const;
  inline void set_id_param(::google::protobuf::int32 value);

  // optional int32 character_type = 3;
  inline bool has_character_type() const;
  inline void clear_character_type();
  static const int kCharacterTypeFieldNumber = 3;
  inline ::google::protobuf::int32 character_type() const;
  inline void set_character_type(::google::protobuf::int32 value);

  // optional bool is_use_cur_hp_mp = 4;
  inline bool has_is_use_cur_hp_mp() const;
  inline void clear_is_use_cur_hp_mp();
  static const int kIsUseCurHpMpFieldNumber = 4;
  inline bool is_use_cur_hp_mp() const;
  inline void set_is_use_cur_hp_mp(bool value);

  // optional int32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional string name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 quality = 7;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 7;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int32 profession = 8;
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 8;
  inline ::google::protobuf::int32 profession() const;
  inline void set_profession(::google::protobuf::int32 value);

  // optional int32 race = 9;
  inline bool has_race() const;
  inline void clear_race();
  static const int kRaceFieldNumber = 9;
  inline ::google::protobuf::int32 race() const;
  inline void set_race(::google::protobuf::int32 value);

  // optional int32 weapon_type = 10;
  inline bool has_weapon_type() const;
  inline void clear_weapon_type();
  static const int kWeaponTypeFieldNumber = 10;
  inline ::google::protobuf::int32 weapon_type() const;
  inline void set_weapon_type(::google::protobuf::int32 value);

  // optional int32 weapon_id = 11;
  inline bool has_weapon_id() const;
  inline void clear_weapon_id();
  static const int kWeaponIdFieldNumber = 11;
  inline ::google::protobuf::int32 weapon_id() const;
  inline void set_weapon_id(::google::protobuf::int32 value);

  // repeated int32 attr_list = 12;
  inline int attr_list_size() const;
  inline void clear_attr_list();
  static const int kAttrListFieldNumber = 12;
  inline ::google::protobuf::int32 attr_list(int index) const;
  inline void set_attr_list(int index, ::google::protobuf::int32 value);
  inline void add_attr_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      attr_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_attr_list();

  // optional int32 param = 13;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 13;
  inline ::google::protobuf::int32 param() const;
  inline void set_param(::google::protobuf::int32 value);

  // optional int32 is_long_range_unit = 14;
  inline bool has_is_long_range_unit() const;
  inline void clear_is_long_range_unit();
  static const int kIsLongRangeUnitFieldNumber = 14;
  inline ::google::protobuf::int32 is_long_range_unit() const;
  inline void set_is_long_range_unit(::google::protobuf::int32 value);

  // repeated .PB_BattleCharacterData.SkillItem skill_list = 15;
  inline int skill_list_size() const;
  inline void clear_skill_list();
  static const int kSkillListFieldNumber = 15;
  inline const ::PB_BattleCharacterData_SkillItem& skill_list(int index) const;
  inline ::PB_BattleCharacterData_SkillItem* mutable_skill_list(int index);
  inline ::PB_BattleCharacterData_SkillItem* add_skill_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_BattleCharacterData_SkillItem >&
      skill_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_BattleCharacterData_SkillItem >*
      mutable_skill_list();

  // optional int32 capability = 16;
  inline bool has_capability() const;
  inline void clear_capability();
  static const int kCapabilityFieldNumber = 16;
  inline ::google::protobuf::int32 capability() const;
  inline void set_capability(::google::protobuf::int32 value);

  // optional int32 fly_flag = 17;
  inline bool has_fly_flag() const;
  inline void clear_fly_flag();
  static const int kFlyFlagFieldNumber = 17;
  inline ::google::protobuf::int32 fly_flag() const;
  inline void set_fly_flag(::google::protobuf::int32 value);

  // optional int32 wear_element_type = 18;
  inline bool has_wear_element_type() const;
  inline void clear_wear_element_type();
  static const int kWearElementTypeFieldNumber = 18;
  inline ::google::protobuf::int32 wear_element_type() const;
  inline void set_wear_element_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PB_BattleCharacterData)
 private:
  inline void set_has_character_id();
  inline void clear_has_character_id();
  inline void set_has_id_param();
  inline void clear_has_id_param();
  inline void set_has_character_type();
  inline void clear_has_character_type();
  inline void set_has_is_use_cur_hp_mp();
  inline void clear_has_is_use_cur_hp_mp();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_race();
  inline void clear_has_race();
  inline void set_has_weapon_type();
  inline void clear_has_weapon_type();
  inline void set_has_weapon_id();
  inline void clear_has_weapon_id();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_is_long_range_unit();
  inline void clear_has_is_long_range_unit();
  inline void set_has_capability();
  inline void clear_has_capability();
  inline void set_has_fly_flag();
  inline void clear_has_fly_flag();
  inline void set_has_wear_element_type();
  inline void clear_has_wear_element_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 character_id_;
  ::google::protobuf::int32 id_param_;
  ::google::protobuf::int32 character_type_;
  bool is_use_cur_hp_mp_;
  ::std::string* name_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 profession_;
  ::google::protobuf::int32 race_;
  ::google::protobuf::int32 weapon_type_;
  ::google::protobuf::int32 weapon_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > attr_list_;
  ::google::protobuf::int32 param_;
  ::google::protobuf::int32 is_long_range_unit_;
  ::google::protobuf::RepeatedPtrField< ::PB_BattleCharacterData_SkillItem > skill_list_;
  ::google::protobuf::int32 capability_;
  ::google::protobuf::int32 fly_flag_;
  ::google::protobuf::int32 wear_element_type_;
  friend void  protobuf_AddDesc_battle_5fcharacter_5fdata_2eproto();
  friend void protobuf_AssignDesc_battle_5fcharacter_5fdata_2eproto();
  friend void protobuf_ShutdownFile_battle_5fcharacter_5fdata_2eproto();

  void InitAsDefaultInstance();
  static PB_BattleCharacterData* default_instance_;
};
// ===================================================================


// ===================================================================

// PB_BattleCharacterData_SkillItem

// optional uint32 skill_id = 1;
inline bool PB_BattleCharacterData_SkillItem::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_BattleCharacterData_SkillItem::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_BattleCharacterData_SkillItem::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_BattleCharacterData_SkillItem::clear_skill_id() {
  skill_id_ = 0u;
  clear_has_skill_id();
}
inline ::google::protobuf::uint32 PB_BattleCharacterData_SkillItem::skill_id() const {
  // @@protoc_insertion_point(field_get:PB_BattleCharacterData.SkillItem.skill_id)
  return skill_id_;
}
inline void PB_BattleCharacterData_SkillItem::set_skill_id(::google::protobuf::uint32 value) {
  set_has_skill_id();
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:PB_BattleCharacterData.SkillItem.skill_id)
}

// optional uint32 skill_level = 2;
inline bool PB_BattleCharacterData_SkillItem::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_BattleCharacterData_SkillItem::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_BattleCharacterData_SkillItem::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_BattleCharacterData_SkillItem::clear_skill_level() {
  skill_level_ = 0u;
  clear_has_skill_level();
}
inline ::google::protobuf::uint32 PB_BattleCharacterData_SkillItem::skill_level() const {
  // @@protoc_insertion_point(field_get:PB_BattleCharacterData.SkillItem.skill_level)
  return skill_level_;
}
inline void PB_BattleCharacterData_SkillItem::set_skill_level(::google::protobuf::uint32 value) {
  set_has_skill_level();
  skill_level_ = value;
  // @@protoc_insertion_point(field_set:PB_BattleCharacterData.SkillItem.skill_level)
}

// -------------------------------------------------------------------

// PB_BattleCharacterData

// optional int32 character_id = 1;
inline bool PB_BattleCharacterData::has_character_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_BattleCharacterData::set_has_character_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_BattleCharacterData::clear_has_character_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_BattleCharacterData::clear_character_id() {
  character_id_ = 0;
  clear_has_character_id();
}
inline ::google::protobuf::int32 PB_BattleCharacterData::character_id() const {
  // @@protoc_insertion_point(field_get:PB_BattleCharacterData.character_id)
  return character_id_;
}
inline void PB_BattleCharacterData::set_character_id(::google::protobuf::int32 value) {
  set_has_character_id();
  character_id_ = value;
  // @@protoc_insertion_point(field_set:PB_BattleCharacterData.character_id)
}

// optional int32 id_param = 2;
inline bool PB_BattleCharacterData::has_id_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_BattleCharacterData::set_has_id_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_BattleCharacterData::clear_has_id_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_BattleCharacterData::clear_id_param() {
  id_param_ = 0;
  clear_has_id_param();
}
inline ::google::protobuf::int32 PB_BattleCharacterData::id_param() const {
  // @@protoc_insertion_point(field_get:PB_BattleCharacterData.id_param)
  return id_param_;
}
inline void PB_BattleCharacterData::set_id_param(::google::protobuf::int32 value) {
  set_has_id_param();
  id_param_ = value;
  // @@protoc_insertion_point(field_set:PB_BattleCharacterData.id_param)
}

// optional int32 character_type = 3;
inline bool PB_BattleCharacterData::has_character_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_BattleCharacterData::set_has_character_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_BattleCharacterData::clear_has_character_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_BattleCharacterData::clear_character_type() {
  character_type_ = 0;
  clear_has_character_type();
}
inline ::google::protobuf::int32 PB_BattleCharacterData::character_type() const {
  // @@protoc_insertion_point(field_get:PB_BattleCharacterData.character_type)
  return character_type_;
}
inline void PB_BattleCharacterData::set_character_type(::google::protobuf::int32 value) {
  set_has_character_type();
  character_type_ = value;
  // @@protoc_insertion_point(field_set:PB_BattleCharacterData.character_type)
}

// optional bool is_use_cur_hp_mp = 4;
inline bool PB_BattleCharacterData::has_is_use_cur_hp_mp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PB_BattleCharacterData::set_has_is_use_cur_hp_mp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PB_BattleCharacterData::clear_has_is_use_cur_hp_mp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PB_BattleCharacterData::clear_is_use_cur_hp_mp() {
  is_use_cur_hp_mp_ = false;
  clear_has_is_use_cur_hp_mp();
}
inline bool PB_BattleCharacterData::is_use_cur_hp_mp() const {
  // @@protoc_insertion_point(field_get:PB_BattleCharacterData.is_use_cur_hp_mp)
  return is_use_cur_hp_mp_;
}
inline void PB_BattleCharacterData::set_is_use_cur_hp_mp(bool value) {
  set_has_is_use_cur_hp_mp();
  is_use_cur_hp_mp_ = value;
  // @@protoc_insertion_point(field_set:PB_BattleCharacterData.is_use_cur_hp_mp)
}

// optional int32 level = 5;
inline bool PB_BattleCharacterData::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PB_BattleCharacterData::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PB_BattleCharacterData::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PB_BattleCharacterData::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 PB_BattleCharacterData::level() const {
  // @@protoc_insertion_point(field_get:PB_BattleCharacterData.level)
  return level_;
}
inline void PB_BattleCharacterData::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:PB_BattleCharacterData.level)
}

// optional string name = 6;
inline bool PB_BattleCharacterData::has_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PB_BattleCharacterData::set_has_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PB_BattleCharacterData::clear_has_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PB_BattleCharacterData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PB_BattleCharacterData::name() const {
  // @@protoc_insertion_point(field_get:PB_BattleCharacterData.name)
  return *name_;
}
inline void PB_BattleCharacterData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:PB_BattleCharacterData.name)
}
inline void PB_BattleCharacterData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:PB_BattleCharacterData.name)
}
inline void PB_BattleCharacterData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PB_BattleCharacterData.name)
}
inline ::std::string* PB_BattleCharacterData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:PB_BattleCharacterData.name)
  return name_;
}
inline ::std::string* PB_BattleCharacterData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PB_BattleCharacterData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:PB_BattleCharacterData.name)
}

// optional int32 quality = 7;
inline bool PB_BattleCharacterData::has_quality() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PB_BattleCharacterData::set_has_quality() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PB_BattleCharacterData::clear_has_quality() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PB_BattleCharacterData::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 PB_BattleCharacterData::quality() const {
  // @@protoc_insertion_point(field_get:PB_BattleCharacterData.quality)
  return quality_;
}
inline void PB_BattleCharacterData::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:PB_BattleCharacterData.quality)
}

// optional int32 profession = 8;
inline bool PB_BattleCharacterData::has_profession() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PB_BattleCharacterData::set_has_profession() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PB_BattleCharacterData::clear_has_profession() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PB_BattleCharacterData::clear_profession() {
  profession_ = 0;
  clear_has_profession();
}
inline ::google::protobuf::int32 PB_BattleCharacterData::profession() const {
  // @@protoc_insertion_point(field_get:PB_BattleCharacterData.profession)
  return profession_;
}
inline void PB_BattleCharacterData::set_profession(::google::protobuf::int32 value) {
  set_has_profession();
  profession_ = value;
  // @@protoc_insertion_point(field_set:PB_BattleCharacterData.profession)
}

// optional int32 race = 9;
inline bool PB_BattleCharacterData::has_race() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PB_BattleCharacterData::set_has_race() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PB_BattleCharacterData::clear_has_race() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PB_BattleCharacterData::clear_race() {
  race_ = 0;
  clear_has_race();
}
inline ::google::protobuf::int32 PB_BattleCharacterData::race() const {
  // @@protoc_insertion_point(field_get:PB_BattleCharacterData.race)
  return race_;
}
inline void PB_BattleCharacterData::set_race(::google::protobuf::int32 value) {
  set_has_race();
  race_ = value;
  // @@protoc_insertion_point(field_set:PB_BattleCharacterData.race)
}

// optional int32 weapon_type = 10;
inline bool PB_BattleCharacterData::has_weapon_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PB_BattleCharacterData::set_has_weapon_type() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PB_BattleCharacterData::clear_has_weapon_type() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PB_BattleCharacterData::clear_weapon_type() {
  weapon_type_ = 0;
  clear_has_weapon_type();
}
inline ::google::protobuf::int32 PB_BattleCharacterData::weapon_type() const {
  // @@protoc_insertion_point(field_get:PB_BattleCharacterData.weapon_type)
  return weapon_type_;
}
inline void PB_BattleCharacterData::set_weapon_type(::google::protobuf::int32 value) {
  set_has_weapon_type();
  weapon_type_ = value;
  // @@protoc_insertion_point(field_set:PB_BattleCharacterData.weapon_type)
}

// optional int32 weapon_id = 11;
inline bool PB_BattleCharacterData::has_weapon_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PB_BattleCharacterData::set_has_weapon_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PB_BattleCharacterData::clear_has_weapon_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PB_BattleCharacterData::clear_weapon_id() {
  weapon_id_ = 0;
  clear_has_weapon_id();
}
inline ::google::protobuf::int32 PB_BattleCharacterData::weapon_id() const {
  // @@protoc_insertion_point(field_get:PB_BattleCharacterData.weapon_id)
  return weapon_id_;
}
inline void PB_BattleCharacterData::set_weapon_id(::google::protobuf::int32 value) {
  set_has_weapon_id();
  weapon_id_ = value;
  // @@protoc_insertion_point(field_set:PB_BattleCharacterData.weapon_id)
}

// repeated int32 attr_list = 12;
inline int PB_BattleCharacterData::attr_list_size() const {
  return attr_list_.size();
}
inline void PB_BattleCharacterData::clear_attr_list() {
  attr_list_.Clear();
}
inline ::google::protobuf::int32 PB_BattleCharacterData::attr_list(int index) const {
  // @@protoc_insertion_point(field_get:PB_BattleCharacterData.attr_list)
  return attr_list_.Get(index);
}
inline void PB_BattleCharacterData::set_attr_list(int index, ::google::protobuf::int32 value) {
  attr_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:PB_BattleCharacterData.attr_list)
}
inline void PB_BattleCharacterData::add_attr_list(::google::protobuf::int32 value) {
  attr_list_.Add(value);
  // @@protoc_insertion_point(field_add:PB_BattleCharacterData.attr_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_BattleCharacterData::attr_list() const {
  // @@protoc_insertion_point(field_list:PB_BattleCharacterData.attr_list)
  return attr_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_BattleCharacterData::mutable_attr_list() {
  // @@protoc_insertion_point(field_mutable_list:PB_BattleCharacterData.attr_list)
  return &attr_list_;
}

// optional int32 param = 13;
inline bool PB_BattleCharacterData::has_param() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PB_BattleCharacterData::set_has_param() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PB_BattleCharacterData::clear_has_param() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PB_BattleCharacterData::clear_param() {
  param_ = 0;
  clear_has_param();
}
inline ::google::protobuf::int32 PB_BattleCharacterData::param() const {
  // @@protoc_insertion_point(field_get:PB_BattleCharacterData.param)
  return param_;
}
inline void PB_BattleCharacterData::set_param(::google::protobuf::int32 value) {
  set_has_param();
  param_ = value;
  // @@protoc_insertion_point(field_set:PB_BattleCharacterData.param)
}

// optional int32 is_long_range_unit = 14;
inline bool PB_BattleCharacterData::has_is_long_range_unit() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PB_BattleCharacterData::set_has_is_long_range_unit() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PB_BattleCharacterData::clear_has_is_long_range_unit() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PB_BattleCharacterData::clear_is_long_range_unit() {
  is_long_range_unit_ = 0;
  clear_has_is_long_range_unit();
}
inline ::google::protobuf::int32 PB_BattleCharacterData::is_long_range_unit() const {
  // @@protoc_insertion_point(field_get:PB_BattleCharacterData.is_long_range_unit)
  return is_long_range_unit_;
}
inline void PB_BattleCharacterData::set_is_long_range_unit(::google::protobuf::int32 value) {
  set_has_is_long_range_unit();
  is_long_range_unit_ = value;
  // @@protoc_insertion_point(field_set:PB_BattleCharacterData.is_long_range_unit)
}

// repeated .PB_BattleCharacterData.SkillItem skill_list = 15;
inline int PB_BattleCharacterData::skill_list_size() const {
  return skill_list_.size();
}
inline void PB_BattleCharacterData::clear_skill_list() {
  skill_list_.Clear();
}
inline const ::PB_BattleCharacterData_SkillItem& PB_BattleCharacterData::skill_list(int index) const {
  // @@protoc_insertion_point(field_get:PB_BattleCharacterData.skill_list)
  return skill_list_.Get(index);
}
inline ::PB_BattleCharacterData_SkillItem* PB_BattleCharacterData::mutable_skill_list(int index) {
  // @@protoc_insertion_point(field_mutable:PB_BattleCharacterData.skill_list)
  return skill_list_.Mutable(index);
}
inline ::PB_BattleCharacterData_SkillItem* PB_BattleCharacterData::add_skill_list() {
  // @@protoc_insertion_point(field_add:PB_BattleCharacterData.skill_list)
  return skill_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_BattleCharacterData_SkillItem >&
PB_BattleCharacterData::skill_list() const {
  // @@protoc_insertion_point(field_list:PB_BattleCharacterData.skill_list)
  return skill_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_BattleCharacterData_SkillItem >*
PB_BattleCharacterData::mutable_skill_list() {
  // @@protoc_insertion_point(field_mutable_list:PB_BattleCharacterData.skill_list)
  return &skill_list_;
}

// optional int32 capability = 16;
inline bool PB_BattleCharacterData::has_capability() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PB_BattleCharacterData::set_has_capability() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PB_BattleCharacterData::clear_has_capability() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PB_BattleCharacterData::clear_capability() {
  capability_ = 0;
  clear_has_capability();
}
inline ::google::protobuf::int32 PB_BattleCharacterData::capability() const {
  // @@protoc_insertion_point(field_get:PB_BattleCharacterData.capability)
  return capability_;
}
inline void PB_BattleCharacterData::set_capability(::google::protobuf::int32 value) {
  set_has_capability();
  capability_ = value;
  // @@protoc_insertion_point(field_set:PB_BattleCharacterData.capability)
}

// optional int32 fly_flag = 17;
inline bool PB_BattleCharacterData::has_fly_flag() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PB_BattleCharacterData::set_has_fly_flag() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PB_BattleCharacterData::clear_has_fly_flag() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PB_BattleCharacterData::clear_fly_flag() {
  fly_flag_ = 0;
  clear_has_fly_flag();
}
inline ::google::protobuf::int32 PB_BattleCharacterData::fly_flag() const {
  // @@protoc_insertion_point(field_get:PB_BattleCharacterData.fly_flag)
  return fly_flag_;
}
inline void PB_BattleCharacterData::set_fly_flag(::google::protobuf::int32 value) {
  set_has_fly_flag();
  fly_flag_ = value;
  // @@protoc_insertion_point(field_set:PB_BattleCharacterData.fly_flag)
}

// optional int32 wear_element_type = 18;
inline bool PB_BattleCharacterData::has_wear_element_type() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PB_BattleCharacterData::set_has_wear_element_type() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PB_BattleCharacterData::clear_has_wear_element_type() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PB_BattleCharacterData::clear_wear_element_type() {
  wear_element_type_ = 0;
  clear_has_wear_element_type();
}
inline ::google::protobuf::int32 PB_BattleCharacterData::wear_element_type() const {
  // @@protoc_insertion_point(field_get:PB_BattleCharacterData.wear_element_type)
  return wear_element_type_;
}
inline void PB_BattleCharacterData::set_wear_element_type(::google::protobuf::int32 value) {
  set_has_wear_element_type();
  wear_element_type_ = value;
  // @@protoc_insertion_point(field_set:PB_BattleCharacterData.wear_element_type)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_battle_5fcharacter_5fdata_2eproto__INCLUDED
