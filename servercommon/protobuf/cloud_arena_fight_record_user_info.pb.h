// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cloud_arena_fight_record_user_info.proto

#ifndef PROTOBUF_cloud_5farena_5ffight_5frecord_5fuser_5finfo_2eproto__INCLUDED
#define PROTOBUF_cloud_5farena_5ffight_5frecord_5fuser_5finfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_cloud_5farena_5ffight_5frecord_5fuser_5finfo_2eproto();
void protobuf_AssignDesc_cloud_5farena_5ffight_5frecord_5fuser_5finfo_2eproto();
void protobuf_ShutdownFile_cloud_5farena_5ffight_5frecord_5fuser_5finfo_2eproto();

class PB_CloudArenaFightRecordUserInfo;

// ===================================================================

class PB_CloudArenaFightRecordUserInfo : public ::google::protobuf::Message {
 public:
  PB_CloudArenaFightRecordUserInfo();
  virtual ~PB_CloudArenaFightRecordUserInfo();

  PB_CloudArenaFightRecordUserInfo(const PB_CloudArenaFightRecordUserInfo& from);

  inline PB_CloudArenaFightRecordUserInfo& operator=(const PB_CloudArenaFightRecordUserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_CloudArenaFightRecordUserInfo& default_instance();

  void Swap(PB_CloudArenaFightRecordUserInfo* other);

  // implements Message ----------------------------------------------

  PB_CloudArenaFightRecordUserInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_CloudArenaFightRecordUserInfo& from);
  void MergeFrom(const PB_CloudArenaFightRecordUserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::int32 uid() const;
  inline void set_uid(::google::protobuf::int32 value);

  // optional int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 profession = 3;
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 3;
  inline ::google::protobuf::int32 profession() const;
  inline void set_profession(::google::protobuf::int32 value);

  // optional int32 avatar = 4;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 4;
  inline ::google::protobuf::int32 avatar() const;
  inline void set_avatar(::google::protobuf::int32 value);

  // optional int32 headshot_id = 5;
  inline bool has_headshot_id() const;
  inline void clear_headshot_id();
  static const int kHeadshotIdFieldNumber = 5;
  inline ::google::protobuf::int32 headshot_id() const;
  inline void set_headshot_id(::google::protobuf::int32 value);

  // optional string name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 change_score = 7;
  inline bool has_change_score() const;
  inline void clear_change_score();
  static const int kChangeScoreFieldNumber = 7;
  inline ::google::protobuf::int32 change_score() const;
  inline void set_change_score(::google::protobuf::int32 value);

  // optional int32 change_arena_coin = 8;
  inline bool has_change_arena_coin() const;
  inline void clear_change_arena_coin();
  static const int kChangeArenaCoinFieldNumber = 8;
  inline ::google::protobuf::int32 change_arena_coin() const;
  inline void set_change_arena_coin(::google::protobuf::int32 value);

  // optional int32 new_rank = 9;
  inline bool has_new_rank() const;
  inline void clear_new_rank();
  static const int kNewRankFieldNumber = 9;
  inline ::google::protobuf::int32 new_rank() const;
  inline void set_new_rank(::google::protobuf::int32 value);

  // optional int32 old_score = 10;
  inline bool has_old_score() const;
  inline void clear_old_score();
  static const int kOldScoreFieldNumber = 10;
  inline ::google::protobuf::int32 old_score() const;
  inline void set_old_score(::google::protobuf::int32 value);

  // optional int32 old_rank = 11;
  inline bool has_old_rank() const;
  inline void clear_old_rank();
  static const int kOldRankFieldNumber = 11;
  inline ::google::protobuf::int32 old_rank() const;
  inline void set_old_rank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PB_CloudArenaFightRecordUserInfo)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_headshot_id();
  inline void clear_has_headshot_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_change_score();
  inline void clear_has_change_score();
  inline void set_has_change_arena_coin();
  inline void clear_has_change_arena_coin();
  inline void set_has_new_rank();
  inline void clear_has_new_rank();
  inline void set_has_old_score();
  inline void clear_has_old_score();
  inline void set_has_old_rank();
  inline void clear_has_old_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 profession_;
  ::google::protobuf::int32 avatar_;
  ::std::string* name_;
  ::google::protobuf::int32 headshot_id_;
  ::google::protobuf::int32 change_score_;
  ::google::protobuf::int32 change_arena_coin_;
  ::google::protobuf::int32 new_rank_;
  ::google::protobuf::int32 old_score_;
  ::google::protobuf::int32 old_rank_;
  friend void  protobuf_AddDesc_cloud_5farena_5ffight_5frecord_5fuser_5finfo_2eproto();
  friend void protobuf_AssignDesc_cloud_5farena_5ffight_5frecord_5fuser_5finfo_2eproto();
  friend void protobuf_ShutdownFile_cloud_5farena_5ffight_5frecord_5fuser_5finfo_2eproto();

  void InitAsDefaultInstance();
  static PB_CloudArenaFightRecordUserInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// PB_CloudArenaFightRecordUserInfo

// optional int32 uid = 1;
inline bool PB_CloudArenaFightRecordUserInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_CloudArenaFightRecordUserInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
inline ::google::protobuf::int32 PB_CloudArenaFightRecordUserInfo::uid() const {
  // @@protoc_insertion_point(field_get:PB_CloudArenaFightRecordUserInfo.uid)
  return uid_;
}
inline void PB_CloudArenaFightRecordUserInfo::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:PB_CloudArenaFightRecordUserInfo.uid)
}

// optional int32 level = 2;
inline bool PB_CloudArenaFightRecordUserInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_CloudArenaFightRecordUserInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 PB_CloudArenaFightRecordUserInfo::level() const {
  // @@protoc_insertion_point(field_get:PB_CloudArenaFightRecordUserInfo.level)
  return level_;
}
inline void PB_CloudArenaFightRecordUserInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:PB_CloudArenaFightRecordUserInfo.level)
}

// optional int32 profession = 3;
inline bool PB_CloudArenaFightRecordUserInfo::has_profession() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_CloudArenaFightRecordUserInfo::set_has_profession() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_has_profession() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_profession() {
  profession_ = 0;
  clear_has_profession();
}
inline ::google::protobuf::int32 PB_CloudArenaFightRecordUserInfo::profession() const {
  // @@protoc_insertion_point(field_get:PB_CloudArenaFightRecordUserInfo.profession)
  return profession_;
}
inline void PB_CloudArenaFightRecordUserInfo::set_profession(::google::protobuf::int32 value) {
  set_has_profession();
  profession_ = value;
  // @@protoc_insertion_point(field_set:PB_CloudArenaFightRecordUserInfo.profession)
}

// optional int32 avatar = 4;
inline bool PB_CloudArenaFightRecordUserInfo::has_avatar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PB_CloudArenaFightRecordUserInfo::set_has_avatar() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_avatar() {
  avatar_ = 0;
  clear_has_avatar();
}
inline ::google::protobuf::int32 PB_CloudArenaFightRecordUserInfo::avatar() const {
  // @@protoc_insertion_point(field_get:PB_CloudArenaFightRecordUserInfo.avatar)
  return avatar_;
}
inline void PB_CloudArenaFightRecordUserInfo::set_avatar(::google::protobuf::int32 value) {
  set_has_avatar();
  avatar_ = value;
  // @@protoc_insertion_point(field_set:PB_CloudArenaFightRecordUserInfo.avatar)
}

// optional int32 headshot_id = 5;
inline bool PB_CloudArenaFightRecordUserInfo::has_headshot_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PB_CloudArenaFightRecordUserInfo::set_has_headshot_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_has_headshot_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_headshot_id() {
  headshot_id_ = 0;
  clear_has_headshot_id();
}
inline ::google::protobuf::int32 PB_CloudArenaFightRecordUserInfo::headshot_id() const {
  // @@protoc_insertion_point(field_get:PB_CloudArenaFightRecordUserInfo.headshot_id)
  return headshot_id_;
}
inline void PB_CloudArenaFightRecordUserInfo::set_headshot_id(::google::protobuf::int32 value) {
  set_has_headshot_id();
  headshot_id_ = value;
  // @@protoc_insertion_point(field_set:PB_CloudArenaFightRecordUserInfo.headshot_id)
}

// optional string name = 6;
inline bool PB_CloudArenaFightRecordUserInfo::has_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PB_CloudArenaFightRecordUserInfo::set_has_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PB_CloudArenaFightRecordUserInfo::name() const {
  // @@protoc_insertion_point(field_get:PB_CloudArenaFightRecordUserInfo.name)
  return *name_;
}
inline void PB_CloudArenaFightRecordUserInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:PB_CloudArenaFightRecordUserInfo.name)
}
inline void PB_CloudArenaFightRecordUserInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:PB_CloudArenaFightRecordUserInfo.name)
}
inline void PB_CloudArenaFightRecordUserInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PB_CloudArenaFightRecordUserInfo.name)
}
inline ::std::string* PB_CloudArenaFightRecordUserInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:PB_CloudArenaFightRecordUserInfo.name)
  return name_;
}
inline ::std::string* PB_CloudArenaFightRecordUserInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PB_CloudArenaFightRecordUserInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:PB_CloudArenaFightRecordUserInfo.name)
}

// optional int32 change_score = 7;
inline bool PB_CloudArenaFightRecordUserInfo::has_change_score() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PB_CloudArenaFightRecordUserInfo::set_has_change_score() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_has_change_score() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_change_score() {
  change_score_ = 0;
  clear_has_change_score();
}
inline ::google::protobuf::int32 PB_CloudArenaFightRecordUserInfo::change_score() const {
  // @@protoc_insertion_point(field_get:PB_CloudArenaFightRecordUserInfo.change_score)
  return change_score_;
}
inline void PB_CloudArenaFightRecordUserInfo::set_change_score(::google::protobuf::int32 value) {
  set_has_change_score();
  change_score_ = value;
  // @@protoc_insertion_point(field_set:PB_CloudArenaFightRecordUserInfo.change_score)
}

// optional int32 change_arena_coin = 8;
inline bool PB_CloudArenaFightRecordUserInfo::has_change_arena_coin() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PB_CloudArenaFightRecordUserInfo::set_has_change_arena_coin() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_has_change_arena_coin() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_change_arena_coin() {
  change_arena_coin_ = 0;
  clear_has_change_arena_coin();
}
inline ::google::protobuf::int32 PB_CloudArenaFightRecordUserInfo::change_arena_coin() const {
  // @@protoc_insertion_point(field_get:PB_CloudArenaFightRecordUserInfo.change_arena_coin)
  return change_arena_coin_;
}
inline void PB_CloudArenaFightRecordUserInfo::set_change_arena_coin(::google::protobuf::int32 value) {
  set_has_change_arena_coin();
  change_arena_coin_ = value;
  // @@protoc_insertion_point(field_set:PB_CloudArenaFightRecordUserInfo.change_arena_coin)
}

// optional int32 new_rank = 9;
inline bool PB_CloudArenaFightRecordUserInfo::has_new_rank() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PB_CloudArenaFightRecordUserInfo::set_has_new_rank() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_has_new_rank() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_new_rank() {
  new_rank_ = 0;
  clear_has_new_rank();
}
inline ::google::protobuf::int32 PB_CloudArenaFightRecordUserInfo::new_rank() const {
  // @@protoc_insertion_point(field_get:PB_CloudArenaFightRecordUserInfo.new_rank)
  return new_rank_;
}
inline void PB_CloudArenaFightRecordUserInfo::set_new_rank(::google::protobuf::int32 value) {
  set_has_new_rank();
  new_rank_ = value;
  // @@protoc_insertion_point(field_set:PB_CloudArenaFightRecordUserInfo.new_rank)
}

// optional int32 old_score = 10;
inline bool PB_CloudArenaFightRecordUserInfo::has_old_score() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PB_CloudArenaFightRecordUserInfo::set_has_old_score() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_has_old_score() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_old_score() {
  old_score_ = 0;
  clear_has_old_score();
}
inline ::google::protobuf::int32 PB_CloudArenaFightRecordUserInfo::old_score() const {
  // @@protoc_insertion_point(field_get:PB_CloudArenaFightRecordUserInfo.old_score)
  return old_score_;
}
inline void PB_CloudArenaFightRecordUserInfo::set_old_score(::google::protobuf::int32 value) {
  set_has_old_score();
  old_score_ = value;
  // @@protoc_insertion_point(field_set:PB_CloudArenaFightRecordUserInfo.old_score)
}

// optional int32 old_rank = 11;
inline bool PB_CloudArenaFightRecordUserInfo::has_old_rank() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PB_CloudArenaFightRecordUserInfo::set_has_old_rank() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_has_old_rank() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PB_CloudArenaFightRecordUserInfo::clear_old_rank() {
  old_rank_ = 0;
  clear_has_old_rank();
}
inline ::google::protobuf::int32 PB_CloudArenaFightRecordUserInfo::old_rank() const {
  // @@protoc_insertion_point(field_get:PB_CloudArenaFightRecordUserInfo.old_rank)
  return old_rank_;
}
inline void PB_CloudArenaFightRecordUserInfo::set_old_rank(::google::protobuf::int32 value) {
  set_has_old_rank();
  old_rank_ = value;
  // @@protoc_insertion_point(field_set:PB_CloudArenaFightRecordUserInfo.old_rank)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cloud_5farena_5ffight_5frecord_5fuser_5finfo_2eproto__INCLUDED
