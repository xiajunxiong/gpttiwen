// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: platform_battle_partner.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "platform_battle_partner.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PB_PlatformBattlePartner_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_PlatformBattlePartner_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_platform_5fbattle_5fpartner_2eproto() {
  protobuf_AddDesc_platform_5fbattle_5fpartner_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "platform_battle_partner.proto");
  GOOGLE_CHECK(file != NULL);
  PB_PlatformBattlePartner_descriptor_ = file->message_type(0);
  static const int PB_PlatformBattlePartner_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlatformBattlePartner, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlatformBattlePartner, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlatformBattlePartner, partner_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlatformBattlePartner, capability_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlatformBattlePartner, partner_battle_data_),
  };
  PB_PlatformBattlePartner_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_PlatformBattlePartner_descriptor_,
      PB_PlatformBattlePartner::default_instance_,
      PB_PlatformBattlePartner_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlatformBattlePartner, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlatformBattlePartner, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_PlatformBattlePartner));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_platform_5fbattle_5fpartner_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_PlatformBattlePartner_descriptor_, &PB_PlatformBattlePartner::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_platform_5fbattle_5fpartner_2eproto() {
  delete PB_PlatformBattlePartner::default_instance_;
  delete PB_PlatformBattlePartner_reflection_;
}

void protobuf_AddDesc_platform_5fbattle_5fpartner_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_partner_5fbattle_5fdata_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035platform_battle_partner.proto\032\031partner"
    "_battle_data.proto\"\222\001\n\030PB_PlatformBattle"
    "Partner\022\013\n\003pos\030\001 \001(\005\022\r\n\005level\030\002 \001(\005\022\022\n\np"
    "artner_id\030\003 \001(\005\022\022\n\ncapability\030\004 \001(\005\0222\n\023p"
    "artner_battle_data\030\005 \001(\0132\025.PB_PartnerBat"
    "tleData", 207);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "platform_battle_partner.proto", &protobuf_RegisterTypes);
  PB_PlatformBattlePartner::default_instance_ = new PB_PlatformBattlePartner();
  PB_PlatformBattlePartner::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_platform_5fbattle_5fpartner_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_platform_5fbattle_5fpartner_2eproto {
  StaticDescriptorInitializer_platform_5fbattle_5fpartner_2eproto() {
    protobuf_AddDesc_platform_5fbattle_5fpartner_2eproto();
  }
} static_descriptor_initializer_platform_5fbattle_5fpartner_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int PB_PlatformBattlePartner::kPosFieldNumber;
const int PB_PlatformBattlePartner::kLevelFieldNumber;
const int PB_PlatformBattlePartner::kPartnerIdFieldNumber;
const int PB_PlatformBattlePartner::kCapabilityFieldNumber;
const int PB_PlatformBattlePartner::kPartnerBattleDataFieldNumber;
#endif  // !_MSC_VER

PB_PlatformBattlePartner::PB_PlatformBattlePartner()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_PlatformBattlePartner)
}

void PB_PlatformBattlePartner::InitAsDefaultInstance() {
  partner_battle_data_ = const_cast< ::PB_PartnerBattleData*>(&::PB_PartnerBattleData::default_instance());
}

PB_PlatformBattlePartner::PB_PlatformBattlePartner(const PB_PlatformBattlePartner& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_PlatformBattlePartner)
}

void PB_PlatformBattlePartner::SharedCtor() {
  _cached_size_ = 0;
  pos_ = 0;
  level_ = 0;
  partner_id_ = 0;
  capability_ = 0;
  partner_battle_data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_PlatformBattlePartner::~PB_PlatformBattlePartner() {
  // @@protoc_insertion_point(destructor:PB_PlatformBattlePartner)
  SharedDtor();
}

void PB_PlatformBattlePartner::SharedDtor() {
  if (this != default_instance_) {
    delete partner_battle_data_;
  }
}

void PB_PlatformBattlePartner::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_PlatformBattlePartner::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_PlatformBattlePartner_descriptor_;
}

const PB_PlatformBattlePartner& PB_PlatformBattlePartner::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platform_5fbattle_5fpartner_2eproto();
  return *default_instance_;
}

PB_PlatformBattlePartner* PB_PlatformBattlePartner::default_instance_ = NULL;

PB_PlatformBattlePartner* PB_PlatformBattlePartner::New() const {
  return new PB_PlatformBattlePartner;
}

void PB_PlatformBattlePartner::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PB_PlatformBattlePartner*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(pos_, capability_);
    if (has_partner_battle_data()) {
      if (partner_battle_data_ != NULL) partner_battle_data_->::PB_PartnerBattleData::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_PlatformBattlePartner::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_PlatformBattlePartner)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }

      // optional int32 level = 2;
      case 2: {
        if (tag == 16) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_partner_id;
        break;
      }

      // optional int32 partner_id = 3;
      case 3: {
        if (tag == 24) {
         parse_partner_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &partner_id_)));
          set_has_partner_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_capability;
        break;
      }

      // optional int32 capability = 4;
      case 4: {
        if (tag == 32) {
         parse_capability:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &capability_)));
          set_has_capability();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_partner_battle_data;
        break;
      }

      // optional .PB_PartnerBattleData partner_battle_data = 5;
      case 5: {
        if (tag == 42) {
         parse_partner_battle_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_partner_battle_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_PlatformBattlePartner)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_PlatformBattlePartner)
  return false;
#undef DO_
}

void PB_PlatformBattlePartner::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_PlatformBattlePartner)
  // optional int32 pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pos(), output);
  }

  // optional int32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }

  // optional int32 partner_id = 3;
  if (has_partner_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->partner_id(), output);
  }

  // optional int32 capability = 4;
  if (has_capability()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->capability(), output);
  }

  // optional .PB_PartnerBattleData partner_battle_data = 5;
  if (has_partner_battle_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->partner_battle_data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB_PlatformBattlePartner)
}

::google::protobuf::uint8* PB_PlatformBattlePartner::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_PlatformBattlePartner)
  // optional int32 pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pos(), target);
  }

  // optional int32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }

  // optional int32 partner_id = 3;
  if (has_partner_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->partner_id(), target);
  }

  // optional int32 capability = 4;
  if (has_capability()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->capability(), target);
  }

  // optional .PB_PartnerBattleData partner_battle_data = 5;
  if (has_partner_battle_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->partner_battle_data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB_PlatformBattlePartner)
  return target;
}

int PB_PlatformBattlePartner::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // optional int32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int32 partner_id = 3;
    if (has_partner_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->partner_id());
    }

    // optional int32 capability = 4;
    if (has_capability()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->capability());
    }

    // optional .PB_PartnerBattleData partner_battle_data = 5;
    if (has_partner_battle_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->partner_battle_data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_PlatformBattlePartner::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_PlatformBattlePartner* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_PlatformBattlePartner*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_PlatformBattlePartner::MergeFrom(const PB_PlatformBattlePartner& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_partner_id()) {
      set_partner_id(from.partner_id());
    }
    if (from.has_capability()) {
      set_capability(from.capability());
    }
    if (from.has_partner_battle_data()) {
      mutable_partner_battle_data()->::PB_PartnerBattleData::MergeFrom(from.partner_battle_data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_PlatformBattlePartner::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_PlatformBattlePartner::CopyFrom(const PB_PlatformBattlePartner& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_PlatformBattlePartner::IsInitialized() const {

  return true;
}

void PB_PlatformBattlePartner::Swap(PB_PlatformBattlePartner* other) {
  if (other != this) {
    std::swap(pos_, other->pos_);
    std::swap(level_, other->level_);
    std::swap(partner_id_, other->partner_id_);
    std::swap(capability_, other->capability_);
    std::swap(partner_battle_data_, other->partner_battle_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_PlatformBattlePartner::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_PlatformBattlePartner_descriptor_;
  metadata.reflection = PB_PlatformBattlePartner_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
