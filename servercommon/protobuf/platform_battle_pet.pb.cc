// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: platform_battle_pet.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "platform_battle_pet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PB_PlatformBattlePet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_PlatformBattlePet_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_platform_5fbattle_5fpet_2eproto() {
  protobuf_AddDesc_platform_5fbattle_5fpet_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "platform_battle_pet.proto");
  GOOGLE_CHECK(file != NULL);
  PB_PlatformBattlePet_descriptor_ = file->message_type(0);
  static const int PB_PlatformBattlePet_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlatformBattlePet, pet_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlatformBattlePet, pet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlatformBattlePet, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlatformBattlePet, pet_capability_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlatformBattlePet, pet_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlatformBattlePet, pet_strengthen_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlatformBattlePet, pet_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlatformBattlePet, pet_battle_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlatformBattlePet, item_unique_id_),
  };
  PB_PlatformBattlePet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_PlatformBattlePet_descriptor_,
      PB_PlatformBattlePet::default_instance_,
      PB_PlatformBattlePet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlatformBattlePet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlatformBattlePet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_PlatformBattlePet));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_platform_5fbattle_5fpet_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_PlatformBattlePet_descriptor_, &PB_PlatformBattlePet::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_platform_5fbattle_5fpet_2eproto() {
  delete PB_PlatformBattlePet::default_instance_;
  delete PB_PlatformBattlePet_reflection_;
}

void protobuf_AddDesc_platform_5fbattle_5fpet_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_pet_5fbattle_5fdata_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031platform_battle_pet.proto\032\025pet_battle_"
    "data.proto\"\345\001\n\024PB_PlatformBattlePet\022\021\n\tp"
    "et_index\030\001 \001(\005\022\016\n\006pet_id\030\002 \001(\005\022\013\n\003pos\030\003 "
    "\001(\005\022\026\n\016pet_capability\030\004 \001(\005\022\021\n\tpet_level"
    "\030\005 \001(\005\022\034\n\024pet_strengthen_level\030\006 \001(\005\022\020\n\010"
    "pet_name\030\007 \001(\t\022*\n\017pet_battle_data\030\010 \001(\0132"
    "\021.PB_PetBattleData\022\026\n\016item_unique_id\030\t \001"
    "(\003", 282);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "platform_battle_pet.proto", &protobuf_RegisterTypes);
  PB_PlatformBattlePet::default_instance_ = new PB_PlatformBattlePet();
  PB_PlatformBattlePet::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_platform_5fbattle_5fpet_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_platform_5fbattle_5fpet_2eproto {
  StaticDescriptorInitializer_platform_5fbattle_5fpet_2eproto() {
    protobuf_AddDesc_platform_5fbattle_5fpet_2eproto();
  }
} static_descriptor_initializer_platform_5fbattle_5fpet_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int PB_PlatformBattlePet::kPetIndexFieldNumber;
const int PB_PlatformBattlePet::kPetIdFieldNumber;
const int PB_PlatformBattlePet::kPosFieldNumber;
const int PB_PlatformBattlePet::kPetCapabilityFieldNumber;
const int PB_PlatformBattlePet::kPetLevelFieldNumber;
const int PB_PlatformBattlePet::kPetStrengthenLevelFieldNumber;
const int PB_PlatformBattlePet::kPetNameFieldNumber;
const int PB_PlatformBattlePet::kPetBattleDataFieldNumber;
const int PB_PlatformBattlePet::kItemUniqueIdFieldNumber;
#endif  // !_MSC_VER

PB_PlatformBattlePet::PB_PlatformBattlePet()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_PlatformBattlePet)
}

void PB_PlatformBattlePet::InitAsDefaultInstance() {
  pet_battle_data_ = const_cast< ::PB_PetBattleData*>(&::PB_PetBattleData::default_instance());
}

PB_PlatformBattlePet::PB_PlatformBattlePet(const PB_PlatformBattlePet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_PlatformBattlePet)
}

void PB_PlatformBattlePet::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  pet_index_ = 0;
  pet_id_ = 0;
  pos_ = 0;
  pet_capability_ = 0;
  pet_level_ = 0;
  pet_strengthen_level_ = 0;
  pet_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pet_battle_data_ = NULL;
  item_unique_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_PlatformBattlePet::~PB_PlatformBattlePet() {
  // @@protoc_insertion_point(destructor:PB_PlatformBattlePet)
  SharedDtor();
}

void PB_PlatformBattlePet::SharedDtor() {
  if (pet_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pet_name_;
  }
  if (this != default_instance_) {
    delete pet_battle_data_;
  }
}

void PB_PlatformBattlePet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_PlatformBattlePet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_PlatformBattlePet_descriptor_;
}

const PB_PlatformBattlePet& PB_PlatformBattlePet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platform_5fbattle_5fpet_2eproto();
  return *default_instance_;
}

PB_PlatformBattlePet* PB_PlatformBattlePet::default_instance_ = NULL;

PB_PlatformBattlePet* PB_PlatformBattlePet::New() const {
  return new PB_PlatformBattlePet;
}

void PB_PlatformBattlePet::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PB_PlatformBattlePet*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(pet_index_, pet_strengthen_level_);
    if (has_pet_name()) {
      if (pet_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        pet_name_->clear();
      }
    }
    if (has_pet_battle_data()) {
      if (pet_battle_data_ != NULL) pet_battle_data_->::PB_PetBattleData::Clear();
    }
  }
  item_unique_id_ = GOOGLE_LONGLONG(0);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_PlatformBattlePet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_PlatformBattlePet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pet_index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pet_index_)));
          set_has_pet_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_pet_id;
        break;
      }

      // optional int32 pet_id = 2;
      case 2: {
        if (tag == 16) {
         parse_pet_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pet_id_)));
          set_has_pet_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pos;
        break;
      }

      // optional int32 pos = 3;
      case 3: {
        if (tag == 24) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pet_capability;
        break;
      }

      // optional int32 pet_capability = 4;
      case 4: {
        if (tag == 32) {
         parse_pet_capability:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pet_capability_)));
          set_has_pet_capability();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_pet_level;
        break;
      }

      // optional int32 pet_level = 5;
      case 5: {
        if (tag == 40) {
         parse_pet_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pet_level_)));
          set_has_pet_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_pet_strengthen_level;
        break;
      }

      // optional int32 pet_strengthen_level = 6;
      case 6: {
        if (tag == 48) {
         parse_pet_strengthen_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pet_strengthen_level_)));
          set_has_pet_strengthen_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_pet_name;
        break;
      }

      // optional string pet_name = 7;
      case 7: {
        if (tag == 58) {
         parse_pet_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pet_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pet_name().data(), this->pet_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pet_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_pet_battle_data;
        break;
      }

      // optional .PB_PetBattleData pet_battle_data = 8;
      case 8: {
        if (tag == 66) {
         parse_pet_battle_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pet_battle_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_item_unique_id;
        break;
      }

      // optional int64 item_unique_id = 9;
      case 9: {
        if (tag == 72) {
         parse_item_unique_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &item_unique_id_)));
          set_has_item_unique_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_PlatformBattlePet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_PlatformBattlePet)
  return false;
#undef DO_
}

void PB_PlatformBattlePet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_PlatformBattlePet)
  // optional int32 pet_index = 1;
  if (has_pet_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pet_index(), output);
  }

  // optional int32 pet_id = 2;
  if (has_pet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pet_id(), output);
  }

  // optional int32 pos = 3;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos(), output);
  }

  // optional int32 pet_capability = 4;
  if (has_pet_capability()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pet_capability(), output);
  }

  // optional int32 pet_level = 5;
  if (has_pet_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pet_level(), output);
  }

  // optional int32 pet_strengthen_level = 6;
  if (has_pet_strengthen_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->pet_strengthen_level(), output);
  }

  // optional string pet_name = 7;
  if (has_pet_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pet_name().data(), this->pet_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pet_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->pet_name(), output);
  }

  // optional .PB_PetBattleData pet_battle_data = 8;
  if (has_pet_battle_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->pet_battle_data(), output);
  }

  // optional int64 item_unique_id = 9;
  if (has_item_unique_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->item_unique_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB_PlatformBattlePet)
}

::google::protobuf::uint8* PB_PlatformBattlePet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_PlatformBattlePet)
  // optional int32 pet_index = 1;
  if (has_pet_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pet_index(), target);
  }

  // optional int32 pet_id = 2;
  if (has_pet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pet_id(), target);
  }

  // optional int32 pos = 3;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos(), target);
  }

  // optional int32 pet_capability = 4;
  if (has_pet_capability()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pet_capability(), target);
  }

  // optional int32 pet_level = 5;
  if (has_pet_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pet_level(), target);
  }

  // optional int32 pet_strengthen_level = 6;
  if (has_pet_strengthen_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->pet_strengthen_level(), target);
  }

  // optional string pet_name = 7;
  if (has_pet_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pet_name().data(), this->pet_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pet_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->pet_name(), target);
  }

  // optional .PB_PetBattleData pet_battle_data = 8;
  if (has_pet_battle_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->pet_battle_data(), target);
  }

  // optional int64 item_unique_id = 9;
  if (has_item_unique_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->item_unique_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB_PlatformBattlePet)
  return target;
}

int PB_PlatformBattlePet::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pet_index = 1;
    if (has_pet_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pet_index());
    }

    // optional int32 pet_id = 2;
    if (has_pet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pet_id());
    }

    // optional int32 pos = 3;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // optional int32 pet_capability = 4;
    if (has_pet_capability()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pet_capability());
    }

    // optional int32 pet_level = 5;
    if (has_pet_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pet_level());
    }

    // optional int32 pet_strengthen_level = 6;
    if (has_pet_strengthen_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pet_strengthen_level());
    }

    // optional string pet_name = 7;
    if (has_pet_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pet_name());
    }

    // optional .PB_PetBattleData pet_battle_data = 8;
    if (has_pet_battle_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pet_battle_data());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 item_unique_id = 9;
    if (has_item_unique_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->item_unique_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_PlatformBattlePet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_PlatformBattlePet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_PlatformBattlePet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_PlatformBattlePet::MergeFrom(const PB_PlatformBattlePet& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pet_index()) {
      set_pet_index(from.pet_index());
    }
    if (from.has_pet_id()) {
      set_pet_id(from.pet_id());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_pet_capability()) {
      set_pet_capability(from.pet_capability());
    }
    if (from.has_pet_level()) {
      set_pet_level(from.pet_level());
    }
    if (from.has_pet_strengthen_level()) {
      set_pet_strengthen_level(from.pet_strengthen_level());
    }
    if (from.has_pet_name()) {
      set_pet_name(from.pet_name());
    }
    if (from.has_pet_battle_data()) {
      mutable_pet_battle_data()->::PB_PetBattleData::MergeFrom(from.pet_battle_data());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_item_unique_id()) {
      set_item_unique_id(from.item_unique_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_PlatformBattlePet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_PlatformBattlePet::CopyFrom(const PB_PlatformBattlePet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_PlatformBattlePet::IsInitialized() const {

  return true;
}

void PB_PlatformBattlePet::Swap(PB_PlatformBattlePet* other) {
  if (other != this) {
    std::swap(pet_index_, other->pet_index_);
    std::swap(pet_id_, other->pet_id_);
    std::swap(pos_, other->pos_);
    std::swap(pet_capability_, other->pet_capability_);
    std::swap(pet_level_, other->pet_level_);
    std::swap(pet_strengthen_level_, other->pet_strengthen_level_);
    std::swap(pet_name_, other->pet_name_);
    std::swap(pet_battle_data_, other->pet_battle_data_);
    std::swap(item_unique_id_, other->item_unique_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_PlatformBattlePet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_PlatformBattlePet_descriptor_;
  metadata.reflection = PB_PlatformBattlePet_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
