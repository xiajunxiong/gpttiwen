// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: platform_battle_role_data.proto

#ifndef PROTOBUF_platform_5fbattle_5frole_5fdata_2eproto__INCLUDED
#define PROTOBUF_platform_5fbattle_5frole_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "platform_battle_pet.pb.h"
#include "platform_battle_partner.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_platform_5fbattle_5frole_5fdata_2eproto();
void protobuf_AssignDesc_platform_5fbattle_5frole_5fdata_2eproto();
void protobuf_ShutdownFile_platform_5fbattle_5frole_5fdata_2eproto();

class PB_PlatformBattleRoleData;

// ===================================================================

class PB_PlatformBattleRoleData : public ::google::protobuf::Message {
 public:
  PB_PlatformBattleRoleData();
  virtual ~PB_PlatformBattleRoleData();

  PB_PlatformBattleRoleData(const PB_PlatformBattleRoleData& from);

  inline PB_PlatformBattleRoleData& operator=(const PB_PlatformBattleRoleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_PlatformBattleRoleData& default_instance();

  void Swap(PB_PlatformBattleRoleData* other);

  // implements Message ----------------------------------------------

  PB_PlatformBattleRoleData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_PlatformBattleRoleData& from);
  void MergeFrom(const PB_PlatformBattleRoleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);

  // optional int32 role_pet_train_skill_level = 2;
  inline bool has_role_pet_train_skill_level() const;
  inline void clear_role_pet_train_skill_level();
  static const int kRolePetTrainSkillLevelFieldNumber = 2;
  inline ::google::protobuf::int32 role_pet_train_skill_level() const;
  inline void set_role_pet_train_skill_level(::google::protobuf::int32 value);

  // repeated .PB_PlatformBattlePet battling_pet = 3;
  inline int battling_pet_size() const;
  inline void clear_battling_pet();
  static const int kBattlingPetFieldNumber = 3;
  inline const ::PB_PlatformBattlePet& battling_pet(int index) const;
  inline ::PB_PlatformBattlePet* mutable_battling_pet(int index);
  inline ::PB_PlatformBattlePet* add_battling_pet();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_PlatformBattlePet >&
      battling_pet() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_PlatformBattlePet >*
      mutable_battling_pet();

  // repeated .PB_PlatformBattlePartner battling_partner = 4;
  inline int battling_partner_size() const;
  inline void clear_battling_partner();
  static const int kBattlingPartnerFieldNumber = 4;
  inline const ::PB_PlatformBattlePartner& battling_partner(int index) const;
  inline ::PB_PlatformBattlePartner* mutable_battling_partner(int index);
  inline ::PB_PlatformBattlePartner* add_battling_partner();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_PlatformBattlePartner >&
      battling_partner() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_PlatformBattlePartner >*
      mutable_battling_partner();

  // optional int32 role_level = 5;
  inline bool has_role_level() const;
  inline void clear_role_level();
  static const int kRoleLevelFieldNumber = 5;
  inline ::google::protobuf::int32 role_level() const;
  inline void set_role_level(::google::protobuf::int32 value);

  // optional int32 avatar_type = 6;
  inline bool has_avatar_type() const;
  inline void clear_avatar_type();
  static const int kAvatarTypeFieldNumber = 6;
  inline ::google::protobuf::int32 avatar_type() const;
  inline void set_avatar_type(::google::protobuf::int32 value);

  // optional int32 headshot_id = 7;
  inline bool has_headshot_id() const;
  inline void clear_headshot_id();
  static const int kHeadshotIdFieldNumber = 7;
  inline ::google::protobuf::int32 headshot_id() const;
  inline void set_headshot_id(::google::protobuf::int32 value);

  // optional string role_name = 8;
  inline bool has_role_name() const;
  inline void clear_role_name();
  static const int kRoleNameFieldNumber = 8;
  inline const ::std::string& role_name() const;
  inline void set_role_name(const ::std::string& value);
  inline void set_role_name(const char* value);
  inline void set_role_name(const char* value, size_t size);
  inline ::std::string* mutable_role_name();
  inline ::std::string* release_role_name();
  inline void set_allocated_role_name(::std::string* role_name);

  // optional int32 prof = 9;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 9;
  inline ::google::protobuf::int32 prof() const;
  inline void set_prof(::google::protobuf::int32 value);

  // optional uint32 top1_time = 10;
  inline bool has_top1_time() const;
  inline void clear_top1_time();
  static const int kTop1TimeFieldNumber = 10;
  inline ::google::protobuf::uint32 top1_time() const;
  inline void set_top1_time(::google::protobuf::uint32 value);

  // optional int32 param1 = 11;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 11;
  inline ::google::protobuf::int32 param1() const;
  inline void set_param1(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PB_PlatformBattleRoleData)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_role_pet_train_skill_level();
  inline void clear_has_role_pet_train_skill_level();
  inline void set_has_role_level();
  inline void clear_has_role_level();
  inline void set_has_avatar_type();
  inline void clear_has_avatar_type();
  inline void set_has_headshot_id();
  inline void clear_has_headshot_id();
  inline void set_has_role_name();
  inline void clear_has_role_name();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_top1_time();
  inline void clear_has_top1_time();
  inline void set_has_param1();
  inline void clear_has_param1();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 role_id_;
  ::google::protobuf::int32 role_pet_train_skill_level_;
  ::google::protobuf::RepeatedPtrField< ::PB_PlatformBattlePet > battling_pet_;
  ::google::protobuf::RepeatedPtrField< ::PB_PlatformBattlePartner > battling_partner_;
  ::google::protobuf::int32 role_level_;
  ::google::protobuf::int32 avatar_type_;
  ::std::string* role_name_;
  ::google::protobuf::int32 headshot_id_;
  ::google::protobuf::int32 prof_;
  ::google::protobuf::uint32 top1_time_;
  ::google::protobuf::int32 param1_;
  friend void  protobuf_AddDesc_platform_5fbattle_5frole_5fdata_2eproto();
  friend void protobuf_AssignDesc_platform_5fbattle_5frole_5fdata_2eproto();
  friend void protobuf_ShutdownFile_platform_5fbattle_5frole_5fdata_2eproto();

  void InitAsDefaultInstance();
  static PB_PlatformBattleRoleData* default_instance_;
};
// ===================================================================


// ===================================================================

// PB_PlatformBattleRoleData

// optional int32 role_id = 1;
inline bool PB_PlatformBattleRoleData::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_PlatformBattleRoleData::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_PlatformBattleRoleData::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_PlatformBattleRoleData::clear_role_id() {
  role_id_ = 0;
  clear_has_role_id();
}
inline ::google::protobuf::int32 PB_PlatformBattleRoleData::role_id() const {
  // @@protoc_insertion_point(field_get:PB_PlatformBattleRoleData.role_id)
  return role_id_;
}
inline void PB_PlatformBattleRoleData::set_role_id(::google::protobuf::int32 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:PB_PlatformBattleRoleData.role_id)
}

// optional int32 role_pet_train_skill_level = 2;
inline bool PB_PlatformBattleRoleData::has_role_pet_train_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_PlatformBattleRoleData::set_has_role_pet_train_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_PlatformBattleRoleData::clear_has_role_pet_train_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_PlatformBattleRoleData::clear_role_pet_train_skill_level() {
  role_pet_train_skill_level_ = 0;
  clear_has_role_pet_train_skill_level();
}
inline ::google::protobuf::int32 PB_PlatformBattleRoleData::role_pet_train_skill_level() const {
  // @@protoc_insertion_point(field_get:PB_PlatformBattleRoleData.role_pet_train_skill_level)
  return role_pet_train_skill_level_;
}
inline void PB_PlatformBattleRoleData::set_role_pet_train_skill_level(::google::protobuf::int32 value) {
  set_has_role_pet_train_skill_level();
  role_pet_train_skill_level_ = value;
  // @@protoc_insertion_point(field_set:PB_PlatformBattleRoleData.role_pet_train_skill_level)
}

// repeated .PB_PlatformBattlePet battling_pet = 3;
inline int PB_PlatformBattleRoleData::battling_pet_size() const {
  return battling_pet_.size();
}
inline void PB_PlatformBattleRoleData::clear_battling_pet() {
  battling_pet_.Clear();
}
inline const ::PB_PlatformBattlePet& PB_PlatformBattleRoleData::battling_pet(int index) const {
  // @@protoc_insertion_point(field_get:PB_PlatformBattleRoleData.battling_pet)
  return battling_pet_.Get(index);
}
inline ::PB_PlatformBattlePet* PB_PlatformBattleRoleData::mutable_battling_pet(int index) {
  // @@protoc_insertion_point(field_mutable:PB_PlatformBattleRoleData.battling_pet)
  return battling_pet_.Mutable(index);
}
inline ::PB_PlatformBattlePet* PB_PlatformBattleRoleData::add_battling_pet() {
  // @@protoc_insertion_point(field_add:PB_PlatformBattleRoleData.battling_pet)
  return battling_pet_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_PlatformBattlePet >&
PB_PlatformBattleRoleData::battling_pet() const {
  // @@protoc_insertion_point(field_list:PB_PlatformBattleRoleData.battling_pet)
  return battling_pet_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_PlatformBattlePet >*
PB_PlatformBattleRoleData::mutable_battling_pet() {
  // @@protoc_insertion_point(field_mutable_list:PB_PlatformBattleRoleData.battling_pet)
  return &battling_pet_;
}

// repeated .PB_PlatformBattlePartner battling_partner = 4;
inline int PB_PlatformBattleRoleData::battling_partner_size() const {
  return battling_partner_.size();
}
inline void PB_PlatformBattleRoleData::clear_battling_partner() {
  battling_partner_.Clear();
}
inline const ::PB_PlatformBattlePartner& PB_PlatformBattleRoleData::battling_partner(int index) const {
  // @@protoc_insertion_point(field_get:PB_PlatformBattleRoleData.battling_partner)
  return battling_partner_.Get(index);
}
inline ::PB_PlatformBattlePartner* PB_PlatformBattleRoleData::mutable_battling_partner(int index) {
  // @@protoc_insertion_point(field_mutable:PB_PlatformBattleRoleData.battling_partner)
  return battling_partner_.Mutable(index);
}
inline ::PB_PlatformBattlePartner* PB_PlatformBattleRoleData::add_battling_partner() {
  // @@protoc_insertion_point(field_add:PB_PlatformBattleRoleData.battling_partner)
  return battling_partner_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_PlatformBattlePartner >&
PB_PlatformBattleRoleData::battling_partner() const {
  // @@protoc_insertion_point(field_list:PB_PlatformBattleRoleData.battling_partner)
  return battling_partner_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_PlatformBattlePartner >*
PB_PlatformBattleRoleData::mutable_battling_partner() {
  // @@protoc_insertion_point(field_mutable_list:PB_PlatformBattleRoleData.battling_partner)
  return &battling_partner_;
}

// optional int32 role_level = 5;
inline bool PB_PlatformBattleRoleData::has_role_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PB_PlatformBattleRoleData::set_has_role_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PB_PlatformBattleRoleData::clear_has_role_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PB_PlatformBattleRoleData::clear_role_level() {
  role_level_ = 0;
  clear_has_role_level();
}
inline ::google::protobuf::int32 PB_PlatformBattleRoleData::role_level() const {
  // @@protoc_insertion_point(field_get:PB_PlatformBattleRoleData.role_level)
  return role_level_;
}
inline void PB_PlatformBattleRoleData::set_role_level(::google::protobuf::int32 value) {
  set_has_role_level();
  role_level_ = value;
  // @@protoc_insertion_point(field_set:PB_PlatformBattleRoleData.role_level)
}

// optional int32 avatar_type = 6;
inline bool PB_PlatformBattleRoleData::has_avatar_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PB_PlatformBattleRoleData::set_has_avatar_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PB_PlatformBattleRoleData::clear_has_avatar_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PB_PlatformBattleRoleData::clear_avatar_type() {
  avatar_type_ = 0;
  clear_has_avatar_type();
}
inline ::google::protobuf::int32 PB_PlatformBattleRoleData::avatar_type() const {
  // @@protoc_insertion_point(field_get:PB_PlatformBattleRoleData.avatar_type)
  return avatar_type_;
}
inline void PB_PlatformBattleRoleData::set_avatar_type(::google::protobuf::int32 value) {
  set_has_avatar_type();
  avatar_type_ = value;
  // @@protoc_insertion_point(field_set:PB_PlatformBattleRoleData.avatar_type)
}

// optional int32 headshot_id = 7;
inline bool PB_PlatformBattleRoleData::has_headshot_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PB_PlatformBattleRoleData::set_has_headshot_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PB_PlatformBattleRoleData::clear_has_headshot_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PB_PlatformBattleRoleData::clear_headshot_id() {
  headshot_id_ = 0;
  clear_has_headshot_id();
}
inline ::google::protobuf::int32 PB_PlatformBattleRoleData::headshot_id() const {
  // @@protoc_insertion_point(field_get:PB_PlatformBattleRoleData.headshot_id)
  return headshot_id_;
}
inline void PB_PlatformBattleRoleData::set_headshot_id(::google::protobuf::int32 value) {
  set_has_headshot_id();
  headshot_id_ = value;
  // @@protoc_insertion_point(field_set:PB_PlatformBattleRoleData.headshot_id)
}

// optional string role_name = 8;
inline bool PB_PlatformBattleRoleData::has_role_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PB_PlatformBattleRoleData::set_has_role_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PB_PlatformBattleRoleData::clear_has_role_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PB_PlatformBattleRoleData::clear_role_name() {
  if (role_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    role_name_->clear();
  }
  clear_has_role_name();
}
inline const ::std::string& PB_PlatformBattleRoleData::role_name() const {
  // @@protoc_insertion_point(field_get:PB_PlatformBattleRoleData.role_name)
  return *role_name_;
}
inline void PB_PlatformBattleRoleData::set_role_name(const ::std::string& value) {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
  // @@protoc_insertion_point(field_set:PB_PlatformBattleRoleData.role_name)
}
inline void PB_PlatformBattleRoleData::set_role_name(const char* value) {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:PB_PlatformBattleRoleData.role_name)
}
inline void PB_PlatformBattleRoleData::set_role_name(const char* value, size_t size) {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    role_name_ = new ::std::string;
  }
  role_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PB_PlatformBattleRoleData.role_name)
}
inline ::std::string* PB_PlatformBattleRoleData::mutable_role_name() {
  set_has_role_name();
  if (role_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    role_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:PB_PlatformBattleRoleData.role_name)
  return role_name_;
}
inline ::std::string* PB_PlatformBattleRoleData::release_role_name() {
  clear_has_role_name();
  if (role_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = role_name_;
    role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PB_PlatformBattleRoleData::set_allocated_role_name(::std::string* role_name) {
  if (role_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete role_name_;
  }
  if (role_name) {
    set_has_role_name();
    role_name_ = role_name;
  } else {
    clear_has_role_name();
    role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:PB_PlatformBattleRoleData.role_name)
}

// optional int32 prof = 9;
inline bool PB_PlatformBattleRoleData::has_prof() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PB_PlatformBattleRoleData::set_has_prof() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PB_PlatformBattleRoleData::clear_has_prof() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PB_PlatformBattleRoleData::clear_prof() {
  prof_ = 0;
  clear_has_prof();
}
inline ::google::protobuf::int32 PB_PlatformBattleRoleData::prof() const {
  // @@protoc_insertion_point(field_get:PB_PlatformBattleRoleData.prof)
  return prof_;
}
inline void PB_PlatformBattleRoleData::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
  // @@protoc_insertion_point(field_set:PB_PlatformBattleRoleData.prof)
}

// optional uint32 top1_time = 10;
inline bool PB_PlatformBattleRoleData::has_top1_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PB_PlatformBattleRoleData::set_has_top1_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PB_PlatformBattleRoleData::clear_has_top1_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PB_PlatformBattleRoleData::clear_top1_time() {
  top1_time_ = 0u;
  clear_has_top1_time();
}
inline ::google::protobuf::uint32 PB_PlatformBattleRoleData::top1_time() const {
  // @@protoc_insertion_point(field_get:PB_PlatformBattleRoleData.top1_time)
  return top1_time_;
}
inline void PB_PlatformBattleRoleData::set_top1_time(::google::protobuf::uint32 value) {
  set_has_top1_time();
  top1_time_ = value;
  // @@protoc_insertion_point(field_set:PB_PlatformBattleRoleData.top1_time)
}

// optional int32 param1 = 11;
inline bool PB_PlatformBattleRoleData::has_param1() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PB_PlatformBattleRoleData::set_has_param1() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PB_PlatformBattleRoleData::clear_has_param1() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PB_PlatformBattleRoleData::clear_param1() {
  param1_ = 0;
  clear_has_param1();
}
inline ::google::protobuf::int32 PB_PlatformBattleRoleData::param1() const {
  // @@protoc_insertion_point(field_get:PB_PlatformBattleRoleData.param1)
  return param1_;
}
inline void PB_PlatformBattleRoleData::set_param1(::google::protobuf::int32 value) {
  set_has_param1();
  param1_ = value;
  // @@protoc_insertion_point(field_set:PB_PlatformBattleRoleData.param1)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_platform_5fbattle_5frole_5fdata_2eproto__INCLUDED
