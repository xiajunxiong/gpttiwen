// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: role_battle_data.proto

#ifndef PROTOBUF_role_5fbattle_5fdata_2eproto__INCLUDED
#define PROTOBUF_role_5fbattle_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "battle_character_data.pb.h"
#include "pet_battle_data.pb.h"
#include "partner_battle_data.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_role_5fbattle_5fdata_2eproto();
void protobuf_AssignDesc_role_5fbattle_5fdata_2eproto();
void protobuf_ShutdownFile_role_5fbattle_5fdata_2eproto();

class PB_RoleBattleData;
class PB_RoleBattleData_AttrInfo;
class PB_RoleBattleData_BattleFabao;
class PB_RoleBattleData_PetPartnerBattleData;
class PB_RoleBattleData_BattleHeartSkill;
class PB_RoleBattleData_BattleHallowData;
class PB_RoleBattleData_BattleHuanShouSkill;

// ===================================================================

class PB_RoleBattleData_AttrInfo : public ::google::protobuf::Message {
 public:
  PB_RoleBattleData_AttrInfo();
  virtual ~PB_RoleBattleData_AttrInfo();

  PB_RoleBattleData_AttrInfo(const PB_RoleBattleData_AttrInfo& from);

  inline PB_RoleBattleData_AttrInfo& operator=(const PB_RoleBattleData_AttrInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_RoleBattleData_AttrInfo& default_instance();

  void Swap(PB_RoleBattleData_AttrInfo* other);

  // implements Message ----------------------------------------------

  PB_RoleBattleData_AttrInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_RoleBattleData_AttrInfo& from);
  void MergeFrom(const PB_RoleBattleData_AttrInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 attr_type = 1;
  inline bool has_attr_type() const;
  inline void clear_attr_type();
  static const int kAttrTypeFieldNumber = 1;
  inline ::google::protobuf::int32 attr_type() const;
  inline void set_attr_type(::google::protobuf::int32 value);

  // optional int32 attr_value = 2;
  inline bool has_attr_value() const;
  inline void clear_attr_value();
  static const int kAttrValueFieldNumber = 2;
  inline ::google::protobuf::int32 attr_value() const;
  inline void set_attr_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PB_RoleBattleData.AttrInfo)
 private:
  inline void set_has_attr_type();
  inline void clear_has_attr_type();
  inline void set_has_attr_value();
  inline void clear_has_attr_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 attr_type_;
  ::google::protobuf::int32 attr_value_;
  friend void  protobuf_AddDesc_role_5fbattle_5fdata_2eproto();
  friend void protobuf_AssignDesc_role_5fbattle_5fdata_2eproto();
  friend void protobuf_ShutdownFile_role_5fbattle_5fdata_2eproto();

  void InitAsDefaultInstance();
  static PB_RoleBattleData_AttrInfo* default_instance_;
};
// -------------------------------------------------------------------

class PB_RoleBattleData_BattleFabao : public ::google::protobuf::Message {
 public:
  PB_RoleBattleData_BattleFabao();
  virtual ~PB_RoleBattleData_BattleFabao();

  PB_RoleBattleData_BattleFabao(const PB_RoleBattleData_BattleFabao& from);

  inline PB_RoleBattleData_BattleFabao& operator=(const PB_RoleBattleData_BattleFabao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_RoleBattleData_BattleFabao& default_instance();

  void Swap(PB_RoleBattleData_BattleFabao* other);

  // implements Message ----------------------------------------------

  PB_RoleBattleData_BattleFabao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_RoleBattleData_BattleFabao& from);
  void MergeFrom(const PB_RoleBattleData_BattleFabao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fabao_id = 1;
  inline bool has_fabao_id() const;
  inline void clear_fabao_id();
  static const int kFabaoIdFieldNumber = 1;
  inline ::google::protobuf::int32 fabao_id() const;
  inline void set_fabao_id(::google::protobuf::int32 value);

  // optional int32 fabao_level = 2;
  inline bool has_fabao_level() const;
  inline void clear_fabao_level();
  static const int kFabaoLevelFieldNumber = 2;
  inline ::google::protobuf::int32 fabao_level() const;
  inline void set_fabao_level(::google::protobuf::int32 value);

  // optional int32 fabao_skill_type = 3;
  inline bool has_fabao_skill_type() const;
  inline void clear_fabao_skill_type();
  static const int kFabaoSkillTypeFieldNumber = 3;
  inline ::google::protobuf::int32 fabao_skill_type() const;
  inline void set_fabao_skill_type(::google::protobuf::int32 value);

  // optional int32 fabao_grade = 4;
  inline bool has_fabao_grade() const;
  inline void clear_fabao_grade();
  static const int kFabaoGradeFieldNumber = 4;
  inline ::google::protobuf::int32 fabao_grade() const;
  inline void set_fabao_grade(::google::protobuf::int32 value);

  // optional int32 fabao_effect_percent_num = 5;
  inline bool has_fabao_effect_percent_num() const;
  inline void clear_fabao_effect_percent_num();
  static const int kFabaoEffectPercentNumFieldNumber = 5;
  inline ::google::protobuf::int32 fabao_effect_percent_num() const;
  inline void set_fabao_effect_percent_num(::google::protobuf::int32 value);

  // optional int32 fabao_effect_percent_num_2 = 6;
  inline bool has_fabao_effect_percent_num_2() const;
  inline void clear_fabao_effect_percent_num_2();
  static const int kFabaoEffectPercentNum2FieldNumber = 6;
  inline ::google::protobuf::int32 fabao_effect_percent_num_2() const;
  inline void set_fabao_effect_percent_num_2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PB_RoleBattleData.BattleFabao)
 private:
  inline void set_has_fabao_id();
  inline void clear_has_fabao_id();
  inline void set_has_fabao_level();
  inline void clear_has_fabao_level();
  inline void set_has_fabao_skill_type();
  inline void clear_has_fabao_skill_type();
  inline void set_has_fabao_grade();
  inline void clear_has_fabao_grade();
  inline void set_has_fabao_effect_percent_num();
  inline void clear_has_fabao_effect_percent_num();
  inline void set_has_fabao_effect_percent_num_2();
  inline void clear_has_fabao_effect_percent_num_2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 fabao_id_;
  ::google::protobuf::int32 fabao_level_;
  ::google::protobuf::int32 fabao_skill_type_;
  ::google::protobuf::int32 fabao_grade_;
  ::google::protobuf::int32 fabao_effect_percent_num_;
  ::google::protobuf::int32 fabao_effect_percent_num_2_;
  friend void  protobuf_AddDesc_role_5fbattle_5fdata_2eproto();
  friend void protobuf_AssignDesc_role_5fbattle_5fdata_2eproto();
  friend void protobuf_ShutdownFile_role_5fbattle_5fdata_2eproto();

  void InitAsDefaultInstance();
  static PB_RoleBattleData_BattleFabao* default_instance_;
};
// -------------------------------------------------------------------

class PB_RoleBattleData_PetPartnerBattleData : public ::google::protobuf::Message {
 public:
  PB_RoleBattleData_PetPartnerBattleData();
  virtual ~PB_RoleBattleData_PetPartnerBattleData();

  PB_RoleBattleData_PetPartnerBattleData(const PB_RoleBattleData_PetPartnerBattleData& from);

  inline PB_RoleBattleData_PetPartnerBattleData& operator=(const PB_RoleBattleData_PetPartnerBattleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_RoleBattleData_PetPartnerBattleData& default_instance();

  void Swap(PB_RoleBattleData_PetPartnerBattleData* other);

  // implements Message ----------------------------------------------

  PB_RoleBattleData_PetPartnerBattleData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_RoleBattleData_PetPartnerBattleData& from);
  void MergeFrom(const PB_RoleBattleData_PetPartnerBattleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 battle_row = 1;
  inline bool has_battle_row() const;
  inline void clear_battle_row();
  static const int kBattleRowFieldNumber = 1;
  inline ::google::protobuf::int32 battle_row() const;
  inline void set_battle_row(::google::protobuf::int32 value);

  // optional int32 battle_column = 2;
  inline bool has_battle_column() const;
  inline void clear_battle_column();
  static const int kBattleColumnFieldNumber = 2;
  inline ::google::protobuf::int32 battle_column() const;
  inline void set_battle_column(::google::protobuf::int32 value);

  // optional .PB_PetBattleData pet_data = 3;
  inline bool has_pet_data() const;
  inline void clear_pet_data();
  static const int kPetDataFieldNumber = 3;
  inline const ::PB_PetBattleData& pet_data() const;
  inline ::PB_PetBattleData* mutable_pet_data();
  inline ::PB_PetBattleData* release_pet_data();
  inline void set_allocated_pet_data(::PB_PetBattleData* pet_data);

  // @@protoc_insertion_point(class_scope:PB_RoleBattleData.PetPartnerBattleData)
 private:
  inline void set_has_battle_row();
  inline void clear_has_battle_row();
  inline void set_has_battle_column();
  inline void clear_has_battle_column();
  inline void set_has_pet_data();
  inline void clear_has_pet_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 battle_row_;
  ::google::protobuf::int32 battle_column_;
  ::PB_PetBattleData* pet_data_;
  friend void  protobuf_AddDesc_role_5fbattle_5fdata_2eproto();
  friend void protobuf_AssignDesc_role_5fbattle_5fdata_2eproto();
  friend void protobuf_ShutdownFile_role_5fbattle_5fdata_2eproto();

  void InitAsDefaultInstance();
  static PB_RoleBattleData_PetPartnerBattleData* default_instance_;
};
// -------------------------------------------------------------------

class PB_RoleBattleData_BattleHeartSkill : public ::google::protobuf::Message {
 public:
  PB_RoleBattleData_BattleHeartSkill();
  virtual ~PB_RoleBattleData_BattleHeartSkill();

  PB_RoleBattleData_BattleHeartSkill(const PB_RoleBattleData_BattleHeartSkill& from);

  inline PB_RoleBattleData_BattleHeartSkill& operator=(const PB_RoleBattleData_BattleHeartSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_RoleBattleData_BattleHeartSkill& default_instance();

  void Swap(PB_RoleBattleData_BattleHeartSkill* other);

  // implements Message ----------------------------------------------

  PB_RoleBattleData_BattleHeartSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_RoleBattleData_BattleHeartSkill& from);
  void MergeFrom(const PB_RoleBattleData_BattleHeartSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // optional int32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::int32 skill_level() const;
  inline void set_skill_level(::google::protobuf::int32 value);

  // optional int32 remain_times = 3;
  inline bool has_remain_times() const;
  inline void clear_remain_times();
  static const int kRemainTimesFieldNumber = 3;
  inline ::google::protobuf::int32 remain_times() const;
  inline void set_remain_times(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PB_RoleBattleData.BattleHeartSkill)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();
  inline void set_has_remain_times();
  inline void clear_has_remain_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 skill_id_;
  ::google::protobuf::int32 skill_level_;
  ::google::protobuf::int32 remain_times_;
  friend void  protobuf_AddDesc_role_5fbattle_5fdata_2eproto();
  friend void protobuf_AssignDesc_role_5fbattle_5fdata_2eproto();
  friend void protobuf_ShutdownFile_role_5fbattle_5fdata_2eproto();

  void InitAsDefaultInstance();
  static PB_RoleBattleData_BattleHeartSkill* default_instance_;
};
// -------------------------------------------------------------------

class PB_RoleBattleData_BattleHallowData : public ::google::protobuf::Message {
 public:
  PB_RoleBattleData_BattleHallowData();
  virtual ~PB_RoleBattleData_BattleHallowData();

  PB_RoleBattleData_BattleHallowData(const PB_RoleBattleData_BattleHallowData& from);

  inline PB_RoleBattleData_BattleHallowData& operator=(const PB_RoleBattleData_BattleHallowData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_RoleBattleData_BattleHallowData& default_instance();

  void Swap(PB_RoleBattleData_BattleHallowData* other);

  // implements Message ----------------------------------------------

  PB_RoleBattleData_BattleHallowData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_RoleBattleData_BattleHallowData& from);
  void MergeFrom(const PB_RoleBattleData_BattleHallowData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 hallow_id = 1;
  inline bool has_hallow_id() const;
  inline void clear_hallow_id();
  static const int kHallowIdFieldNumber = 1;
  inline ::google::protobuf::int32 hallow_id() const;
  inline void set_hallow_id(::google::protobuf::int32 value);

  // optional int32 hallow_lv = 2;
  inline bool has_hallow_lv() const;
  inline void clear_hallow_lv();
  static const int kHallowLvFieldNumber = 2;
  inline ::google::protobuf::int32 hallow_lv() const;
  inline void set_hallow_lv(::google::protobuf::int32 value);

  // optional double attr_active = 3;
  inline bool has_attr_active() const;
  inline void clear_attr_active();
  static const int kAttrActiveFieldNumber = 3;
  inline double attr_active() const;
  inline void set_attr_active(double value);

  // optional double attr_active_max = 4;
  inline bool has_attr_active_max() const;
  inline void clear_attr_active_max();
  static const int kAttrActiveMaxFieldNumber = 4;
  inline double attr_active_max() const;
  inline void set_attr_active_max(double value);

  // optional double attr_damage = 5;
  inline bool has_attr_damage() const;
  inline void clear_attr_damage();
  static const int kAttrDamageFieldNumber = 5;
  inline double attr_damage() const;
  inline void set_attr_damage(double value);

  // optional double attr_recover = 6;
  inline bool has_attr_recover() const;
  inline void clear_attr_recover();
  static const int kAttrRecoverFieldNumber = 6;
  inline double attr_recover() const;
  inline void set_attr_recover(double value);

  // optional double attr_knock_off = 7;
  inline bool has_attr_knock_off() const;
  inline void clear_attr_knock_off();
  static const int kAttrKnockOffFieldNumber = 7;
  inline double attr_knock_off() const;
  inline void set_attr_knock_off(double value);

  // optional double attr_anti_knock_off = 8;
  inline bool has_attr_anti_knock_off() const;
  inline void clear_attr_anti_knock_off();
  static const int kAttrAntiKnockOffFieldNumber = 8;
  inline double attr_anti_knock_off() const;
  inline void set_attr_anti_knock_off(double value);

  // optional double attr_intervene = 9;
  inline bool has_attr_intervene() const;
  inline void clear_attr_intervene();
  static const int kAttrInterveneFieldNumber = 9;
  inline double attr_intervene() const;
  inline void set_attr_intervene(double value);

  // optional double attr_speed = 10;
  inline bool has_attr_speed() const;
  inline void clear_attr_speed();
  static const int kAttrSpeedFieldNumber = 10;
  inline double attr_speed() const;
  inline void set_attr_speed(double value);

  // repeated int32 skill_id_list = 12;
  inline int skill_id_list_size() const;
  inline void clear_skill_id_list();
  static const int kSkillIdListFieldNumber = 12;
  inline ::google::protobuf::int32 skill_id_list(int index) const;
  inline void set_skill_id_list(int index, ::google::protobuf::int32 value);
  inline void add_skill_id_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      skill_id_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_skill_id_list();

  // repeated int32 skill_lv_list = 13;
  inline int skill_lv_list_size() const;
  inline void clear_skill_lv_list();
  static const int kSkillLvListFieldNumber = 13;
  inline ::google::protobuf::int32 skill_lv_list(int index) const;
  inline void set_skill_lv_list(int index, ::google::protobuf::int32 value);
  inline void add_skill_lv_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      skill_lv_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_skill_lv_list();

  // repeated int32 gift_list = 14;
  inline int gift_list_size() const;
  inline void clear_gift_list();
  static const int kGiftListFieldNumber = 14;
  inline ::google::protobuf::int32 gift_list(int index) const;
  inline void set_gift_list(int index, ::google::protobuf::int32 value);
  inline void add_gift_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      gift_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_gift_list();

  // @@protoc_insertion_point(class_scope:PB_RoleBattleData.BattleHallowData)
 private:
  inline void set_has_hallow_id();
  inline void clear_has_hallow_id();
  inline void set_has_hallow_lv();
  inline void clear_has_hallow_lv();
  inline void set_has_attr_active();
  inline void clear_has_attr_active();
  inline void set_has_attr_active_max();
  inline void clear_has_attr_active_max();
  inline void set_has_attr_damage();
  inline void clear_has_attr_damage();
  inline void set_has_attr_recover();
  inline void clear_has_attr_recover();
  inline void set_has_attr_knock_off();
  inline void clear_has_attr_knock_off();
  inline void set_has_attr_anti_knock_off();
  inline void clear_has_attr_anti_knock_off();
  inline void set_has_attr_intervene();
  inline void clear_has_attr_intervene();
  inline void set_has_attr_speed();
  inline void clear_has_attr_speed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 hallow_id_;
  ::google::protobuf::int32 hallow_lv_;
  double attr_active_;
  double attr_active_max_;
  double attr_damage_;
  double attr_recover_;
  double attr_knock_off_;
  double attr_anti_knock_off_;
  double attr_intervene_;
  double attr_speed_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > skill_id_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > skill_lv_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gift_list_;
  friend void  protobuf_AddDesc_role_5fbattle_5fdata_2eproto();
  friend void protobuf_AssignDesc_role_5fbattle_5fdata_2eproto();
  friend void protobuf_ShutdownFile_role_5fbattle_5fdata_2eproto();

  void InitAsDefaultInstance();
  static PB_RoleBattleData_BattleHallowData* default_instance_;
};
// -------------------------------------------------------------------

class PB_RoleBattleData_BattleHuanShouSkill : public ::google::protobuf::Message {
 public:
  PB_RoleBattleData_BattleHuanShouSkill();
  virtual ~PB_RoleBattleData_BattleHuanShouSkill();

  PB_RoleBattleData_BattleHuanShouSkill(const PB_RoleBattleData_BattleHuanShouSkill& from);

  inline PB_RoleBattleData_BattleHuanShouSkill& operator=(const PB_RoleBattleData_BattleHuanShouSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_RoleBattleData_BattleHuanShouSkill& default_instance();

  void Swap(PB_RoleBattleData_BattleHuanShouSkill* other);

  // implements Message ----------------------------------------------

  PB_RoleBattleData_BattleHuanShouSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_RoleBattleData_BattleHuanShouSkill& from);
  void MergeFrom(const PB_RoleBattleData_BattleHuanShouSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 skill_id() const;
  inline void set_skill_id(::google::protobuf::int32 value);

  // optional int32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::int32 skill_level() const;
  inline void set_skill_level(::google::protobuf::int32 value);

  // optional int32 cd_start = 3;
  inline bool has_cd_start() const;
  inline void clear_cd_start();
  static const int kCdStartFieldNumber = 3;
  inline ::google::protobuf::int32 cd_start() const;
  inline void set_cd_start(::google::protobuf::int32 value);

  // optional int32 cd_perform = 4;
  inline bool has_cd_perform() const;
  inline void clear_cd_perform();
  static const int kCdPerformFieldNumber = 4;
  inline ::google::protobuf::int32 cd_perform() const;
  inline void set_cd_perform(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PB_RoleBattleData.BattleHuanShouSkill)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();
  inline void set_has_cd_start();
  inline void clear_has_cd_start();
  inline void set_has_cd_perform();
  inline void clear_has_cd_perform();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 skill_id_;
  ::google::protobuf::int32 skill_level_;
  ::google::protobuf::int32 cd_start_;
  ::google::protobuf::int32 cd_perform_;
  friend void  protobuf_AddDesc_role_5fbattle_5fdata_2eproto();
  friend void protobuf_AssignDesc_role_5fbattle_5fdata_2eproto();
  friend void protobuf_ShutdownFile_role_5fbattle_5fdata_2eproto();

  void InitAsDefaultInstance();
  static PB_RoleBattleData_BattleHuanShouSkill* default_instance_;
};
// -------------------------------------------------------------------

class PB_RoleBattleData : public ::google::protobuf::Message {
 public:
  PB_RoleBattleData();
  virtual ~PB_RoleBattleData();

  PB_RoleBattleData(const PB_RoleBattleData& from);

  inline PB_RoleBattleData& operator=(const PB_RoleBattleData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_RoleBattleData& default_instance();

  void Swap(PB_RoleBattleData* other);

  // implements Message ----------------------------------------------

  PB_RoleBattleData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_RoleBattleData& from);
  void MergeFrom(const PB_RoleBattleData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PB_RoleBattleData_AttrInfo AttrInfo;
  typedef PB_RoleBattleData_BattleFabao BattleFabao;
  typedef PB_RoleBattleData_PetPartnerBattleData PetPartnerBattleData;
  typedef PB_RoleBattleData_BattleHeartSkill BattleHeartSkill;
  typedef PB_RoleBattleData_BattleHallowData BattleHallowData;
  typedef PB_RoleBattleData_BattleHuanShouSkill BattleHuanShouSkill;

  // accessors -------------------------------------------------------

  // optional bool is_auto = 1;
  inline bool has_is_auto() const;
  inline void clear_is_auto();
  static const int kIsAutoFieldNumber = 1;
  inline bool is_auto() const;
  inline void set_is_auto(bool value);

  // optional bool is_role_stand_front = 2;
  inline bool has_is_role_stand_front() const;
  inline void clear_is_role_stand_front();
  static const int kIsRoleStandFrontFieldNumber = 2;
  inline bool is_role_stand_front() const;
  inline void set_is_role_stand_front(bool value);

  // optional .PB_BattleCharacterData role_character_data = 3;
  inline bool has_role_character_data() const;
  inline void clear_role_character_data();
  static const int kRoleCharacterDataFieldNumber = 3;
  inline const ::PB_BattleCharacterData& role_character_data() const;
  inline ::PB_BattleCharacterData* mutable_role_character_data();
  inline ::PB_BattleCharacterData* release_role_character_data();
  inline void set_allocated_role_character_data(::PB_BattleCharacterData* role_character_data);

  // optional int32 huanshou_level = 4;
  inline bool has_huanshou_level() const;
  inline void clear_huanshou_level();
  static const int kHuanshouLevelFieldNumber = 4;
  inline ::google::protobuf::int32 huanshou_level() const;
  inline void set_huanshou_level(::google::protobuf::int32 value);

  // repeated .PB_PartnerBattleData partner_character_data = 5;
  inline int partner_character_data_size() const;
  inline void clear_partner_character_data();
  static const int kPartnerCharacterDataFieldNumber = 5;
  inline const ::PB_PartnerBattleData& partner_character_data(int index) const;
  inline ::PB_PartnerBattleData* mutable_partner_character_data(int index);
  inline ::PB_PartnerBattleData* add_partner_character_data();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_PartnerBattleData >&
      partner_character_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_PartnerBattleData >*
      mutable_partner_character_data();

  // optional sint32 fight_pet_idx = 6;
  inline bool has_fight_pet_idx() const;
  inline void clear_fight_pet_idx();
  static const int kFightPetIdxFieldNumber = 6;
  inline ::google::protobuf::int32 fight_pet_idx() const;
  inline void set_fight_pet_idx(::google::protobuf::int32 value);

  // repeated .PB_PetBattleData pet_character_data = 7;
  inline int pet_character_data_size() const;
  inline void clear_pet_character_data();
  static const int kPetCharacterDataFieldNumber = 7;
  inline const ::PB_PetBattleData& pet_character_data(int index) const;
  inline ::PB_PetBattleData* mutable_pet_character_data(int index);
  inline ::PB_PetBattleData* add_pet_character_data();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_PetBattleData >&
      pet_character_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_PetBattleData >*
      mutable_pet_character_data();

  // optional int32 auto_first_move_type = 8;
  inline bool has_auto_first_move_type() const;
  inline void clear_auto_first_move_type();
  static const int kAutoFirstMoveTypeFieldNumber = 8;
  inline ::google::protobuf::int32 auto_first_move_type() const;
  inline void set_auto_first_move_type(::google::protobuf::int32 value);

  // optional int32 auto_first_skill_id = 9;
  inline bool has_auto_first_skill_id() const;
  inline void clear_auto_first_skill_id();
  static const int kAutoFirstSkillIdFieldNumber = 9;
  inline ::google::protobuf::int32 auto_first_skill_id() const;
  inline void set_auto_first_skill_id(::google::protobuf::int32 value);

  // optional int32 auto_first_skill_level = 10;
  inline bool has_auto_first_skill_level() const;
  inline void clear_auto_first_skill_level();
  static const int kAutoFirstSkillLevelFieldNumber = 10;
  inline ::google::protobuf::int32 auto_first_skill_level() const;
  inline void set_auto_first_skill_level(::google::protobuf::int32 value);

  // optional int32 auto_second_move_type = 11;
  inline bool has_auto_second_move_type() const;
  inline void clear_auto_second_move_type();
  static const int kAutoSecondMoveTypeFieldNumber = 11;
  inline ::google::protobuf::int32 auto_second_move_type() const;
  inline void set_auto_second_move_type(::google::protobuf::int32 value);

  // optional int32 auto_second_skill_id = 12;
  inline bool has_auto_second_skill_id() const;
  inline void clear_auto_second_skill_id();
  static const int kAutoSecondSkillIdFieldNumber = 12;
  inline ::google::protobuf::int32 auto_second_skill_id() const;
  inline void set_auto_second_skill_id(::google::protobuf::int32 value);

  // optional int32 auto_second_skill_level = 13;
  inline bool has_auto_second_skill_level() const;
  inline void clear_auto_second_skill_level();
  static const int kAutoSecondSkillLevelFieldNumber = 13;
  inline ::google::protobuf::int32 auto_second_skill_level() const;
  inline void set_auto_second_skill_level(::google::protobuf::int32 value);

  // repeated .PB_RoleBattleData.AttrInfo weapon_attr_list = 14;
  inline int weapon_attr_list_size() const;
  inline void clear_weapon_attr_list();
  static const int kWeaponAttrListFieldNumber = 14;
  inline const ::PB_RoleBattleData_AttrInfo& weapon_attr_list(int index) const;
  inline ::PB_RoleBattleData_AttrInfo* mutable_weapon_attr_list(int index);
  inline ::PB_RoleBattleData_AttrInfo* add_weapon_attr_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_AttrInfo >&
      weapon_attr_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_AttrInfo >*
      mutable_weapon_attr_list();

  // repeated int32 weapon_sp_list = 15;
  inline int weapon_sp_list_size() const;
  inline void clear_weapon_sp_list();
  static const int kWeaponSpListFieldNumber = 15;
  inline ::google::protobuf::int32 weapon_sp_list(int index) const;
  inline void set_weapon_sp_list(int index, ::google::protobuf::int32 value);
  inline void add_weapon_sp_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      weapon_sp_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_weapon_sp_list();

  // repeated int32 other_sp_list = 16;
  inline int other_sp_list_size() const;
  inline void clear_other_sp_list();
  static const int kOtherSpListFieldNumber = 16;
  inline ::google::protobuf::int32 other_sp_list(int index) const;
  inline void set_other_sp_list(int index, ::google::protobuf::int32 value);
  inline void add_other_sp_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      other_sp_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_other_sp_list();

  // repeated .PB_RoleBattleData.BattleFabao fabao_list = 17;
  inline int fabao_list_size() const;
  inline void clear_fabao_list();
  static const int kFabaoListFieldNumber = 17;
  inline const ::PB_RoleBattleData_BattleFabao& fabao_list(int index) const;
  inline ::PB_RoleBattleData_BattleFabao* mutable_fabao_list(int index);
  inline ::PB_RoleBattleData_BattleFabao* add_fabao_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_BattleFabao >&
      fabao_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_BattleFabao >*
      mutable_fabao_list();

  // optional bytes appearance = 18;
  inline bool has_appearance() const;
  inline void clear_appearance();
  static const int kAppearanceFieldNumber = 18;
  inline const ::std::string& appearance() const;
  inline void set_appearance(const ::std::string& value);
  inline void set_appearance(const char* value);
  inline void set_appearance(const void* value, size_t size);
  inline ::std::string* mutable_appearance();
  inline ::std::string* release_appearance();
  inline void set_allocated_appearance(::std::string* appearance);

  // repeated int32 guild_buff_list = 21;
  inline int guild_buff_list_size() const;
  inline void clear_guild_buff_list();
  static const int kGuildBuffListFieldNumber = 21;
  inline ::google::protobuf::int32 guild_buff_list(int index) const;
  inline void set_guild_buff_list(int index, ::google::protobuf::int32 value);
  inline void add_guild_buff_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guild_buff_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guild_buff_list();

  // repeated .PB_RoleBattleData.PetPartnerBattleData pet_helper_data = 22;
  inline int pet_helper_data_size() const;
  inline void clear_pet_helper_data();
  static const int kPetHelperDataFieldNumber = 22;
  inline const ::PB_RoleBattleData_PetPartnerBattleData& pet_helper_data(int index) const;
  inline ::PB_RoleBattleData_PetPartnerBattleData* mutable_pet_helper_data(int index);
  inline ::PB_RoleBattleData_PetPartnerBattleData* add_pet_helper_data();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_PetPartnerBattleData >&
      pet_helper_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_PetPartnerBattleData >*
      mutable_pet_helper_data();

  // optional int32 top_level = 23;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 23;
  inline ::google::protobuf::int32 top_level() const;
  inline void set_top_level(::google::protobuf::int32 value);

  // optional int32 heart_skill_is_vaild = 25;
  inline bool has_heart_skill_is_vaild() const;
  inline void clear_heart_skill_is_vaild();
  static const int kHeartSkillIsVaildFieldNumber = 25;
  inline ::google::protobuf::int32 heart_skill_is_vaild() const;
  inline void set_heart_skill_is_vaild(::google::protobuf::int32 value);

  // repeated .PB_RoleBattleData.BattleHeartSkill heart_skill_list = 26;
  inline int heart_skill_list_size() const;
  inline void clear_heart_skill_list();
  static const int kHeartSkillListFieldNumber = 26;
  inline const ::PB_RoleBattleData_BattleHeartSkill& heart_skill_list(int index) const;
  inline ::PB_RoleBattleData_BattleHeartSkill* mutable_heart_skill_list(int index);
  inline ::PB_RoleBattleData_BattleHeartSkill* add_heart_skill_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_BattleHeartSkill >&
      heart_skill_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_BattleHeartSkill >*
      mutable_heart_skill_list();

  // repeated int32 jieyi_uid_list = 27;
  inline int jieyi_uid_list_size() const;
  inline void clear_jieyi_uid_list();
  static const int kJieyiUidListFieldNumber = 27;
  inline ::google::protobuf::int32 jieyi_uid_list(int index) const;
  inline void set_jieyi_uid_list(int index, ::google::protobuf::int32 value);
  inline void add_jieyi_uid_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      jieyi_uid_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_jieyi_uid_list();

  // repeated int32 jieyi_skill_list = 28;
  inline int jieyi_skill_list_size() const;
  inline void clear_jieyi_skill_list();
  static const int kJieyiSkillListFieldNumber = 28;
  inline ::google::protobuf::int32 jieyi_skill_list(int index) const;
  inline void set_jieyi_skill_list(int index, ::google::protobuf::int32 value);
  inline void add_jieyi_skill_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      jieyi_skill_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_jieyi_skill_list();

  // optional int32 soaring_skill_id = 29;
  inline bool has_soaring_skill_id() const;
  inline void clear_soaring_skill_id();
  static const int kSoaringSkillIdFieldNumber = 29;
  inline ::google::protobuf::int32 soaring_skill_id() const;
  inline void set_soaring_skill_id(::google::protobuf::int32 value);

  // optional int32 soaring_skill_lv = 30;
  inline bool has_soaring_skill_lv() const;
  inline void clear_soaring_skill_lv();
  static const int kSoaringSkillLvFieldNumber = 30;
  inline ::google::protobuf::int32 soaring_skill_lv() const;
  inline void set_soaring_skill_lv(::google::protobuf::int32 value);

  // optional int32 qingyuan_target_uid = 31;
  inline bool has_qingyuan_target_uid() const;
  inline void clear_qingyuan_target_uid();
  static const int kQingyuanTargetUidFieldNumber = 31;
  inline ::google::protobuf::int32 qingyuan_target_uid() const;
  inline void set_qingyuan_target_uid(::google::protobuf::int32 value);

  // repeated int32 qingyuan_skill_list = 32;
  inline int qingyuan_skill_list_size() const;
  inline void clear_qingyuan_skill_list();
  static const int kQingyuanSkillListFieldNumber = 32;
  inline ::google::protobuf::int32 qingyuan_skill_list(int index) const;
  inline void set_qingyuan_skill_list(int index, ::google::protobuf::int32 value);
  inline void add_qingyuan_skill_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      qingyuan_skill_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_qingyuan_skill_list();

  // optional bool is_robot = 33;
  inline bool has_is_robot() const;
  inline void clear_is_robot();
  static const int kIsRobotFieldNumber = 33;
  inline bool is_robot() const;
  inline void set_is_robot(bool value);

  // optional int32 career_suppress_value = 34;
  inline bool has_career_suppress_value() const;
  inline void clear_career_suppress_value();
  static const int kCareerSuppressValueFieldNumber = 34;
  inline ::google::protobuf::int32 career_suppress_value() const;
  inline void set_career_suppress_value(::google::protobuf::int32 value);

  // optional int32 change_card_skill_id = 35;
  inline bool has_change_card_skill_id() const;
  inline void clear_change_card_skill_id();
  static const int kChangeCardSkillIdFieldNumber = 35;
  inline ::google::protobuf::int32 change_card_skill_id() const;
  inline void set_change_card_skill_id(::google::protobuf::int32 value);

  // optional int32 change_card_seq = 36;
  inline bool has_change_card_seq() const;
  inline void clear_change_card_seq();
  static const int kChangeCardSeqFieldNumber = 36;
  inline ::google::protobuf::int32 change_card_seq() const;
  inline void set_change_card_seq(::google::protobuf::int32 value);

  // optional int32 role_extra_capability = 37;
  inline bool has_role_extra_capability() const;
  inline void clear_role_extra_capability();
  static const int kRoleExtraCapabilityFieldNumber = 37;
  inline ::google::protobuf::int32 role_extra_capability() const;
  inline void set_role_extra_capability(::google::protobuf::int32 value);

  // repeated .PB_RoleBattleData.BattleHallowData hallow_list = 38;
  inline int hallow_list_size() const;
  inline void clear_hallow_list();
  static const int kHallowListFieldNumber = 38;
  inline const ::PB_RoleBattleData_BattleHallowData& hallow_list(int index) const;
  inline ::PB_RoleBattleData_BattleHallowData* mutable_hallow_list(int index);
  inline ::PB_RoleBattleData_BattleHallowData* add_hallow_list();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_BattleHallowData >&
      hallow_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_BattleHallowData >*
      mutable_hallow_list();

  // optional int32 fight_hallow_idx = 39;
  inline bool has_fight_hallow_idx() const;
  inline void clear_fight_hallow_idx();
  static const int kFightHallowIdxFieldNumber = 39;
  inline ::google::protobuf::int32 fight_hallow_idx() const;
  inline void set_fight_hallow_idx(::google::protobuf::int32 value);

  // optional .PB_RoleBattleData.BattleHuanShouSkill huanshou_skill = 40;
  inline bool has_huanshou_skill() const;
  inline void clear_huanshou_skill();
  static const int kHuanshouSkillFieldNumber = 40;
  inline const ::PB_RoleBattleData_BattleHuanShouSkill& huanshou_skill() const;
  inline ::PB_RoleBattleData_BattleHuanShouSkill* mutable_huanshou_skill();
  inline ::PB_RoleBattleData_BattleHuanShouSkill* release_huanshou_skill();
  inline void set_allocated_huanshou_skill(::PB_RoleBattleData_BattleHuanShouSkill* huanshou_skill);

  // @@protoc_insertion_point(class_scope:PB_RoleBattleData)
 private:
  inline void set_has_is_auto();
  inline void clear_has_is_auto();
  inline void set_has_is_role_stand_front();
  inline void clear_has_is_role_stand_front();
  inline void set_has_role_character_data();
  inline void clear_has_role_character_data();
  inline void set_has_huanshou_level();
  inline void clear_has_huanshou_level();
  inline void set_has_fight_pet_idx();
  inline void clear_has_fight_pet_idx();
  inline void set_has_auto_first_move_type();
  inline void clear_has_auto_first_move_type();
  inline void set_has_auto_first_skill_id();
  inline void clear_has_auto_first_skill_id();
  inline void set_has_auto_first_skill_level();
  inline void clear_has_auto_first_skill_level();
  inline void set_has_auto_second_move_type();
  inline void clear_has_auto_second_move_type();
  inline void set_has_auto_second_skill_id();
  inline void clear_has_auto_second_skill_id();
  inline void set_has_auto_second_skill_level();
  inline void clear_has_auto_second_skill_level();
  inline void set_has_appearance();
  inline void clear_has_appearance();
  inline void set_has_top_level();
  inline void clear_has_top_level();
  inline void set_has_heart_skill_is_vaild();
  inline void clear_has_heart_skill_is_vaild();
  inline void set_has_soaring_skill_id();
  inline void clear_has_soaring_skill_id();
  inline void set_has_soaring_skill_lv();
  inline void clear_has_soaring_skill_lv();
  inline void set_has_qingyuan_target_uid();
  inline void clear_has_qingyuan_target_uid();
  inline void set_has_is_robot();
  inline void clear_has_is_robot();
  inline void set_has_career_suppress_value();
  inline void clear_has_career_suppress_value();
  inline void set_has_change_card_skill_id();
  inline void clear_has_change_card_skill_id();
  inline void set_has_change_card_seq();
  inline void clear_has_change_card_seq();
  inline void set_has_role_extra_capability();
  inline void clear_has_role_extra_capability();
  inline void set_has_fight_hallow_idx();
  inline void clear_has_fight_hallow_idx();
  inline void set_has_huanshou_skill();
  inline void clear_has_huanshou_skill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::PB_BattleCharacterData* role_character_data_;
  ::google::protobuf::RepeatedPtrField< ::PB_PartnerBattleData > partner_character_data_;
  ::google::protobuf::int32 huanshou_level_;
  ::google::protobuf::int32 fight_pet_idx_;
  ::google::protobuf::RepeatedPtrField< ::PB_PetBattleData > pet_character_data_;
  ::google::protobuf::int32 auto_first_move_type_;
  ::google::protobuf::int32 auto_first_skill_id_;
  ::google::protobuf::int32 auto_first_skill_level_;
  ::google::protobuf::int32 auto_second_move_type_;
  bool is_auto_;
  bool is_role_stand_front_;
  bool is_robot_;
  ::google::protobuf::int32 auto_second_skill_id_;
  ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_AttrInfo > weapon_attr_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > weapon_sp_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > other_sp_list_;
  ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_BattleFabao > fabao_list_;
  ::google::protobuf::int32 auto_second_skill_level_;
  ::google::protobuf::int32 top_level_;
  ::std::string* appearance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guild_buff_list_;
  ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_PetPartnerBattleData > pet_helper_data_;
  ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_BattleHeartSkill > heart_skill_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > jieyi_uid_list_;
  ::google::protobuf::int32 heart_skill_is_vaild_;
  ::google::protobuf::int32 soaring_skill_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > jieyi_skill_list_;
  ::google::protobuf::int32 soaring_skill_lv_;
  ::google::protobuf::int32 qingyuan_target_uid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > qingyuan_skill_list_;
  ::google::protobuf::int32 career_suppress_value_;
  ::google::protobuf::int32 change_card_skill_id_;
  ::google::protobuf::int32 change_card_seq_;
  ::google::protobuf::int32 role_extra_capability_;
  ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_BattleHallowData > hallow_list_;
  ::PB_RoleBattleData_BattleHuanShouSkill* huanshou_skill_;
  ::google::protobuf::int32 fight_hallow_idx_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_role_5fbattle_5fdata_2eproto();
  friend void protobuf_AssignDesc_role_5fbattle_5fdata_2eproto();
  friend void protobuf_ShutdownFile_role_5fbattle_5fdata_2eproto();

  void InitAsDefaultInstance();
  static PB_RoleBattleData* default_instance_;
};
// ===================================================================


// ===================================================================

// PB_RoleBattleData_AttrInfo

// optional int32 attr_type = 1;
inline bool PB_RoleBattleData_AttrInfo::has_attr_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_RoleBattleData_AttrInfo::set_has_attr_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_RoleBattleData_AttrInfo::clear_has_attr_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_RoleBattleData_AttrInfo::clear_attr_type() {
  attr_type_ = 0;
  clear_has_attr_type();
}
inline ::google::protobuf::int32 PB_RoleBattleData_AttrInfo::attr_type() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.AttrInfo.attr_type)
  return attr_type_;
}
inline void PB_RoleBattleData_AttrInfo::set_attr_type(::google::protobuf::int32 value) {
  set_has_attr_type();
  attr_type_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.AttrInfo.attr_type)
}

// optional int32 attr_value = 2;
inline bool PB_RoleBattleData_AttrInfo::has_attr_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_RoleBattleData_AttrInfo::set_has_attr_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_RoleBattleData_AttrInfo::clear_has_attr_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_RoleBattleData_AttrInfo::clear_attr_value() {
  attr_value_ = 0;
  clear_has_attr_value();
}
inline ::google::protobuf::int32 PB_RoleBattleData_AttrInfo::attr_value() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.AttrInfo.attr_value)
  return attr_value_;
}
inline void PB_RoleBattleData_AttrInfo::set_attr_value(::google::protobuf::int32 value) {
  set_has_attr_value();
  attr_value_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.AttrInfo.attr_value)
}

// -------------------------------------------------------------------

// PB_RoleBattleData_BattleFabao

// optional int32 fabao_id = 1;
inline bool PB_RoleBattleData_BattleFabao::has_fabao_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_RoleBattleData_BattleFabao::set_has_fabao_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_RoleBattleData_BattleFabao::clear_has_fabao_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_RoleBattleData_BattleFabao::clear_fabao_id() {
  fabao_id_ = 0;
  clear_has_fabao_id();
}
inline ::google::protobuf::int32 PB_RoleBattleData_BattleFabao::fabao_id() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleFabao.fabao_id)
  return fabao_id_;
}
inline void PB_RoleBattleData_BattleFabao::set_fabao_id(::google::protobuf::int32 value) {
  set_has_fabao_id();
  fabao_id_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleFabao.fabao_id)
}

// optional int32 fabao_level = 2;
inline bool PB_RoleBattleData_BattleFabao::has_fabao_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_RoleBattleData_BattleFabao::set_has_fabao_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_RoleBattleData_BattleFabao::clear_has_fabao_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_RoleBattleData_BattleFabao::clear_fabao_level() {
  fabao_level_ = 0;
  clear_has_fabao_level();
}
inline ::google::protobuf::int32 PB_RoleBattleData_BattleFabao::fabao_level() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleFabao.fabao_level)
  return fabao_level_;
}
inline void PB_RoleBattleData_BattleFabao::set_fabao_level(::google::protobuf::int32 value) {
  set_has_fabao_level();
  fabao_level_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleFabao.fabao_level)
}

// optional int32 fabao_skill_type = 3;
inline bool PB_RoleBattleData_BattleFabao::has_fabao_skill_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_RoleBattleData_BattleFabao::set_has_fabao_skill_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_RoleBattleData_BattleFabao::clear_has_fabao_skill_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_RoleBattleData_BattleFabao::clear_fabao_skill_type() {
  fabao_skill_type_ = 0;
  clear_has_fabao_skill_type();
}
inline ::google::protobuf::int32 PB_RoleBattleData_BattleFabao::fabao_skill_type() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleFabao.fabao_skill_type)
  return fabao_skill_type_;
}
inline void PB_RoleBattleData_BattleFabao::set_fabao_skill_type(::google::protobuf::int32 value) {
  set_has_fabao_skill_type();
  fabao_skill_type_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleFabao.fabao_skill_type)
}

// optional int32 fabao_grade = 4;
inline bool PB_RoleBattleData_BattleFabao::has_fabao_grade() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PB_RoleBattleData_BattleFabao::set_has_fabao_grade() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PB_RoleBattleData_BattleFabao::clear_has_fabao_grade() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PB_RoleBattleData_BattleFabao::clear_fabao_grade() {
  fabao_grade_ = 0;
  clear_has_fabao_grade();
}
inline ::google::protobuf::int32 PB_RoleBattleData_BattleFabao::fabao_grade() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleFabao.fabao_grade)
  return fabao_grade_;
}
inline void PB_RoleBattleData_BattleFabao::set_fabao_grade(::google::protobuf::int32 value) {
  set_has_fabao_grade();
  fabao_grade_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleFabao.fabao_grade)
}

// optional int32 fabao_effect_percent_num = 5;
inline bool PB_RoleBattleData_BattleFabao::has_fabao_effect_percent_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PB_RoleBattleData_BattleFabao::set_has_fabao_effect_percent_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PB_RoleBattleData_BattleFabao::clear_has_fabao_effect_percent_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PB_RoleBattleData_BattleFabao::clear_fabao_effect_percent_num() {
  fabao_effect_percent_num_ = 0;
  clear_has_fabao_effect_percent_num();
}
inline ::google::protobuf::int32 PB_RoleBattleData_BattleFabao::fabao_effect_percent_num() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleFabao.fabao_effect_percent_num)
  return fabao_effect_percent_num_;
}
inline void PB_RoleBattleData_BattleFabao::set_fabao_effect_percent_num(::google::protobuf::int32 value) {
  set_has_fabao_effect_percent_num();
  fabao_effect_percent_num_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleFabao.fabao_effect_percent_num)
}

// optional int32 fabao_effect_percent_num_2 = 6;
inline bool PB_RoleBattleData_BattleFabao::has_fabao_effect_percent_num_2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PB_RoleBattleData_BattleFabao::set_has_fabao_effect_percent_num_2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PB_RoleBattleData_BattleFabao::clear_has_fabao_effect_percent_num_2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PB_RoleBattleData_BattleFabao::clear_fabao_effect_percent_num_2() {
  fabao_effect_percent_num_2_ = 0;
  clear_has_fabao_effect_percent_num_2();
}
inline ::google::protobuf::int32 PB_RoleBattleData_BattleFabao::fabao_effect_percent_num_2() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleFabao.fabao_effect_percent_num_2)
  return fabao_effect_percent_num_2_;
}
inline void PB_RoleBattleData_BattleFabao::set_fabao_effect_percent_num_2(::google::protobuf::int32 value) {
  set_has_fabao_effect_percent_num_2();
  fabao_effect_percent_num_2_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleFabao.fabao_effect_percent_num_2)
}

// -------------------------------------------------------------------

// PB_RoleBattleData_PetPartnerBattleData

// optional int32 battle_row = 1;
inline bool PB_RoleBattleData_PetPartnerBattleData::has_battle_row() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_RoleBattleData_PetPartnerBattleData::set_has_battle_row() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_RoleBattleData_PetPartnerBattleData::clear_has_battle_row() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_RoleBattleData_PetPartnerBattleData::clear_battle_row() {
  battle_row_ = 0;
  clear_has_battle_row();
}
inline ::google::protobuf::int32 PB_RoleBattleData_PetPartnerBattleData::battle_row() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.PetPartnerBattleData.battle_row)
  return battle_row_;
}
inline void PB_RoleBattleData_PetPartnerBattleData::set_battle_row(::google::protobuf::int32 value) {
  set_has_battle_row();
  battle_row_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.PetPartnerBattleData.battle_row)
}

// optional int32 battle_column = 2;
inline bool PB_RoleBattleData_PetPartnerBattleData::has_battle_column() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_RoleBattleData_PetPartnerBattleData::set_has_battle_column() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_RoleBattleData_PetPartnerBattleData::clear_has_battle_column() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_RoleBattleData_PetPartnerBattleData::clear_battle_column() {
  battle_column_ = 0;
  clear_has_battle_column();
}
inline ::google::protobuf::int32 PB_RoleBattleData_PetPartnerBattleData::battle_column() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.PetPartnerBattleData.battle_column)
  return battle_column_;
}
inline void PB_RoleBattleData_PetPartnerBattleData::set_battle_column(::google::protobuf::int32 value) {
  set_has_battle_column();
  battle_column_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.PetPartnerBattleData.battle_column)
}

// optional .PB_PetBattleData pet_data = 3;
inline bool PB_RoleBattleData_PetPartnerBattleData::has_pet_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_RoleBattleData_PetPartnerBattleData::set_has_pet_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_RoleBattleData_PetPartnerBattleData::clear_has_pet_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_RoleBattleData_PetPartnerBattleData::clear_pet_data() {
  if (pet_data_ != NULL) pet_data_->::PB_PetBattleData::Clear();
  clear_has_pet_data();
}
inline const ::PB_PetBattleData& PB_RoleBattleData_PetPartnerBattleData::pet_data() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.PetPartnerBattleData.pet_data)
  return pet_data_ != NULL ? *pet_data_ : *default_instance_->pet_data_;
}
inline ::PB_PetBattleData* PB_RoleBattleData_PetPartnerBattleData::mutable_pet_data() {
  set_has_pet_data();
  if (pet_data_ == NULL) pet_data_ = new ::PB_PetBattleData;
  // @@protoc_insertion_point(field_mutable:PB_RoleBattleData.PetPartnerBattleData.pet_data)
  return pet_data_;
}
inline ::PB_PetBattleData* PB_RoleBattleData_PetPartnerBattleData::release_pet_data() {
  clear_has_pet_data();
  ::PB_PetBattleData* temp = pet_data_;
  pet_data_ = NULL;
  return temp;
}
inline void PB_RoleBattleData_PetPartnerBattleData::set_allocated_pet_data(::PB_PetBattleData* pet_data) {
  delete pet_data_;
  pet_data_ = pet_data;
  if (pet_data) {
    set_has_pet_data();
  } else {
    clear_has_pet_data();
  }
  // @@protoc_insertion_point(field_set_allocated:PB_RoleBattleData.PetPartnerBattleData.pet_data)
}

// -------------------------------------------------------------------

// PB_RoleBattleData_BattleHeartSkill

// optional int32 skill_id = 1;
inline bool PB_RoleBattleData_BattleHeartSkill::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_RoleBattleData_BattleHeartSkill::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_RoleBattleData_BattleHeartSkill::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_RoleBattleData_BattleHeartSkill::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 PB_RoleBattleData_BattleHeartSkill::skill_id() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleHeartSkill.skill_id)
  return skill_id_;
}
inline void PB_RoleBattleData_BattleHeartSkill::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleHeartSkill.skill_id)
}

// optional int32 skill_level = 2;
inline bool PB_RoleBattleData_BattleHeartSkill::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_RoleBattleData_BattleHeartSkill::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_RoleBattleData_BattleHeartSkill::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_RoleBattleData_BattleHeartSkill::clear_skill_level() {
  skill_level_ = 0;
  clear_has_skill_level();
}
inline ::google::protobuf::int32 PB_RoleBattleData_BattleHeartSkill::skill_level() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleHeartSkill.skill_level)
  return skill_level_;
}
inline void PB_RoleBattleData_BattleHeartSkill::set_skill_level(::google::protobuf::int32 value) {
  set_has_skill_level();
  skill_level_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleHeartSkill.skill_level)
}

// optional int32 remain_times = 3;
inline bool PB_RoleBattleData_BattleHeartSkill::has_remain_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_RoleBattleData_BattleHeartSkill::set_has_remain_times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_RoleBattleData_BattleHeartSkill::clear_has_remain_times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_RoleBattleData_BattleHeartSkill::clear_remain_times() {
  remain_times_ = 0;
  clear_has_remain_times();
}
inline ::google::protobuf::int32 PB_RoleBattleData_BattleHeartSkill::remain_times() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleHeartSkill.remain_times)
  return remain_times_;
}
inline void PB_RoleBattleData_BattleHeartSkill::set_remain_times(::google::protobuf::int32 value) {
  set_has_remain_times();
  remain_times_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleHeartSkill.remain_times)
}

// -------------------------------------------------------------------

// PB_RoleBattleData_BattleHallowData

// optional int32 hallow_id = 1;
inline bool PB_RoleBattleData_BattleHallowData::has_hallow_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_RoleBattleData_BattleHallowData::set_has_hallow_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_RoleBattleData_BattleHallowData::clear_has_hallow_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_RoleBattleData_BattleHallowData::clear_hallow_id() {
  hallow_id_ = 0;
  clear_has_hallow_id();
}
inline ::google::protobuf::int32 PB_RoleBattleData_BattleHallowData::hallow_id() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleHallowData.hallow_id)
  return hallow_id_;
}
inline void PB_RoleBattleData_BattleHallowData::set_hallow_id(::google::protobuf::int32 value) {
  set_has_hallow_id();
  hallow_id_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleHallowData.hallow_id)
}

// optional int32 hallow_lv = 2;
inline bool PB_RoleBattleData_BattleHallowData::has_hallow_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_RoleBattleData_BattleHallowData::set_has_hallow_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_RoleBattleData_BattleHallowData::clear_has_hallow_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_RoleBattleData_BattleHallowData::clear_hallow_lv() {
  hallow_lv_ = 0;
  clear_has_hallow_lv();
}
inline ::google::protobuf::int32 PB_RoleBattleData_BattleHallowData::hallow_lv() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleHallowData.hallow_lv)
  return hallow_lv_;
}
inline void PB_RoleBattleData_BattleHallowData::set_hallow_lv(::google::protobuf::int32 value) {
  set_has_hallow_lv();
  hallow_lv_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleHallowData.hallow_lv)
}

// optional double attr_active = 3;
inline bool PB_RoleBattleData_BattleHallowData::has_attr_active() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_RoleBattleData_BattleHallowData::set_has_attr_active() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_RoleBattleData_BattleHallowData::clear_has_attr_active() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_RoleBattleData_BattleHallowData::clear_attr_active() {
  attr_active_ = 0;
  clear_has_attr_active();
}
inline double PB_RoleBattleData_BattleHallowData::attr_active() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleHallowData.attr_active)
  return attr_active_;
}
inline void PB_RoleBattleData_BattleHallowData::set_attr_active(double value) {
  set_has_attr_active();
  attr_active_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleHallowData.attr_active)
}

// optional double attr_active_max = 4;
inline bool PB_RoleBattleData_BattleHallowData::has_attr_active_max() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PB_RoleBattleData_BattleHallowData::set_has_attr_active_max() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PB_RoleBattleData_BattleHallowData::clear_has_attr_active_max() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PB_RoleBattleData_BattleHallowData::clear_attr_active_max() {
  attr_active_max_ = 0;
  clear_has_attr_active_max();
}
inline double PB_RoleBattleData_BattleHallowData::attr_active_max() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleHallowData.attr_active_max)
  return attr_active_max_;
}
inline void PB_RoleBattleData_BattleHallowData::set_attr_active_max(double value) {
  set_has_attr_active_max();
  attr_active_max_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleHallowData.attr_active_max)
}

// optional double attr_damage = 5;
inline bool PB_RoleBattleData_BattleHallowData::has_attr_damage() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PB_RoleBattleData_BattleHallowData::set_has_attr_damage() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PB_RoleBattleData_BattleHallowData::clear_has_attr_damage() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PB_RoleBattleData_BattleHallowData::clear_attr_damage() {
  attr_damage_ = 0;
  clear_has_attr_damage();
}
inline double PB_RoleBattleData_BattleHallowData::attr_damage() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleHallowData.attr_damage)
  return attr_damage_;
}
inline void PB_RoleBattleData_BattleHallowData::set_attr_damage(double value) {
  set_has_attr_damage();
  attr_damage_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleHallowData.attr_damage)
}

// optional double attr_recover = 6;
inline bool PB_RoleBattleData_BattleHallowData::has_attr_recover() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PB_RoleBattleData_BattleHallowData::set_has_attr_recover() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PB_RoleBattleData_BattleHallowData::clear_has_attr_recover() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PB_RoleBattleData_BattleHallowData::clear_attr_recover() {
  attr_recover_ = 0;
  clear_has_attr_recover();
}
inline double PB_RoleBattleData_BattleHallowData::attr_recover() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleHallowData.attr_recover)
  return attr_recover_;
}
inline void PB_RoleBattleData_BattleHallowData::set_attr_recover(double value) {
  set_has_attr_recover();
  attr_recover_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleHallowData.attr_recover)
}

// optional double attr_knock_off = 7;
inline bool PB_RoleBattleData_BattleHallowData::has_attr_knock_off() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PB_RoleBattleData_BattleHallowData::set_has_attr_knock_off() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PB_RoleBattleData_BattleHallowData::clear_has_attr_knock_off() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PB_RoleBattleData_BattleHallowData::clear_attr_knock_off() {
  attr_knock_off_ = 0;
  clear_has_attr_knock_off();
}
inline double PB_RoleBattleData_BattleHallowData::attr_knock_off() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleHallowData.attr_knock_off)
  return attr_knock_off_;
}
inline void PB_RoleBattleData_BattleHallowData::set_attr_knock_off(double value) {
  set_has_attr_knock_off();
  attr_knock_off_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleHallowData.attr_knock_off)
}

// optional double attr_anti_knock_off = 8;
inline bool PB_RoleBattleData_BattleHallowData::has_attr_anti_knock_off() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PB_RoleBattleData_BattleHallowData::set_has_attr_anti_knock_off() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PB_RoleBattleData_BattleHallowData::clear_has_attr_anti_knock_off() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PB_RoleBattleData_BattleHallowData::clear_attr_anti_knock_off() {
  attr_anti_knock_off_ = 0;
  clear_has_attr_anti_knock_off();
}
inline double PB_RoleBattleData_BattleHallowData::attr_anti_knock_off() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleHallowData.attr_anti_knock_off)
  return attr_anti_knock_off_;
}
inline void PB_RoleBattleData_BattleHallowData::set_attr_anti_knock_off(double value) {
  set_has_attr_anti_knock_off();
  attr_anti_knock_off_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleHallowData.attr_anti_knock_off)
}

// optional double attr_intervene = 9;
inline bool PB_RoleBattleData_BattleHallowData::has_attr_intervene() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PB_RoleBattleData_BattleHallowData::set_has_attr_intervene() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PB_RoleBattleData_BattleHallowData::clear_has_attr_intervene() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PB_RoleBattleData_BattleHallowData::clear_attr_intervene() {
  attr_intervene_ = 0;
  clear_has_attr_intervene();
}
inline double PB_RoleBattleData_BattleHallowData::attr_intervene() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleHallowData.attr_intervene)
  return attr_intervene_;
}
inline void PB_RoleBattleData_BattleHallowData::set_attr_intervene(double value) {
  set_has_attr_intervene();
  attr_intervene_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleHallowData.attr_intervene)
}

// optional double attr_speed = 10;
inline bool PB_RoleBattleData_BattleHallowData::has_attr_speed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PB_RoleBattleData_BattleHallowData::set_has_attr_speed() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PB_RoleBattleData_BattleHallowData::clear_has_attr_speed() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PB_RoleBattleData_BattleHallowData::clear_attr_speed() {
  attr_speed_ = 0;
  clear_has_attr_speed();
}
inline double PB_RoleBattleData_BattleHallowData::attr_speed() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleHallowData.attr_speed)
  return attr_speed_;
}
inline void PB_RoleBattleData_BattleHallowData::set_attr_speed(double value) {
  set_has_attr_speed();
  attr_speed_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleHallowData.attr_speed)
}

// repeated int32 skill_id_list = 12;
inline int PB_RoleBattleData_BattleHallowData::skill_id_list_size() const {
  return skill_id_list_.size();
}
inline void PB_RoleBattleData_BattleHallowData::clear_skill_id_list() {
  skill_id_list_.Clear();
}
inline ::google::protobuf::int32 PB_RoleBattleData_BattleHallowData::skill_id_list(int index) const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleHallowData.skill_id_list)
  return skill_id_list_.Get(index);
}
inline void PB_RoleBattleData_BattleHallowData::set_skill_id_list(int index, ::google::protobuf::int32 value) {
  skill_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleHallowData.skill_id_list)
}
inline void PB_RoleBattleData_BattleHallowData::add_skill_id_list(::google::protobuf::int32 value) {
  skill_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:PB_RoleBattleData.BattleHallowData.skill_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_RoleBattleData_BattleHallowData::skill_id_list() const {
  // @@protoc_insertion_point(field_list:PB_RoleBattleData.BattleHallowData.skill_id_list)
  return skill_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_RoleBattleData_BattleHallowData::mutable_skill_id_list() {
  // @@protoc_insertion_point(field_mutable_list:PB_RoleBattleData.BattleHallowData.skill_id_list)
  return &skill_id_list_;
}

// repeated int32 skill_lv_list = 13;
inline int PB_RoleBattleData_BattleHallowData::skill_lv_list_size() const {
  return skill_lv_list_.size();
}
inline void PB_RoleBattleData_BattleHallowData::clear_skill_lv_list() {
  skill_lv_list_.Clear();
}
inline ::google::protobuf::int32 PB_RoleBattleData_BattleHallowData::skill_lv_list(int index) const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleHallowData.skill_lv_list)
  return skill_lv_list_.Get(index);
}
inline void PB_RoleBattleData_BattleHallowData::set_skill_lv_list(int index, ::google::protobuf::int32 value) {
  skill_lv_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleHallowData.skill_lv_list)
}
inline void PB_RoleBattleData_BattleHallowData::add_skill_lv_list(::google::protobuf::int32 value) {
  skill_lv_list_.Add(value);
  // @@protoc_insertion_point(field_add:PB_RoleBattleData.BattleHallowData.skill_lv_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_RoleBattleData_BattleHallowData::skill_lv_list() const {
  // @@protoc_insertion_point(field_list:PB_RoleBattleData.BattleHallowData.skill_lv_list)
  return skill_lv_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_RoleBattleData_BattleHallowData::mutable_skill_lv_list() {
  // @@protoc_insertion_point(field_mutable_list:PB_RoleBattleData.BattleHallowData.skill_lv_list)
  return &skill_lv_list_;
}

// repeated int32 gift_list = 14;
inline int PB_RoleBattleData_BattleHallowData::gift_list_size() const {
  return gift_list_.size();
}
inline void PB_RoleBattleData_BattleHallowData::clear_gift_list() {
  gift_list_.Clear();
}
inline ::google::protobuf::int32 PB_RoleBattleData_BattleHallowData::gift_list(int index) const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleHallowData.gift_list)
  return gift_list_.Get(index);
}
inline void PB_RoleBattleData_BattleHallowData::set_gift_list(int index, ::google::protobuf::int32 value) {
  gift_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleHallowData.gift_list)
}
inline void PB_RoleBattleData_BattleHallowData::add_gift_list(::google::protobuf::int32 value) {
  gift_list_.Add(value);
  // @@protoc_insertion_point(field_add:PB_RoleBattleData.BattleHallowData.gift_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_RoleBattleData_BattleHallowData::gift_list() const {
  // @@protoc_insertion_point(field_list:PB_RoleBattleData.BattleHallowData.gift_list)
  return gift_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_RoleBattleData_BattleHallowData::mutable_gift_list() {
  // @@protoc_insertion_point(field_mutable_list:PB_RoleBattleData.BattleHallowData.gift_list)
  return &gift_list_;
}

// -------------------------------------------------------------------

// PB_RoleBattleData_BattleHuanShouSkill

// optional int32 skill_id = 1;
inline bool PB_RoleBattleData_BattleHuanShouSkill::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_RoleBattleData_BattleHuanShouSkill::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_RoleBattleData_BattleHuanShouSkill::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_RoleBattleData_BattleHuanShouSkill::clear_skill_id() {
  skill_id_ = 0;
  clear_has_skill_id();
}
inline ::google::protobuf::int32 PB_RoleBattleData_BattleHuanShouSkill::skill_id() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleHuanShouSkill.skill_id)
  return skill_id_;
}
inline void PB_RoleBattleData_BattleHuanShouSkill::set_skill_id(::google::protobuf::int32 value) {
  set_has_skill_id();
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleHuanShouSkill.skill_id)
}

// optional int32 skill_level = 2;
inline bool PB_RoleBattleData_BattleHuanShouSkill::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_RoleBattleData_BattleHuanShouSkill::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_RoleBattleData_BattleHuanShouSkill::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_RoleBattleData_BattleHuanShouSkill::clear_skill_level() {
  skill_level_ = 0;
  clear_has_skill_level();
}
inline ::google::protobuf::int32 PB_RoleBattleData_BattleHuanShouSkill::skill_level() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleHuanShouSkill.skill_level)
  return skill_level_;
}
inline void PB_RoleBattleData_BattleHuanShouSkill::set_skill_level(::google::protobuf::int32 value) {
  set_has_skill_level();
  skill_level_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleHuanShouSkill.skill_level)
}

// optional int32 cd_start = 3;
inline bool PB_RoleBattleData_BattleHuanShouSkill::has_cd_start() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_RoleBattleData_BattleHuanShouSkill::set_has_cd_start() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_RoleBattleData_BattleHuanShouSkill::clear_has_cd_start() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_RoleBattleData_BattleHuanShouSkill::clear_cd_start() {
  cd_start_ = 0;
  clear_has_cd_start();
}
inline ::google::protobuf::int32 PB_RoleBattleData_BattleHuanShouSkill::cd_start() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleHuanShouSkill.cd_start)
  return cd_start_;
}
inline void PB_RoleBattleData_BattleHuanShouSkill::set_cd_start(::google::protobuf::int32 value) {
  set_has_cd_start();
  cd_start_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleHuanShouSkill.cd_start)
}

// optional int32 cd_perform = 4;
inline bool PB_RoleBattleData_BattleHuanShouSkill::has_cd_perform() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PB_RoleBattleData_BattleHuanShouSkill::set_has_cd_perform() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PB_RoleBattleData_BattleHuanShouSkill::clear_has_cd_perform() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PB_RoleBattleData_BattleHuanShouSkill::clear_cd_perform() {
  cd_perform_ = 0;
  clear_has_cd_perform();
}
inline ::google::protobuf::int32 PB_RoleBattleData_BattleHuanShouSkill::cd_perform() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.BattleHuanShouSkill.cd_perform)
  return cd_perform_;
}
inline void PB_RoleBattleData_BattleHuanShouSkill::set_cd_perform(::google::protobuf::int32 value) {
  set_has_cd_perform();
  cd_perform_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.BattleHuanShouSkill.cd_perform)
}

// -------------------------------------------------------------------

// PB_RoleBattleData

// optional bool is_auto = 1;
inline bool PB_RoleBattleData::has_is_auto() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_RoleBattleData::set_has_is_auto() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_RoleBattleData::clear_has_is_auto() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_RoleBattleData::clear_is_auto() {
  is_auto_ = false;
  clear_has_is_auto();
}
inline bool PB_RoleBattleData::is_auto() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.is_auto)
  return is_auto_;
}
inline void PB_RoleBattleData::set_is_auto(bool value) {
  set_has_is_auto();
  is_auto_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.is_auto)
}

// optional bool is_role_stand_front = 2;
inline bool PB_RoleBattleData::has_is_role_stand_front() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_RoleBattleData::set_has_is_role_stand_front() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_RoleBattleData::clear_has_is_role_stand_front() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_RoleBattleData::clear_is_role_stand_front() {
  is_role_stand_front_ = false;
  clear_has_is_role_stand_front();
}
inline bool PB_RoleBattleData::is_role_stand_front() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.is_role_stand_front)
  return is_role_stand_front_;
}
inline void PB_RoleBattleData::set_is_role_stand_front(bool value) {
  set_has_is_role_stand_front();
  is_role_stand_front_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.is_role_stand_front)
}

// optional .PB_BattleCharacterData role_character_data = 3;
inline bool PB_RoleBattleData::has_role_character_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_RoleBattleData::set_has_role_character_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_RoleBattleData::clear_has_role_character_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_RoleBattleData::clear_role_character_data() {
  if (role_character_data_ != NULL) role_character_data_->::PB_BattleCharacterData::Clear();
  clear_has_role_character_data();
}
inline const ::PB_BattleCharacterData& PB_RoleBattleData::role_character_data() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.role_character_data)
  return role_character_data_ != NULL ? *role_character_data_ : *default_instance_->role_character_data_;
}
inline ::PB_BattleCharacterData* PB_RoleBattleData::mutable_role_character_data() {
  set_has_role_character_data();
  if (role_character_data_ == NULL) role_character_data_ = new ::PB_BattleCharacterData;
  // @@protoc_insertion_point(field_mutable:PB_RoleBattleData.role_character_data)
  return role_character_data_;
}
inline ::PB_BattleCharacterData* PB_RoleBattleData::release_role_character_data() {
  clear_has_role_character_data();
  ::PB_BattleCharacterData* temp = role_character_data_;
  role_character_data_ = NULL;
  return temp;
}
inline void PB_RoleBattleData::set_allocated_role_character_data(::PB_BattleCharacterData* role_character_data) {
  delete role_character_data_;
  role_character_data_ = role_character_data;
  if (role_character_data) {
    set_has_role_character_data();
  } else {
    clear_has_role_character_data();
  }
  // @@protoc_insertion_point(field_set_allocated:PB_RoleBattleData.role_character_data)
}

// optional int32 huanshou_level = 4;
inline bool PB_RoleBattleData::has_huanshou_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PB_RoleBattleData::set_has_huanshou_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PB_RoleBattleData::clear_has_huanshou_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PB_RoleBattleData::clear_huanshou_level() {
  huanshou_level_ = 0;
  clear_has_huanshou_level();
}
inline ::google::protobuf::int32 PB_RoleBattleData::huanshou_level() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.huanshou_level)
  return huanshou_level_;
}
inline void PB_RoleBattleData::set_huanshou_level(::google::protobuf::int32 value) {
  set_has_huanshou_level();
  huanshou_level_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.huanshou_level)
}

// repeated .PB_PartnerBattleData partner_character_data = 5;
inline int PB_RoleBattleData::partner_character_data_size() const {
  return partner_character_data_.size();
}
inline void PB_RoleBattleData::clear_partner_character_data() {
  partner_character_data_.Clear();
}
inline const ::PB_PartnerBattleData& PB_RoleBattleData::partner_character_data(int index) const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.partner_character_data)
  return partner_character_data_.Get(index);
}
inline ::PB_PartnerBattleData* PB_RoleBattleData::mutable_partner_character_data(int index) {
  // @@protoc_insertion_point(field_mutable:PB_RoleBattleData.partner_character_data)
  return partner_character_data_.Mutable(index);
}
inline ::PB_PartnerBattleData* PB_RoleBattleData::add_partner_character_data() {
  // @@protoc_insertion_point(field_add:PB_RoleBattleData.partner_character_data)
  return partner_character_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_PartnerBattleData >&
PB_RoleBattleData::partner_character_data() const {
  // @@protoc_insertion_point(field_list:PB_RoleBattleData.partner_character_data)
  return partner_character_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_PartnerBattleData >*
PB_RoleBattleData::mutable_partner_character_data() {
  // @@protoc_insertion_point(field_mutable_list:PB_RoleBattleData.partner_character_data)
  return &partner_character_data_;
}

// optional sint32 fight_pet_idx = 6;
inline bool PB_RoleBattleData::has_fight_pet_idx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PB_RoleBattleData::set_has_fight_pet_idx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PB_RoleBattleData::clear_has_fight_pet_idx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PB_RoleBattleData::clear_fight_pet_idx() {
  fight_pet_idx_ = 0;
  clear_has_fight_pet_idx();
}
inline ::google::protobuf::int32 PB_RoleBattleData::fight_pet_idx() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.fight_pet_idx)
  return fight_pet_idx_;
}
inline void PB_RoleBattleData::set_fight_pet_idx(::google::protobuf::int32 value) {
  set_has_fight_pet_idx();
  fight_pet_idx_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.fight_pet_idx)
}

// repeated .PB_PetBattleData pet_character_data = 7;
inline int PB_RoleBattleData::pet_character_data_size() const {
  return pet_character_data_.size();
}
inline void PB_RoleBattleData::clear_pet_character_data() {
  pet_character_data_.Clear();
}
inline const ::PB_PetBattleData& PB_RoleBattleData::pet_character_data(int index) const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.pet_character_data)
  return pet_character_data_.Get(index);
}
inline ::PB_PetBattleData* PB_RoleBattleData::mutable_pet_character_data(int index) {
  // @@protoc_insertion_point(field_mutable:PB_RoleBattleData.pet_character_data)
  return pet_character_data_.Mutable(index);
}
inline ::PB_PetBattleData* PB_RoleBattleData::add_pet_character_data() {
  // @@protoc_insertion_point(field_add:PB_RoleBattleData.pet_character_data)
  return pet_character_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_PetBattleData >&
PB_RoleBattleData::pet_character_data() const {
  // @@protoc_insertion_point(field_list:PB_RoleBattleData.pet_character_data)
  return pet_character_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_PetBattleData >*
PB_RoleBattleData::mutable_pet_character_data() {
  // @@protoc_insertion_point(field_mutable_list:PB_RoleBattleData.pet_character_data)
  return &pet_character_data_;
}

// optional int32 auto_first_move_type = 8;
inline bool PB_RoleBattleData::has_auto_first_move_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PB_RoleBattleData::set_has_auto_first_move_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PB_RoleBattleData::clear_has_auto_first_move_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PB_RoleBattleData::clear_auto_first_move_type() {
  auto_first_move_type_ = 0;
  clear_has_auto_first_move_type();
}
inline ::google::protobuf::int32 PB_RoleBattleData::auto_first_move_type() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.auto_first_move_type)
  return auto_first_move_type_;
}
inline void PB_RoleBattleData::set_auto_first_move_type(::google::protobuf::int32 value) {
  set_has_auto_first_move_type();
  auto_first_move_type_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.auto_first_move_type)
}

// optional int32 auto_first_skill_id = 9;
inline bool PB_RoleBattleData::has_auto_first_skill_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PB_RoleBattleData::set_has_auto_first_skill_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PB_RoleBattleData::clear_has_auto_first_skill_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PB_RoleBattleData::clear_auto_first_skill_id() {
  auto_first_skill_id_ = 0;
  clear_has_auto_first_skill_id();
}
inline ::google::protobuf::int32 PB_RoleBattleData::auto_first_skill_id() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.auto_first_skill_id)
  return auto_first_skill_id_;
}
inline void PB_RoleBattleData::set_auto_first_skill_id(::google::protobuf::int32 value) {
  set_has_auto_first_skill_id();
  auto_first_skill_id_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.auto_first_skill_id)
}

// optional int32 auto_first_skill_level = 10;
inline bool PB_RoleBattleData::has_auto_first_skill_level() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PB_RoleBattleData::set_has_auto_first_skill_level() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PB_RoleBattleData::clear_has_auto_first_skill_level() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PB_RoleBattleData::clear_auto_first_skill_level() {
  auto_first_skill_level_ = 0;
  clear_has_auto_first_skill_level();
}
inline ::google::protobuf::int32 PB_RoleBattleData::auto_first_skill_level() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.auto_first_skill_level)
  return auto_first_skill_level_;
}
inline void PB_RoleBattleData::set_auto_first_skill_level(::google::protobuf::int32 value) {
  set_has_auto_first_skill_level();
  auto_first_skill_level_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.auto_first_skill_level)
}

// optional int32 auto_second_move_type = 11;
inline bool PB_RoleBattleData::has_auto_second_move_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PB_RoleBattleData::set_has_auto_second_move_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PB_RoleBattleData::clear_has_auto_second_move_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PB_RoleBattleData::clear_auto_second_move_type() {
  auto_second_move_type_ = 0;
  clear_has_auto_second_move_type();
}
inline ::google::protobuf::int32 PB_RoleBattleData::auto_second_move_type() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.auto_second_move_type)
  return auto_second_move_type_;
}
inline void PB_RoleBattleData::set_auto_second_move_type(::google::protobuf::int32 value) {
  set_has_auto_second_move_type();
  auto_second_move_type_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.auto_second_move_type)
}

// optional int32 auto_second_skill_id = 12;
inline bool PB_RoleBattleData::has_auto_second_skill_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PB_RoleBattleData::set_has_auto_second_skill_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PB_RoleBattleData::clear_has_auto_second_skill_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PB_RoleBattleData::clear_auto_second_skill_id() {
  auto_second_skill_id_ = 0;
  clear_has_auto_second_skill_id();
}
inline ::google::protobuf::int32 PB_RoleBattleData::auto_second_skill_id() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.auto_second_skill_id)
  return auto_second_skill_id_;
}
inline void PB_RoleBattleData::set_auto_second_skill_id(::google::protobuf::int32 value) {
  set_has_auto_second_skill_id();
  auto_second_skill_id_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.auto_second_skill_id)
}

// optional int32 auto_second_skill_level = 13;
inline bool PB_RoleBattleData::has_auto_second_skill_level() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PB_RoleBattleData::set_has_auto_second_skill_level() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PB_RoleBattleData::clear_has_auto_second_skill_level() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PB_RoleBattleData::clear_auto_second_skill_level() {
  auto_second_skill_level_ = 0;
  clear_has_auto_second_skill_level();
}
inline ::google::protobuf::int32 PB_RoleBattleData::auto_second_skill_level() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.auto_second_skill_level)
  return auto_second_skill_level_;
}
inline void PB_RoleBattleData::set_auto_second_skill_level(::google::protobuf::int32 value) {
  set_has_auto_second_skill_level();
  auto_second_skill_level_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.auto_second_skill_level)
}

// repeated .PB_RoleBattleData.AttrInfo weapon_attr_list = 14;
inline int PB_RoleBattleData::weapon_attr_list_size() const {
  return weapon_attr_list_.size();
}
inline void PB_RoleBattleData::clear_weapon_attr_list() {
  weapon_attr_list_.Clear();
}
inline const ::PB_RoleBattleData_AttrInfo& PB_RoleBattleData::weapon_attr_list(int index) const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.weapon_attr_list)
  return weapon_attr_list_.Get(index);
}
inline ::PB_RoleBattleData_AttrInfo* PB_RoleBattleData::mutable_weapon_attr_list(int index) {
  // @@protoc_insertion_point(field_mutable:PB_RoleBattleData.weapon_attr_list)
  return weapon_attr_list_.Mutable(index);
}
inline ::PB_RoleBattleData_AttrInfo* PB_RoleBattleData::add_weapon_attr_list() {
  // @@protoc_insertion_point(field_add:PB_RoleBattleData.weapon_attr_list)
  return weapon_attr_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_AttrInfo >&
PB_RoleBattleData::weapon_attr_list() const {
  // @@protoc_insertion_point(field_list:PB_RoleBattleData.weapon_attr_list)
  return weapon_attr_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_AttrInfo >*
PB_RoleBattleData::mutable_weapon_attr_list() {
  // @@protoc_insertion_point(field_mutable_list:PB_RoleBattleData.weapon_attr_list)
  return &weapon_attr_list_;
}

// repeated int32 weapon_sp_list = 15;
inline int PB_RoleBattleData::weapon_sp_list_size() const {
  return weapon_sp_list_.size();
}
inline void PB_RoleBattleData::clear_weapon_sp_list() {
  weapon_sp_list_.Clear();
}
inline ::google::protobuf::int32 PB_RoleBattleData::weapon_sp_list(int index) const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.weapon_sp_list)
  return weapon_sp_list_.Get(index);
}
inline void PB_RoleBattleData::set_weapon_sp_list(int index, ::google::protobuf::int32 value) {
  weapon_sp_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.weapon_sp_list)
}
inline void PB_RoleBattleData::add_weapon_sp_list(::google::protobuf::int32 value) {
  weapon_sp_list_.Add(value);
  // @@protoc_insertion_point(field_add:PB_RoleBattleData.weapon_sp_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_RoleBattleData::weapon_sp_list() const {
  // @@protoc_insertion_point(field_list:PB_RoleBattleData.weapon_sp_list)
  return weapon_sp_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_RoleBattleData::mutable_weapon_sp_list() {
  // @@protoc_insertion_point(field_mutable_list:PB_RoleBattleData.weapon_sp_list)
  return &weapon_sp_list_;
}

// repeated int32 other_sp_list = 16;
inline int PB_RoleBattleData::other_sp_list_size() const {
  return other_sp_list_.size();
}
inline void PB_RoleBattleData::clear_other_sp_list() {
  other_sp_list_.Clear();
}
inline ::google::protobuf::int32 PB_RoleBattleData::other_sp_list(int index) const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.other_sp_list)
  return other_sp_list_.Get(index);
}
inline void PB_RoleBattleData::set_other_sp_list(int index, ::google::protobuf::int32 value) {
  other_sp_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.other_sp_list)
}
inline void PB_RoleBattleData::add_other_sp_list(::google::protobuf::int32 value) {
  other_sp_list_.Add(value);
  // @@protoc_insertion_point(field_add:PB_RoleBattleData.other_sp_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_RoleBattleData::other_sp_list() const {
  // @@protoc_insertion_point(field_list:PB_RoleBattleData.other_sp_list)
  return other_sp_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_RoleBattleData::mutable_other_sp_list() {
  // @@protoc_insertion_point(field_mutable_list:PB_RoleBattleData.other_sp_list)
  return &other_sp_list_;
}

// repeated .PB_RoleBattleData.BattleFabao fabao_list = 17;
inline int PB_RoleBattleData::fabao_list_size() const {
  return fabao_list_.size();
}
inline void PB_RoleBattleData::clear_fabao_list() {
  fabao_list_.Clear();
}
inline const ::PB_RoleBattleData_BattleFabao& PB_RoleBattleData::fabao_list(int index) const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.fabao_list)
  return fabao_list_.Get(index);
}
inline ::PB_RoleBattleData_BattleFabao* PB_RoleBattleData::mutable_fabao_list(int index) {
  // @@protoc_insertion_point(field_mutable:PB_RoleBattleData.fabao_list)
  return fabao_list_.Mutable(index);
}
inline ::PB_RoleBattleData_BattleFabao* PB_RoleBattleData::add_fabao_list() {
  // @@protoc_insertion_point(field_add:PB_RoleBattleData.fabao_list)
  return fabao_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_BattleFabao >&
PB_RoleBattleData::fabao_list() const {
  // @@protoc_insertion_point(field_list:PB_RoleBattleData.fabao_list)
  return fabao_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_BattleFabao >*
PB_RoleBattleData::mutable_fabao_list() {
  // @@protoc_insertion_point(field_mutable_list:PB_RoleBattleData.fabao_list)
  return &fabao_list_;
}

// optional bytes appearance = 18;
inline bool PB_RoleBattleData::has_appearance() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PB_RoleBattleData::set_has_appearance() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PB_RoleBattleData::clear_has_appearance() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PB_RoleBattleData::clear_appearance() {
  if (appearance_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    appearance_->clear();
  }
  clear_has_appearance();
}
inline const ::std::string& PB_RoleBattleData::appearance() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.appearance)
  return *appearance_;
}
inline void PB_RoleBattleData::set_appearance(const ::std::string& value) {
  set_has_appearance();
  if (appearance_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    appearance_ = new ::std::string;
  }
  appearance_->assign(value);
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.appearance)
}
inline void PB_RoleBattleData::set_appearance(const char* value) {
  set_has_appearance();
  if (appearance_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    appearance_ = new ::std::string;
  }
  appearance_->assign(value);
  // @@protoc_insertion_point(field_set_char:PB_RoleBattleData.appearance)
}
inline void PB_RoleBattleData::set_appearance(const void* value, size_t size) {
  set_has_appearance();
  if (appearance_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    appearance_ = new ::std::string;
  }
  appearance_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PB_RoleBattleData.appearance)
}
inline ::std::string* PB_RoleBattleData::mutable_appearance() {
  set_has_appearance();
  if (appearance_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    appearance_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:PB_RoleBattleData.appearance)
  return appearance_;
}
inline ::std::string* PB_RoleBattleData::release_appearance() {
  clear_has_appearance();
  if (appearance_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = appearance_;
    appearance_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PB_RoleBattleData::set_allocated_appearance(::std::string* appearance) {
  if (appearance_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete appearance_;
  }
  if (appearance) {
    set_has_appearance();
    appearance_ = appearance;
  } else {
    clear_has_appearance();
    appearance_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:PB_RoleBattleData.appearance)
}

// repeated int32 guild_buff_list = 21;
inline int PB_RoleBattleData::guild_buff_list_size() const {
  return guild_buff_list_.size();
}
inline void PB_RoleBattleData::clear_guild_buff_list() {
  guild_buff_list_.Clear();
}
inline ::google::protobuf::int32 PB_RoleBattleData::guild_buff_list(int index) const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.guild_buff_list)
  return guild_buff_list_.Get(index);
}
inline void PB_RoleBattleData::set_guild_buff_list(int index, ::google::protobuf::int32 value) {
  guild_buff_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.guild_buff_list)
}
inline void PB_RoleBattleData::add_guild_buff_list(::google::protobuf::int32 value) {
  guild_buff_list_.Add(value);
  // @@protoc_insertion_point(field_add:PB_RoleBattleData.guild_buff_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_RoleBattleData::guild_buff_list() const {
  // @@protoc_insertion_point(field_list:PB_RoleBattleData.guild_buff_list)
  return guild_buff_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_RoleBattleData::mutable_guild_buff_list() {
  // @@protoc_insertion_point(field_mutable_list:PB_RoleBattleData.guild_buff_list)
  return &guild_buff_list_;
}

// repeated .PB_RoleBattleData.PetPartnerBattleData pet_helper_data = 22;
inline int PB_RoleBattleData::pet_helper_data_size() const {
  return pet_helper_data_.size();
}
inline void PB_RoleBattleData::clear_pet_helper_data() {
  pet_helper_data_.Clear();
}
inline const ::PB_RoleBattleData_PetPartnerBattleData& PB_RoleBattleData::pet_helper_data(int index) const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.pet_helper_data)
  return pet_helper_data_.Get(index);
}
inline ::PB_RoleBattleData_PetPartnerBattleData* PB_RoleBattleData::mutable_pet_helper_data(int index) {
  // @@protoc_insertion_point(field_mutable:PB_RoleBattleData.pet_helper_data)
  return pet_helper_data_.Mutable(index);
}
inline ::PB_RoleBattleData_PetPartnerBattleData* PB_RoleBattleData::add_pet_helper_data() {
  // @@protoc_insertion_point(field_add:PB_RoleBattleData.pet_helper_data)
  return pet_helper_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_PetPartnerBattleData >&
PB_RoleBattleData::pet_helper_data() const {
  // @@protoc_insertion_point(field_list:PB_RoleBattleData.pet_helper_data)
  return pet_helper_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_PetPartnerBattleData >*
PB_RoleBattleData::mutable_pet_helper_data() {
  // @@protoc_insertion_point(field_mutable_list:PB_RoleBattleData.pet_helper_data)
  return &pet_helper_data_;
}

// optional int32 top_level = 23;
inline bool PB_RoleBattleData::has_top_level() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void PB_RoleBattleData::set_has_top_level() {
  _has_bits_[0] |= 0x00100000u;
}
inline void PB_RoleBattleData::clear_has_top_level() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void PB_RoleBattleData::clear_top_level() {
  top_level_ = 0;
  clear_has_top_level();
}
inline ::google::protobuf::int32 PB_RoleBattleData::top_level() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.top_level)
  return top_level_;
}
inline void PB_RoleBattleData::set_top_level(::google::protobuf::int32 value) {
  set_has_top_level();
  top_level_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.top_level)
}

// optional int32 heart_skill_is_vaild = 25;
inline bool PB_RoleBattleData::has_heart_skill_is_vaild() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void PB_RoleBattleData::set_has_heart_skill_is_vaild() {
  _has_bits_[0] |= 0x00200000u;
}
inline void PB_RoleBattleData::clear_has_heart_skill_is_vaild() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void PB_RoleBattleData::clear_heart_skill_is_vaild() {
  heart_skill_is_vaild_ = 0;
  clear_has_heart_skill_is_vaild();
}
inline ::google::protobuf::int32 PB_RoleBattleData::heart_skill_is_vaild() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.heart_skill_is_vaild)
  return heart_skill_is_vaild_;
}
inline void PB_RoleBattleData::set_heart_skill_is_vaild(::google::protobuf::int32 value) {
  set_has_heart_skill_is_vaild();
  heart_skill_is_vaild_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.heart_skill_is_vaild)
}

// repeated .PB_RoleBattleData.BattleHeartSkill heart_skill_list = 26;
inline int PB_RoleBattleData::heart_skill_list_size() const {
  return heart_skill_list_.size();
}
inline void PB_RoleBattleData::clear_heart_skill_list() {
  heart_skill_list_.Clear();
}
inline const ::PB_RoleBattleData_BattleHeartSkill& PB_RoleBattleData::heart_skill_list(int index) const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.heart_skill_list)
  return heart_skill_list_.Get(index);
}
inline ::PB_RoleBattleData_BattleHeartSkill* PB_RoleBattleData::mutable_heart_skill_list(int index) {
  // @@protoc_insertion_point(field_mutable:PB_RoleBattleData.heart_skill_list)
  return heart_skill_list_.Mutable(index);
}
inline ::PB_RoleBattleData_BattleHeartSkill* PB_RoleBattleData::add_heart_skill_list() {
  // @@protoc_insertion_point(field_add:PB_RoleBattleData.heart_skill_list)
  return heart_skill_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_BattleHeartSkill >&
PB_RoleBattleData::heart_skill_list() const {
  // @@protoc_insertion_point(field_list:PB_RoleBattleData.heart_skill_list)
  return heart_skill_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_BattleHeartSkill >*
PB_RoleBattleData::mutable_heart_skill_list() {
  // @@protoc_insertion_point(field_mutable_list:PB_RoleBattleData.heart_skill_list)
  return &heart_skill_list_;
}

// repeated int32 jieyi_uid_list = 27;
inline int PB_RoleBattleData::jieyi_uid_list_size() const {
  return jieyi_uid_list_.size();
}
inline void PB_RoleBattleData::clear_jieyi_uid_list() {
  jieyi_uid_list_.Clear();
}
inline ::google::protobuf::int32 PB_RoleBattleData::jieyi_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.jieyi_uid_list)
  return jieyi_uid_list_.Get(index);
}
inline void PB_RoleBattleData::set_jieyi_uid_list(int index, ::google::protobuf::int32 value) {
  jieyi_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.jieyi_uid_list)
}
inline void PB_RoleBattleData::add_jieyi_uid_list(::google::protobuf::int32 value) {
  jieyi_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:PB_RoleBattleData.jieyi_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_RoleBattleData::jieyi_uid_list() const {
  // @@protoc_insertion_point(field_list:PB_RoleBattleData.jieyi_uid_list)
  return jieyi_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_RoleBattleData::mutable_jieyi_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:PB_RoleBattleData.jieyi_uid_list)
  return &jieyi_uid_list_;
}

// repeated int32 jieyi_skill_list = 28;
inline int PB_RoleBattleData::jieyi_skill_list_size() const {
  return jieyi_skill_list_.size();
}
inline void PB_RoleBattleData::clear_jieyi_skill_list() {
  jieyi_skill_list_.Clear();
}
inline ::google::protobuf::int32 PB_RoleBattleData::jieyi_skill_list(int index) const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.jieyi_skill_list)
  return jieyi_skill_list_.Get(index);
}
inline void PB_RoleBattleData::set_jieyi_skill_list(int index, ::google::protobuf::int32 value) {
  jieyi_skill_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.jieyi_skill_list)
}
inline void PB_RoleBattleData::add_jieyi_skill_list(::google::protobuf::int32 value) {
  jieyi_skill_list_.Add(value);
  // @@protoc_insertion_point(field_add:PB_RoleBattleData.jieyi_skill_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_RoleBattleData::jieyi_skill_list() const {
  // @@protoc_insertion_point(field_list:PB_RoleBattleData.jieyi_skill_list)
  return jieyi_skill_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_RoleBattleData::mutable_jieyi_skill_list() {
  // @@protoc_insertion_point(field_mutable_list:PB_RoleBattleData.jieyi_skill_list)
  return &jieyi_skill_list_;
}

// optional int32 soaring_skill_id = 29;
inline bool PB_RoleBattleData::has_soaring_skill_id() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void PB_RoleBattleData::set_has_soaring_skill_id() {
  _has_bits_[0] |= 0x02000000u;
}
inline void PB_RoleBattleData::clear_has_soaring_skill_id() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void PB_RoleBattleData::clear_soaring_skill_id() {
  soaring_skill_id_ = 0;
  clear_has_soaring_skill_id();
}
inline ::google::protobuf::int32 PB_RoleBattleData::soaring_skill_id() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.soaring_skill_id)
  return soaring_skill_id_;
}
inline void PB_RoleBattleData::set_soaring_skill_id(::google::protobuf::int32 value) {
  set_has_soaring_skill_id();
  soaring_skill_id_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.soaring_skill_id)
}

// optional int32 soaring_skill_lv = 30;
inline bool PB_RoleBattleData::has_soaring_skill_lv() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void PB_RoleBattleData::set_has_soaring_skill_lv() {
  _has_bits_[0] |= 0x04000000u;
}
inline void PB_RoleBattleData::clear_has_soaring_skill_lv() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void PB_RoleBattleData::clear_soaring_skill_lv() {
  soaring_skill_lv_ = 0;
  clear_has_soaring_skill_lv();
}
inline ::google::protobuf::int32 PB_RoleBattleData::soaring_skill_lv() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.soaring_skill_lv)
  return soaring_skill_lv_;
}
inline void PB_RoleBattleData::set_soaring_skill_lv(::google::protobuf::int32 value) {
  set_has_soaring_skill_lv();
  soaring_skill_lv_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.soaring_skill_lv)
}

// optional int32 qingyuan_target_uid = 31;
inline bool PB_RoleBattleData::has_qingyuan_target_uid() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void PB_RoleBattleData::set_has_qingyuan_target_uid() {
  _has_bits_[0] |= 0x08000000u;
}
inline void PB_RoleBattleData::clear_has_qingyuan_target_uid() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void PB_RoleBattleData::clear_qingyuan_target_uid() {
  qingyuan_target_uid_ = 0;
  clear_has_qingyuan_target_uid();
}
inline ::google::protobuf::int32 PB_RoleBattleData::qingyuan_target_uid() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.qingyuan_target_uid)
  return qingyuan_target_uid_;
}
inline void PB_RoleBattleData::set_qingyuan_target_uid(::google::protobuf::int32 value) {
  set_has_qingyuan_target_uid();
  qingyuan_target_uid_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.qingyuan_target_uid)
}

// repeated int32 qingyuan_skill_list = 32;
inline int PB_RoleBattleData::qingyuan_skill_list_size() const {
  return qingyuan_skill_list_.size();
}
inline void PB_RoleBattleData::clear_qingyuan_skill_list() {
  qingyuan_skill_list_.Clear();
}
inline ::google::protobuf::int32 PB_RoleBattleData::qingyuan_skill_list(int index) const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.qingyuan_skill_list)
  return qingyuan_skill_list_.Get(index);
}
inline void PB_RoleBattleData::set_qingyuan_skill_list(int index, ::google::protobuf::int32 value) {
  qingyuan_skill_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.qingyuan_skill_list)
}
inline void PB_RoleBattleData::add_qingyuan_skill_list(::google::protobuf::int32 value) {
  qingyuan_skill_list_.Add(value);
  // @@protoc_insertion_point(field_add:PB_RoleBattleData.qingyuan_skill_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_RoleBattleData::qingyuan_skill_list() const {
  // @@protoc_insertion_point(field_list:PB_RoleBattleData.qingyuan_skill_list)
  return qingyuan_skill_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_RoleBattleData::mutable_qingyuan_skill_list() {
  // @@protoc_insertion_point(field_mutable_list:PB_RoleBattleData.qingyuan_skill_list)
  return &qingyuan_skill_list_;
}

// optional bool is_robot = 33;
inline bool PB_RoleBattleData::has_is_robot() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void PB_RoleBattleData::set_has_is_robot() {
  _has_bits_[0] |= 0x20000000u;
}
inline void PB_RoleBattleData::clear_has_is_robot() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void PB_RoleBattleData::clear_is_robot() {
  is_robot_ = false;
  clear_has_is_robot();
}
inline bool PB_RoleBattleData::is_robot() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.is_robot)
  return is_robot_;
}
inline void PB_RoleBattleData::set_is_robot(bool value) {
  set_has_is_robot();
  is_robot_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.is_robot)
}

// optional int32 career_suppress_value = 34;
inline bool PB_RoleBattleData::has_career_suppress_value() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void PB_RoleBattleData::set_has_career_suppress_value() {
  _has_bits_[0] |= 0x40000000u;
}
inline void PB_RoleBattleData::clear_has_career_suppress_value() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void PB_RoleBattleData::clear_career_suppress_value() {
  career_suppress_value_ = 0;
  clear_has_career_suppress_value();
}
inline ::google::protobuf::int32 PB_RoleBattleData::career_suppress_value() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.career_suppress_value)
  return career_suppress_value_;
}
inline void PB_RoleBattleData::set_career_suppress_value(::google::protobuf::int32 value) {
  set_has_career_suppress_value();
  career_suppress_value_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.career_suppress_value)
}

// optional int32 change_card_skill_id = 35;
inline bool PB_RoleBattleData::has_change_card_skill_id() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void PB_RoleBattleData::set_has_change_card_skill_id() {
  _has_bits_[0] |= 0x80000000u;
}
inline void PB_RoleBattleData::clear_has_change_card_skill_id() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void PB_RoleBattleData::clear_change_card_skill_id() {
  change_card_skill_id_ = 0;
  clear_has_change_card_skill_id();
}
inline ::google::protobuf::int32 PB_RoleBattleData::change_card_skill_id() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.change_card_skill_id)
  return change_card_skill_id_;
}
inline void PB_RoleBattleData::set_change_card_skill_id(::google::protobuf::int32 value) {
  set_has_change_card_skill_id();
  change_card_skill_id_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.change_card_skill_id)
}

// optional int32 change_card_seq = 36;
inline bool PB_RoleBattleData::has_change_card_seq() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void PB_RoleBattleData::set_has_change_card_seq() {
  _has_bits_[1] |= 0x00000001u;
}
inline void PB_RoleBattleData::clear_has_change_card_seq() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void PB_RoleBattleData::clear_change_card_seq() {
  change_card_seq_ = 0;
  clear_has_change_card_seq();
}
inline ::google::protobuf::int32 PB_RoleBattleData::change_card_seq() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.change_card_seq)
  return change_card_seq_;
}
inline void PB_RoleBattleData::set_change_card_seq(::google::protobuf::int32 value) {
  set_has_change_card_seq();
  change_card_seq_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.change_card_seq)
}

// optional int32 role_extra_capability = 37;
inline bool PB_RoleBattleData::has_role_extra_capability() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void PB_RoleBattleData::set_has_role_extra_capability() {
  _has_bits_[1] |= 0x00000002u;
}
inline void PB_RoleBattleData::clear_has_role_extra_capability() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void PB_RoleBattleData::clear_role_extra_capability() {
  role_extra_capability_ = 0;
  clear_has_role_extra_capability();
}
inline ::google::protobuf::int32 PB_RoleBattleData::role_extra_capability() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.role_extra_capability)
  return role_extra_capability_;
}
inline void PB_RoleBattleData::set_role_extra_capability(::google::protobuf::int32 value) {
  set_has_role_extra_capability();
  role_extra_capability_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.role_extra_capability)
}

// repeated .PB_RoleBattleData.BattleHallowData hallow_list = 38;
inline int PB_RoleBattleData::hallow_list_size() const {
  return hallow_list_.size();
}
inline void PB_RoleBattleData::clear_hallow_list() {
  hallow_list_.Clear();
}
inline const ::PB_RoleBattleData_BattleHallowData& PB_RoleBattleData::hallow_list(int index) const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.hallow_list)
  return hallow_list_.Get(index);
}
inline ::PB_RoleBattleData_BattleHallowData* PB_RoleBattleData::mutable_hallow_list(int index) {
  // @@protoc_insertion_point(field_mutable:PB_RoleBattleData.hallow_list)
  return hallow_list_.Mutable(index);
}
inline ::PB_RoleBattleData_BattleHallowData* PB_RoleBattleData::add_hallow_list() {
  // @@protoc_insertion_point(field_add:PB_RoleBattleData.hallow_list)
  return hallow_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_BattleHallowData >&
PB_RoleBattleData::hallow_list() const {
  // @@protoc_insertion_point(field_list:PB_RoleBattleData.hallow_list)
  return hallow_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_RoleBattleData_BattleHallowData >*
PB_RoleBattleData::mutable_hallow_list() {
  // @@protoc_insertion_point(field_mutable_list:PB_RoleBattleData.hallow_list)
  return &hallow_list_;
}

// optional int32 fight_hallow_idx = 39;
inline bool PB_RoleBattleData::has_fight_hallow_idx() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void PB_RoleBattleData::set_has_fight_hallow_idx() {
  _has_bits_[1] |= 0x00000008u;
}
inline void PB_RoleBattleData::clear_has_fight_hallow_idx() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void PB_RoleBattleData::clear_fight_hallow_idx() {
  fight_hallow_idx_ = 0;
  clear_has_fight_hallow_idx();
}
inline ::google::protobuf::int32 PB_RoleBattleData::fight_hallow_idx() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.fight_hallow_idx)
  return fight_hallow_idx_;
}
inline void PB_RoleBattleData::set_fight_hallow_idx(::google::protobuf::int32 value) {
  set_has_fight_hallow_idx();
  fight_hallow_idx_ = value;
  // @@protoc_insertion_point(field_set:PB_RoleBattleData.fight_hallow_idx)
}

// optional .PB_RoleBattleData.BattleHuanShouSkill huanshou_skill = 40;
inline bool PB_RoleBattleData::has_huanshou_skill() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void PB_RoleBattleData::set_has_huanshou_skill() {
  _has_bits_[1] |= 0x00000010u;
}
inline void PB_RoleBattleData::clear_has_huanshou_skill() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void PB_RoleBattleData::clear_huanshou_skill() {
  if (huanshou_skill_ != NULL) huanshou_skill_->::PB_RoleBattleData_BattleHuanShouSkill::Clear();
  clear_has_huanshou_skill();
}
inline const ::PB_RoleBattleData_BattleHuanShouSkill& PB_RoleBattleData::huanshou_skill() const {
  // @@protoc_insertion_point(field_get:PB_RoleBattleData.huanshou_skill)
  return huanshou_skill_ != NULL ? *huanshou_skill_ : *default_instance_->huanshou_skill_;
}
inline ::PB_RoleBattleData_BattleHuanShouSkill* PB_RoleBattleData::mutable_huanshou_skill() {
  set_has_huanshou_skill();
  if (huanshou_skill_ == NULL) huanshou_skill_ = new ::PB_RoleBattleData_BattleHuanShouSkill;
  // @@protoc_insertion_point(field_mutable:PB_RoleBattleData.huanshou_skill)
  return huanshou_skill_;
}
inline ::PB_RoleBattleData_BattleHuanShouSkill* PB_RoleBattleData::release_huanshou_skill() {
  clear_has_huanshou_skill();
  ::PB_RoleBattleData_BattleHuanShouSkill* temp = huanshou_skill_;
  huanshou_skill_ = NULL;
  return temp;
}
inline void PB_RoleBattleData::set_allocated_huanshou_skill(::PB_RoleBattleData_BattleHuanShouSkill* huanshou_skill) {
  delete huanshou_skill_;
  huanshou_skill_ = huanshou_skill;
  if (huanshou_skill) {
    set_has_huanshou_skill();
  } else {
    clear_has_huanshou_skill();
  }
  // @@protoc_insertion_point(field_set_allocated:PB_RoleBattleData.huanshou_skill)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_role_5fbattle_5fdata_2eproto__INCLUDED
