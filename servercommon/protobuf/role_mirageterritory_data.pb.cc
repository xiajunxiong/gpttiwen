// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: role_mirageterritory_data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "role_mirageterritory_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PB_RoleMirageTerritoryInfoData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_RoleMirageTerritoryInfoData_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_role_5fmirageterritory_5fdata_2eproto() {
  protobuf_AddDesc_role_5fmirageterritory_5fdata_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "role_mirageterritory_data.proto");
  GOOGLE_CHECK(file != NULL);
  PB_RoleMirageTerritoryInfoData_descriptor_ = file->message_type(0);
  static const int PB_RoleMirageTerritoryInfoData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RoleMirageTerritoryInfoData, pertner_data_list_),
  };
  PB_RoleMirageTerritoryInfoData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_RoleMirageTerritoryInfoData_descriptor_,
      PB_RoleMirageTerritoryInfoData::default_instance_,
      PB_RoleMirageTerritoryInfoData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RoleMirageTerritoryInfoData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RoleMirageTerritoryInfoData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_RoleMirageTerritoryInfoData));
  PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo_descriptor_ = PB_RoleMirageTerritoryInfoData_descriptor_->nested_type(0);
  static const int PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo, top_seq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo, now_seq_),
  };
  PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo_descriptor_,
      PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::default_instance_,
      PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo));
  PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo_descriptor_ = PB_RoleMirageTerritoryInfoData_descriptor_->nested_type(1);
  static const int PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo, today_pass_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo, pass_area_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo, pass_seq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo, partner_list_),
  };
  PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo_descriptor_,
      PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::default_instance_,
      PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_role_5fmirageterritory_5fdata_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_RoleMirageTerritoryInfoData_descriptor_, &PB_RoleMirageTerritoryInfoData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo_descriptor_, &PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo_descriptor_, &PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_role_5fmirageterritory_5fdata_2eproto() {
  delete PB_RoleMirageTerritoryInfoData::default_instance_;
  delete PB_RoleMirageTerritoryInfoData_reflection_;
  delete PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::default_instance_;
  delete PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo_reflection_;
  delete PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::default_instance_;
  delete PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo_reflection_;
}

void protobuf_AddDesc_role_5fmirageterritory_5fdata_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\037role_mirageterritory_data.proto\"\321\002\n\036PB"
    "_RoleMirageTerritoryInfoData\022Q\n\021pertner_"
    "data_list\030\001 \003(\01326.PB_RoleMirageTerritory"
    "InfoData.MirageTerritoryAllInfo\0327\n\023Mirag"
    "eTerritoryInfo\022\017\n\007top_seq\030\001 \001(\005\022\017\n\007now_s"
    "eq\030\002 \001(\005\032\242\001\n\026MirageTerritoryAllInfo\022\030\n\020t"
    "oday_pass_times\030\001 \001(\005\022\021\n\tpass_area\030\002 \001(\005"
    "\022\020\n\010pass_seq\030\003 \001(\005\022I\n\014partner_list\030\004 \003(\013"
    "23.PB_RoleMirageTerritoryInfoData.Mirage"
    "TerritoryInfo", 373);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "role_mirageterritory_data.proto", &protobuf_RegisterTypes);
  PB_RoleMirageTerritoryInfoData::default_instance_ = new PB_RoleMirageTerritoryInfoData();
  PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::default_instance_ = new PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo();
  PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::default_instance_ = new PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo();
  PB_RoleMirageTerritoryInfoData::default_instance_->InitAsDefaultInstance();
  PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::default_instance_->InitAsDefaultInstance();
  PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_role_5fmirageterritory_5fdata_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_role_5fmirageterritory_5fdata_2eproto {
  StaticDescriptorInitializer_role_5fmirageterritory_5fdata_2eproto() {
    protobuf_AddDesc_role_5fmirageterritory_5fdata_2eproto();
  }
} static_descriptor_initializer_role_5fmirageterritory_5fdata_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::kTopSeqFieldNumber;
const int PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::kNowSeqFieldNumber;
#endif  // !_MSC_VER

PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_RoleMirageTerritoryInfoData.MirageTerritoryInfo)
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::InitAsDefaultInstance() {
}

PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo(const PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_RoleMirageTerritoryInfoData.MirageTerritoryInfo)
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::SharedCtor() {
  _cached_size_ = 0;
  top_seq_ = 0;
  now_seq_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::~PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo() {
  // @@protoc_insertion_point(destructor:PB_RoleMirageTerritoryInfoData.MirageTerritoryInfo)
  SharedDtor();
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo_descriptor_;
}

const PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo& PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_role_5fmirageterritory_5fdata_2eproto();
  return *default_instance_;
}

PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo* PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::default_instance_ = NULL;

PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo* PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::New() const {
  return new PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo;
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(top_seq_, now_seq_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_RoleMirageTerritoryInfoData.MirageTerritoryInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 top_seq = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_seq_)));
          set_has_top_seq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_now_seq;
        break;
      }

      // optional int32 now_seq = 2;
      case 2: {
        if (tag == 16) {
         parse_now_seq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &now_seq_)));
          set_has_now_seq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_RoleMirageTerritoryInfoData.MirageTerritoryInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_RoleMirageTerritoryInfoData.MirageTerritoryInfo)
  return false;
#undef DO_
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_RoleMirageTerritoryInfoData.MirageTerritoryInfo)
  // optional int32 top_seq = 1;
  if (has_top_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->top_seq(), output);
  }

  // optional int32 now_seq = 2;
  if (has_now_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->now_seq(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB_RoleMirageTerritoryInfoData.MirageTerritoryInfo)
}

::google::protobuf::uint8* PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_RoleMirageTerritoryInfoData.MirageTerritoryInfo)
  // optional int32 top_seq = 1;
  if (has_top_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->top_seq(), target);
  }

  // optional int32 now_seq = 2;
  if (has_now_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->now_seq(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB_RoleMirageTerritoryInfoData.MirageTerritoryInfo)
  return target;
}

int PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 top_seq = 1;
    if (has_top_seq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->top_seq());
    }

    // optional int32 now_seq = 2;
    if (has_now_seq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->now_seq());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::MergeFrom(const PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_top_seq()) {
      set_top_seq(from.top_seq());
    }
    if (from.has_now_seq()) {
      set_now_seq(from.now_seq());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::CopyFrom(const PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::IsInitialized() const {

  return true;
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::Swap(PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo* other) {
  if (other != this) {
    std::swap(top_seq_, other->top_seq_);
    std::swap(now_seq_, other->now_seq_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo_descriptor_;
  metadata.reflection = PB_RoleMirageTerritoryInfoData_MirageTerritoryInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::kTodayPassTimesFieldNumber;
const int PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::kPassAreaFieldNumber;
const int PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::kPassSeqFieldNumber;
const int PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::kPartnerListFieldNumber;
#endif  // !_MSC_VER

PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_RoleMirageTerritoryInfoData.MirageTerritoryAllInfo)
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::InitAsDefaultInstance() {
}

PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo(const PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_RoleMirageTerritoryInfoData.MirageTerritoryAllInfo)
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::SharedCtor() {
  _cached_size_ = 0;
  today_pass_times_ = 0;
  pass_area_ = 0;
  pass_seq_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::~PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo() {
  // @@protoc_insertion_point(destructor:PB_RoleMirageTerritoryInfoData.MirageTerritoryAllInfo)
  SharedDtor();
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo_descriptor_;
}

const PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo& PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_role_5fmirageterritory_5fdata_2eproto();
  return *default_instance_;
}

PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo* PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::default_instance_ = NULL;

PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo* PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::New() const {
  return new PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo;
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(today_pass_times_, pass_area_);
    pass_seq_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  partner_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_RoleMirageTerritoryInfoData.MirageTerritoryAllInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 today_pass_times = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &today_pass_times_)));
          set_has_today_pass_times();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_pass_area;
        break;
      }

      // optional int32 pass_area = 2;
      case 2: {
        if (tag == 16) {
         parse_pass_area:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pass_area_)));
          set_has_pass_area();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pass_seq;
        break;
      }

      // optional int32 pass_seq = 3;
      case 3: {
        if (tag == 24) {
         parse_pass_seq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pass_seq_)));
          set_has_pass_seq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_partner_list;
        break;
      }

      // repeated .PB_RoleMirageTerritoryInfoData.MirageTerritoryInfo partner_list = 4;
      case 4: {
        if (tag == 34) {
         parse_partner_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_partner_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_partner_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_RoleMirageTerritoryInfoData.MirageTerritoryAllInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_RoleMirageTerritoryInfoData.MirageTerritoryAllInfo)
  return false;
#undef DO_
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_RoleMirageTerritoryInfoData.MirageTerritoryAllInfo)
  // optional int32 today_pass_times = 1;
  if (has_today_pass_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->today_pass_times(), output);
  }

  // optional int32 pass_area = 2;
  if (has_pass_area()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pass_area(), output);
  }

  // optional int32 pass_seq = 3;
  if (has_pass_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pass_seq(), output);
  }

  // repeated .PB_RoleMirageTerritoryInfoData.MirageTerritoryInfo partner_list = 4;
  for (int i = 0; i < this->partner_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->partner_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB_RoleMirageTerritoryInfoData.MirageTerritoryAllInfo)
}

::google::protobuf::uint8* PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_RoleMirageTerritoryInfoData.MirageTerritoryAllInfo)
  // optional int32 today_pass_times = 1;
  if (has_today_pass_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->today_pass_times(), target);
  }

  // optional int32 pass_area = 2;
  if (has_pass_area()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pass_area(), target);
  }

  // optional int32 pass_seq = 3;
  if (has_pass_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pass_seq(), target);
  }

  // repeated .PB_RoleMirageTerritoryInfoData.MirageTerritoryInfo partner_list = 4;
  for (int i = 0; i < this->partner_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->partner_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB_RoleMirageTerritoryInfoData.MirageTerritoryAllInfo)
  return target;
}

int PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 today_pass_times = 1;
    if (has_today_pass_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->today_pass_times());
    }

    // optional int32 pass_area = 2;
    if (has_pass_area()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pass_area());
    }

    // optional int32 pass_seq = 3;
    if (has_pass_seq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pass_seq());
    }

  }
  // repeated .PB_RoleMirageTerritoryInfoData.MirageTerritoryInfo partner_list = 4;
  total_size += 1 * this->partner_list_size();
  for (int i = 0; i < this->partner_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->partner_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::MergeFrom(const PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  partner_list_.MergeFrom(from.partner_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_today_pass_times()) {
      set_today_pass_times(from.today_pass_times());
    }
    if (from.has_pass_area()) {
      set_pass_area(from.pass_area());
    }
    if (from.has_pass_seq()) {
      set_pass_seq(from.pass_seq());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::CopyFrom(const PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::IsInitialized() const {

  return true;
}

void PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::Swap(PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo* other) {
  if (other != this) {
    std::swap(today_pass_times_, other->today_pass_times_);
    std::swap(pass_area_, other->pass_area_);
    std::swap(pass_seq_, other->pass_seq_);
    partner_list_.Swap(&other->partner_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo_descriptor_;
  metadata.reflection = PB_RoleMirageTerritoryInfoData_MirageTerritoryAllInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int PB_RoleMirageTerritoryInfoData::kPertnerDataListFieldNumber;
#endif  // !_MSC_VER

PB_RoleMirageTerritoryInfoData::PB_RoleMirageTerritoryInfoData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_RoleMirageTerritoryInfoData)
}

void PB_RoleMirageTerritoryInfoData::InitAsDefaultInstance() {
}

PB_RoleMirageTerritoryInfoData::PB_RoleMirageTerritoryInfoData(const PB_RoleMirageTerritoryInfoData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_RoleMirageTerritoryInfoData)
}

void PB_RoleMirageTerritoryInfoData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_RoleMirageTerritoryInfoData::~PB_RoleMirageTerritoryInfoData() {
  // @@protoc_insertion_point(destructor:PB_RoleMirageTerritoryInfoData)
  SharedDtor();
}

void PB_RoleMirageTerritoryInfoData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_RoleMirageTerritoryInfoData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_RoleMirageTerritoryInfoData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_RoleMirageTerritoryInfoData_descriptor_;
}

const PB_RoleMirageTerritoryInfoData& PB_RoleMirageTerritoryInfoData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_role_5fmirageterritory_5fdata_2eproto();
  return *default_instance_;
}

PB_RoleMirageTerritoryInfoData* PB_RoleMirageTerritoryInfoData::default_instance_ = NULL;

PB_RoleMirageTerritoryInfoData* PB_RoleMirageTerritoryInfoData::New() const {
  return new PB_RoleMirageTerritoryInfoData;
}

void PB_RoleMirageTerritoryInfoData::Clear() {
  pertner_data_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_RoleMirageTerritoryInfoData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_RoleMirageTerritoryInfoData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_RoleMirageTerritoryInfoData.MirageTerritoryAllInfo pertner_data_list = 1;
      case 1: {
        if (tag == 10) {
         parse_pertner_data_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pertner_data_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_pertner_data_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_RoleMirageTerritoryInfoData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_RoleMirageTerritoryInfoData)
  return false;
#undef DO_
}

void PB_RoleMirageTerritoryInfoData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_RoleMirageTerritoryInfoData)
  // repeated .PB_RoleMirageTerritoryInfoData.MirageTerritoryAllInfo pertner_data_list = 1;
  for (int i = 0; i < this->pertner_data_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pertner_data_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB_RoleMirageTerritoryInfoData)
}

::google::protobuf::uint8* PB_RoleMirageTerritoryInfoData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_RoleMirageTerritoryInfoData)
  // repeated .PB_RoleMirageTerritoryInfoData.MirageTerritoryAllInfo pertner_data_list = 1;
  for (int i = 0; i < this->pertner_data_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pertner_data_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB_RoleMirageTerritoryInfoData)
  return target;
}

int PB_RoleMirageTerritoryInfoData::ByteSize() const {
  int total_size = 0;

  // repeated .PB_RoleMirageTerritoryInfoData.MirageTerritoryAllInfo pertner_data_list = 1;
  total_size += 1 * this->pertner_data_list_size();
  for (int i = 0; i < this->pertner_data_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pertner_data_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_RoleMirageTerritoryInfoData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_RoleMirageTerritoryInfoData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_RoleMirageTerritoryInfoData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_RoleMirageTerritoryInfoData::MergeFrom(const PB_RoleMirageTerritoryInfoData& from) {
  GOOGLE_CHECK_NE(&from, this);
  pertner_data_list_.MergeFrom(from.pertner_data_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_RoleMirageTerritoryInfoData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_RoleMirageTerritoryInfoData::CopyFrom(const PB_RoleMirageTerritoryInfoData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_RoleMirageTerritoryInfoData::IsInitialized() const {

  return true;
}

void PB_RoleMirageTerritoryInfoData::Swap(PB_RoleMirageTerritoryInfoData* other) {
  if (other != this) {
    pertner_data_list_.Swap(&other->pertner_data_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_RoleMirageTerritoryInfoData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_RoleMirageTerritoryInfoData_descriptor_;
  metadata.reflection = PB_RoleMirageTerritoryInfoData_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
