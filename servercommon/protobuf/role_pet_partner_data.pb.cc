// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: role_pet_partner_data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "role_pet_partner_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PB_RolePetInfoData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_RolePetInfoData_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_RolePetInfoData_PetPrintItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_RolePetInfoData_PetPrintItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_RolePetInfoData_PetData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_RolePetInfoData_PetData_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_RolePartnerInfoData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_RolePartnerInfoData_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_RolePartnerInfoData_PartnerData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_RolePartnerInfoData_PartnerData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_role_5fpet_5fpartner_5fdata_2eproto() {
  protobuf_AddDesc_role_5fpet_5fpartner_5fdata_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "role_pet_partner_data.proto");
  GOOGLE_CHECK(file != NULL);
  PB_RolePetInfoData_descriptor_ = file->message_type(0);
  static const int PB_RolePetInfoData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePetInfoData, pet_data_list_),
  };
  PB_RolePetInfoData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_RolePetInfoData_descriptor_,
      PB_RolePetInfoData::default_instance_,
      PB_RolePetInfoData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePetInfoData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePetInfoData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_RolePetInfoData));
  PB_RolePetInfoData_PetPrintItem_descriptor_ = PB_RolePetInfoData_descriptor_->nested_type(0);
  static const int PB_RolePetInfoData_PetPrintItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePetInfoData_PetPrintItem, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePetInfoData_PetPrintItem, level_),
  };
  PB_RolePetInfoData_PetPrintItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_RolePetInfoData_PetPrintItem_descriptor_,
      PB_RolePetInfoData_PetPrintItem::default_instance_,
      PB_RolePetInfoData_PetPrintItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePetInfoData_PetPrintItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePetInfoData_PetPrintItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_RolePetInfoData_PetPrintItem));
  PB_RolePetInfoData_PetData_descriptor_ = PB_RolePetInfoData_descriptor_->nested_type(1);
  static const int PB_RolePetInfoData_PetData_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePetInfoData_PetData, item_unique_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePetInfoData_PetData, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePetInfoData_PetData, str_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePetInfoData_PetData, skill_id_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePetInfoData_PetData, soul_item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePetInfoData_PetData, soul_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePetInfoData_PetData, zhufu_pet_item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePetInfoData_PetData, god_print_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePetInfoData_PetData, capability_),
  };
  PB_RolePetInfoData_PetData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_RolePetInfoData_PetData_descriptor_,
      PB_RolePetInfoData_PetData::default_instance_,
      PB_RolePetInfoData_PetData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePetInfoData_PetData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePetInfoData_PetData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_RolePetInfoData_PetData));
  PB_RolePartnerInfoData_descriptor_ = file->message_type(1);
  static const int PB_RolePartnerInfoData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePartnerInfoData, pertner_data_list_),
  };
  PB_RolePartnerInfoData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_RolePartnerInfoData_descriptor_,
      PB_RolePartnerInfoData::default_instance_,
      PB_RolePartnerInfoData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePartnerInfoData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePartnerInfoData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_RolePartnerInfoData));
  PB_RolePartnerInfoData_PartnerData_descriptor_ = PB_RolePartnerInfoData_descriptor_->nested_type(0);
  static const int PB_RolePartnerInfoData_PartnerData_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePartnerInfoData_PartnerData, partner_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePartnerInfoData_PartnerData, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePartnerInfoData_PartnerData, upgrade_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePartnerInfoData_PartnerData, quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePartnerInfoData_PartnerData, quality_segment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePartnerInfoData_PartnerData, pact_id_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePartnerInfoData_PartnerData, equip_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePartnerInfoData_PartnerData, capability_),
  };
  PB_RolePartnerInfoData_PartnerData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_RolePartnerInfoData_PartnerData_descriptor_,
      PB_RolePartnerInfoData_PartnerData::default_instance_,
      PB_RolePartnerInfoData_PartnerData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePartnerInfoData_PartnerData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_RolePartnerInfoData_PartnerData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_RolePartnerInfoData_PartnerData));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_role_5fpet_5fpartner_5fdata_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_RolePetInfoData_descriptor_, &PB_RolePetInfoData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_RolePetInfoData_PetPrintItem_descriptor_, &PB_RolePetInfoData_PetPrintItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_RolePetInfoData_PetData_descriptor_, &PB_RolePetInfoData_PetData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_RolePartnerInfoData_descriptor_, &PB_RolePartnerInfoData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_RolePartnerInfoData_PartnerData_descriptor_, &PB_RolePartnerInfoData_PartnerData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_role_5fpet_5fpartner_5fdata_2eproto() {
  delete PB_RolePetInfoData::default_instance_;
  delete PB_RolePetInfoData_reflection_;
  delete PB_RolePetInfoData_PetPrintItem::default_instance_;
  delete PB_RolePetInfoData_PetPrintItem_reflection_;
  delete PB_RolePetInfoData_PetData::default_instance_;
  delete PB_RolePetInfoData_PetData_reflection_;
  delete PB_RolePartnerInfoData::default_instance_;
  delete PB_RolePartnerInfoData_reflection_;
  delete PB_RolePartnerInfoData_PartnerData::default_instance_;
  delete PB_RolePartnerInfoData_PartnerData_reflection_;
}

void protobuf_AddDesc_role_5fpet_5fpartner_5fdata_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\033role_pet_partner_data.proto\"\352\002\n\022PB_Rol"
    "ePetInfoData\0222\n\rpet_data_list\030\001 \003(\0132\033.PB"
    "_RolePetInfoData.PetData\032.\n\014PetPrintItem"
    "\022\017\n\007item_id\030\001 \001(\005\022\r\n\005level\030\002 \001(\005\032\357\001\n\007Pet"
    "Data\022\026\n\016item_unique_id\030\001 \001(\003\022\017\n\007item_id\030"
    "\002 \001(\005\022\021\n\tstr_level\030\003 \001(\005\022\025\n\rskill_id_lis"
    "t\030\004 \003(\005\022\024\n\014soul_item_id\030\005 \001(\005\022\022\n\nsoul_le"
    "vel\030\006 \001(\005\022\031\n\021zhufu_pet_item_id\030\007 \003(\005\0228\n\016"
    "god_print_item\030\010 \003(\0132 .PB_RolePetInfoDat"
    "a.PetPrintItem\022\022\n\ncapability\030\t \001(\005\"\207\002\n\026P"
    "B_RolePartnerInfoData\022>\n\021pertner_data_li"
    "st\030\001 \003(\0132#.PB_RolePartnerInfoData.Partne"
    "rData\032\254\001\n\013PartnerData\022\022\n\npartner_id\030\001 \001("
    "\005\022\r\n\005level\030\002 \001(\005\022\022\n\nupgrade_lv\030\003 \001(\005\022\017\n\007"
    "quality\030\004 \001(\005\022\027\n\017quality_segment\030\005 \001(\005\022\024"
    "\n\014pact_id_list\030\006 \003(\005\022\022\n\nequip_list\030\007 \003(\005"
    "\022\022\n\ncapability\030\010 \001(\005", 660);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "role_pet_partner_data.proto", &protobuf_RegisterTypes);
  PB_RolePetInfoData::default_instance_ = new PB_RolePetInfoData();
  PB_RolePetInfoData_PetPrintItem::default_instance_ = new PB_RolePetInfoData_PetPrintItem();
  PB_RolePetInfoData_PetData::default_instance_ = new PB_RolePetInfoData_PetData();
  PB_RolePartnerInfoData::default_instance_ = new PB_RolePartnerInfoData();
  PB_RolePartnerInfoData_PartnerData::default_instance_ = new PB_RolePartnerInfoData_PartnerData();
  PB_RolePetInfoData::default_instance_->InitAsDefaultInstance();
  PB_RolePetInfoData_PetPrintItem::default_instance_->InitAsDefaultInstance();
  PB_RolePetInfoData_PetData::default_instance_->InitAsDefaultInstance();
  PB_RolePartnerInfoData::default_instance_->InitAsDefaultInstance();
  PB_RolePartnerInfoData_PartnerData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_role_5fpet_5fpartner_5fdata_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_role_5fpet_5fpartner_5fdata_2eproto {
  StaticDescriptorInitializer_role_5fpet_5fpartner_5fdata_2eproto() {
    protobuf_AddDesc_role_5fpet_5fpartner_5fdata_2eproto();
  }
} static_descriptor_initializer_role_5fpet_5fpartner_5fdata_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int PB_RolePetInfoData_PetPrintItem::kItemIdFieldNumber;
const int PB_RolePetInfoData_PetPrintItem::kLevelFieldNumber;
#endif  // !_MSC_VER

PB_RolePetInfoData_PetPrintItem::PB_RolePetInfoData_PetPrintItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_RolePetInfoData.PetPrintItem)
}

void PB_RolePetInfoData_PetPrintItem::InitAsDefaultInstance() {
}

PB_RolePetInfoData_PetPrintItem::PB_RolePetInfoData_PetPrintItem(const PB_RolePetInfoData_PetPrintItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_RolePetInfoData.PetPrintItem)
}

void PB_RolePetInfoData_PetPrintItem::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_RolePetInfoData_PetPrintItem::~PB_RolePetInfoData_PetPrintItem() {
  // @@protoc_insertion_point(destructor:PB_RolePetInfoData.PetPrintItem)
  SharedDtor();
}

void PB_RolePetInfoData_PetPrintItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_RolePetInfoData_PetPrintItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_RolePetInfoData_PetPrintItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_RolePetInfoData_PetPrintItem_descriptor_;
}

const PB_RolePetInfoData_PetPrintItem& PB_RolePetInfoData_PetPrintItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_role_5fpet_5fpartner_5fdata_2eproto();
  return *default_instance_;
}

PB_RolePetInfoData_PetPrintItem* PB_RolePetInfoData_PetPrintItem::default_instance_ = NULL;

PB_RolePetInfoData_PetPrintItem* PB_RolePetInfoData_PetPrintItem::New() const {
  return new PB_RolePetInfoData_PetPrintItem;
}

void PB_RolePetInfoData_PetPrintItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PB_RolePetInfoData_PetPrintItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(item_id_, level_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_RolePetInfoData_PetPrintItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_RolePetInfoData.PetPrintItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }

      // optional int32 level = 2;
      case 2: {
        if (tag == 16) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_RolePetInfoData.PetPrintItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_RolePetInfoData.PetPrintItem)
  return false;
#undef DO_
}

void PB_RolePetInfoData_PetPrintItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_RolePetInfoData.PetPrintItem)
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }

  // optional int32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB_RolePetInfoData.PetPrintItem)
}

::google::protobuf::uint8* PB_RolePetInfoData_PetPrintItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_RolePetInfoData.PetPrintItem)
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }

  // optional int32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB_RolePetInfoData.PetPrintItem)
  return target;
}

int PB_RolePetInfoData_PetPrintItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }

    // optional int32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_RolePetInfoData_PetPrintItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_RolePetInfoData_PetPrintItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_RolePetInfoData_PetPrintItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_RolePetInfoData_PetPrintItem::MergeFrom(const PB_RolePetInfoData_PetPrintItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_RolePetInfoData_PetPrintItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_RolePetInfoData_PetPrintItem::CopyFrom(const PB_RolePetInfoData_PetPrintItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_RolePetInfoData_PetPrintItem::IsInitialized() const {

  return true;
}

void PB_RolePetInfoData_PetPrintItem::Swap(PB_RolePetInfoData_PetPrintItem* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_RolePetInfoData_PetPrintItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_RolePetInfoData_PetPrintItem_descriptor_;
  metadata.reflection = PB_RolePetInfoData_PetPrintItem_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int PB_RolePetInfoData_PetData::kItemUniqueIdFieldNumber;
const int PB_RolePetInfoData_PetData::kItemIdFieldNumber;
const int PB_RolePetInfoData_PetData::kStrLevelFieldNumber;
const int PB_RolePetInfoData_PetData::kSkillIdListFieldNumber;
const int PB_RolePetInfoData_PetData::kSoulItemIdFieldNumber;
const int PB_RolePetInfoData_PetData::kSoulLevelFieldNumber;
const int PB_RolePetInfoData_PetData::kZhufuPetItemIdFieldNumber;
const int PB_RolePetInfoData_PetData::kGodPrintItemFieldNumber;
const int PB_RolePetInfoData_PetData::kCapabilityFieldNumber;
#endif  // !_MSC_VER

PB_RolePetInfoData_PetData::PB_RolePetInfoData_PetData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_RolePetInfoData.PetData)
}

void PB_RolePetInfoData_PetData::InitAsDefaultInstance() {
}

PB_RolePetInfoData_PetData::PB_RolePetInfoData_PetData(const PB_RolePetInfoData_PetData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_RolePetInfoData.PetData)
}

void PB_RolePetInfoData_PetData::SharedCtor() {
  _cached_size_ = 0;
  item_unique_id_ = GOOGLE_LONGLONG(0);
  item_id_ = 0;
  str_level_ = 0;
  soul_item_id_ = 0;
  soul_level_ = 0;
  capability_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_RolePetInfoData_PetData::~PB_RolePetInfoData_PetData() {
  // @@protoc_insertion_point(destructor:PB_RolePetInfoData.PetData)
  SharedDtor();
}

void PB_RolePetInfoData_PetData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_RolePetInfoData_PetData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_RolePetInfoData_PetData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_RolePetInfoData_PetData_descriptor_;
}

const PB_RolePetInfoData_PetData& PB_RolePetInfoData_PetData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_role_5fpet_5fpartner_5fdata_2eproto();
  return *default_instance_;
}

PB_RolePetInfoData_PetData* PB_RolePetInfoData_PetData::default_instance_ = NULL;

PB_RolePetInfoData_PetData* PB_RolePetInfoData_PetData::New() const {
  return new PB_RolePetInfoData_PetData;
}

void PB_RolePetInfoData_PetData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PB_RolePetInfoData_PetData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 55) {
    ZR_(item_unique_id_, str_level_);
    ZR_(soul_item_id_, soul_level_);
  }
  capability_ = 0;

#undef OFFSET_OF_FIELD_
#undef ZR_

  skill_id_list_.Clear();
  zhufu_pet_item_id_.Clear();
  god_print_item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_RolePetInfoData_PetData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_RolePetInfoData.PetData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 item_unique_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &item_unique_id_)));
          set_has_item_unique_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }

      // optional int32 item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_str_level;
        break;
      }

      // optional int32 str_level = 3;
      case 3: {
        if (tag == 24) {
         parse_str_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &str_level_)));
          set_has_str_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_skill_id_list;
        break;
      }

      // repeated int32 skill_id_list = 4;
      case 4: {
        if (tag == 32) {
         parse_skill_id_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_skill_id_list())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_skill_id_list())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_skill_id_list;
        if (input->ExpectTag(40)) goto parse_soul_item_id;
        break;
      }

      // optional int32 soul_item_id = 5;
      case 5: {
        if (tag == 40) {
         parse_soul_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &soul_item_id_)));
          set_has_soul_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_soul_level;
        break;
      }

      // optional int32 soul_level = 6;
      case 6: {
        if (tag == 48) {
         parse_soul_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &soul_level_)));
          set_has_soul_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_zhufu_pet_item_id;
        break;
      }

      // repeated int32 zhufu_pet_item_id = 7;
      case 7: {
        if (tag == 56) {
         parse_zhufu_pet_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_zhufu_pet_item_id())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_zhufu_pet_item_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_zhufu_pet_item_id;
        if (input->ExpectTag(66)) goto parse_god_print_item;
        break;
      }

      // repeated .PB_RolePetInfoData.PetPrintItem god_print_item = 8;
      case 8: {
        if (tag == 66) {
         parse_god_print_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_god_print_item()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_god_print_item;
        if (input->ExpectTag(72)) goto parse_capability;
        break;
      }

      // optional int32 capability = 9;
      case 9: {
        if (tag == 72) {
         parse_capability:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &capability_)));
          set_has_capability();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_RolePetInfoData.PetData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_RolePetInfoData.PetData)
  return false;
#undef DO_
}

void PB_RolePetInfoData_PetData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_RolePetInfoData.PetData)
  // optional int64 item_unique_id = 1;
  if (has_item_unique_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->item_unique_id(), output);
  }

  // optional int32 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_id(), output);
  }

  // optional int32 str_level = 3;
  if (has_str_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->str_level(), output);
  }

  // repeated int32 skill_id_list = 4;
  for (int i = 0; i < this->skill_id_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->skill_id_list(i), output);
  }

  // optional int32 soul_item_id = 5;
  if (has_soul_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->soul_item_id(), output);
  }

  // optional int32 soul_level = 6;
  if (has_soul_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->soul_level(), output);
  }

  // repeated int32 zhufu_pet_item_id = 7;
  for (int i = 0; i < this->zhufu_pet_item_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->zhufu_pet_item_id(i), output);
  }

  // repeated .PB_RolePetInfoData.PetPrintItem god_print_item = 8;
  for (int i = 0; i < this->god_print_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->god_print_item(i), output);
  }

  // optional int32 capability = 9;
  if (has_capability()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->capability(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB_RolePetInfoData.PetData)
}

::google::protobuf::uint8* PB_RolePetInfoData_PetData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_RolePetInfoData.PetData)
  // optional int64 item_unique_id = 1;
  if (has_item_unique_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->item_unique_id(), target);
  }

  // optional int32 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_id(), target);
  }

  // optional int32 str_level = 3;
  if (has_str_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->str_level(), target);
  }

  // repeated int32 skill_id_list = 4;
  for (int i = 0; i < this->skill_id_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->skill_id_list(i), target);
  }

  // optional int32 soul_item_id = 5;
  if (has_soul_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->soul_item_id(), target);
  }

  // optional int32 soul_level = 6;
  if (has_soul_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->soul_level(), target);
  }

  // repeated int32 zhufu_pet_item_id = 7;
  for (int i = 0; i < this->zhufu_pet_item_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->zhufu_pet_item_id(i), target);
  }

  // repeated .PB_RolePetInfoData.PetPrintItem god_print_item = 8;
  for (int i = 0; i < this->god_print_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->god_print_item(i), target);
  }

  // optional int32 capability = 9;
  if (has_capability()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->capability(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB_RolePetInfoData.PetData)
  return target;
}

int PB_RolePetInfoData_PetData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 item_unique_id = 1;
    if (has_item_unique_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->item_unique_id());
    }

    // optional int32 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }

    // optional int32 str_level = 3;
    if (has_str_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->str_level());
    }

    // optional int32 soul_item_id = 5;
    if (has_soul_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->soul_item_id());
    }

    // optional int32 soul_level = 6;
    if (has_soul_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->soul_level());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 capability = 9;
    if (has_capability()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->capability());
    }

  }
  // repeated int32 skill_id_list = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->skill_id_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->skill_id_list(i));
    }
    total_size += 1 * this->skill_id_list_size() + data_size;
  }

  // repeated int32 zhufu_pet_item_id = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->zhufu_pet_item_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->zhufu_pet_item_id(i));
    }
    total_size += 1 * this->zhufu_pet_item_id_size() + data_size;
  }

  // repeated .PB_RolePetInfoData.PetPrintItem god_print_item = 8;
  total_size += 1 * this->god_print_item_size();
  for (int i = 0; i < this->god_print_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->god_print_item(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_RolePetInfoData_PetData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_RolePetInfoData_PetData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_RolePetInfoData_PetData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_RolePetInfoData_PetData::MergeFrom(const PB_RolePetInfoData_PetData& from) {
  GOOGLE_CHECK_NE(&from, this);
  skill_id_list_.MergeFrom(from.skill_id_list_);
  zhufu_pet_item_id_.MergeFrom(from.zhufu_pet_item_id_);
  god_print_item_.MergeFrom(from.god_print_item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_unique_id()) {
      set_item_unique_id(from.item_unique_id());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_str_level()) {
      set_str_level(from.str_level());
    }
    if (from.has_soul_item_id()) {
      set_soul_item_id(from.soul_item_id());
    }
    if (from.has_soul_level()) {
      set_soul_level(from.soul_level());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_capability()) {
      set_capability(from.capability());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_RolePetInfoData_PetData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_RolePetInfoData_PetData::CopyFrom(const PB_RolePetInfoData_PetData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_RolePetInfoData_PetData::IsInitialized() const {

  return true;
}

void PB_RolePetInfoData_PetData::Swap(PB_RolePetInfoData_PetData* other) {
  if (other != this) {
    std::swap(item_unique_id_, other->item_unique_id_);
    std::swap(item_id_, other->item_id_);
    std::swap(str_level_, other->str_level_);
    skill_id_list_.Swap(&other->skill_id_list_);
    std::swap(soul_item_id_, other->soul_item_id_);
    std::swap(soul_level_, other->soul_level_);
    zhufu_pet_item_id_.Swap(&other->zhufu_pet_item_id_);
    god_print_item_.Swap(&other->god_print_item_);
    std::swap(capability_, other->capability_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_RolePetInfoData_PetData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_RolePetInfoData_PetData_descriptor_;
  metadata.reflection = PB_RolePetInfoData_PetData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int PB_RolePetInfoData::kPetDataListFieldNumber;
#endif  // !_MSC_VER

PB_RolePetInfoData::PB_RolePetInfoData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_RolePetInfoData)
}

void PB_RolePetInfoData::InitAsDefaultInstance() {
}

PB_RolePetInfoData::PB_RolePetInfoData(const PB_RolePetInfoData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_RolePetInfoData)
}

void PB_RolePetInfoData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_RolePetInfoData::~PB_RolePetInfoData() {
  // @@protoc_insertion_point(destructor:PB_RolePetInfoData)
  SharedDtor();
}

void PB_RolePetInfoData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_RolePetInfoData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_RolePetInfoData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_RolePetInfoData_descriptor_;
}

const PB_RolePetInfoData& PB_RolePetInfoData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_role_5fpet_5fpartner_5fdata_2eproto();
  return *default_instance_;
}

PB_RolePetInfoData* PB_RolePetInfoData::default_instance_ = NULL;

PB_RolePetInfoData* PB_RolePetInfoData::New() const {
  return new PB_RolePetInfoData;
}

void PB_RolePetInfoData::Clear() {
  pet_data_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_RolePetInfoData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_RolePetInfoData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_RolePetInfoData.PetData pet_data_list = 1;
      case 1: {
        if (tag == 10) {
         parse_pet_data_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pet_data_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_pet_data_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_RolePetInfoData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_RolePetInfoData)
  return false;
#undef DO_
}

void PB_RolePetInfoData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_RolePetInfoData)
  // repeated .PB_RolePetInfoData.PetData pet_data_list = 1;
  for (int i = 0; i < this->pet_data_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pet_data_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB_RolePetInfoData)
}

::google::protobuf::uint8* PB_RolePetInfoData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_RolePetInfoData)
  // repeated .PB_RolePetInfoData.PetData pet_data_list = 1;
  for (int i = 0; i < this->pet_data_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pet_data_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB_RolePetInfoData)
  return target;
}

int PB_RolePetInfoData::ByteSize() const {
  int total_size = 0;

  // repeated .PB_RolePetInfoData.PetData pet_data_list = 1;
  total_size += 1 * this->pet_data_list_size();
  for (int i = 0; i < this->pet_data_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pet_data_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_RolePetInfoData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_RolePetInfoData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_RolePetInfoData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_RolePetInfoData::MergeFrom(const PB_RolePetInfoData& from) {
  GOOGLE_CHECK_NE(&from, this);
  pet_data_list_.MergeFrom(from.pet_data_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_RolePetInfoData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_RolePetInfoData::CopyFrom(const PB_RolePetInfoData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_RolePetInfoData::IsInitialized() const {

  return true;
}

void PB_RolePetInfoData::Swap(PB_RolePetInfoData* other) {
  if (other != this) {
    pet_data_list_.Swap(&other->pet_data_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_RolePetInfoData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_RolePetInfoData_descriptor_;
  metadata.reflection = PB_RolePetInfoData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_RolePartnerInfoData_PartnerData::kPartnerIdFieldNumber;
const int PB_RolePartnerInfoData_PartnerData::kLevelFieldNumber;
const int PB_RolePartnerInfoData_PartnerData::kUpgradeLvFieldNumber;
const int PB_RolePartnerInfoData_PartnerData::kQualityFieldNumber;
const int PB_RolePartnerInfoData_PartnerData::kQualitySegmentFieldNumber;
const int PB_RolePartnerInfoData_PartnerData::kPactIdListFieldNumber;
const int PB_RolePartnerInfoData_PartnerData::kEquipListFieldNumber;
const int PB_RolePartnerInfoData_PartnerData::kCapabilityFieldNumber;
#endif  // !_MSC_VER

PB_RolePartnerInfoData_PartnerData::PB_RolePartnerInfoData_PartnerData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_RolePartnerInfoData.PartnerData)
}

void PB_RolePartnerInfoData_PartnerData::InitAsDefaultInstance() {
}

PB_RolePartnerInfoData_PartnerData::PB_RolePartnerInfoData_PartnerData(const PB_RolePartnerInfoData_PartnerData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_RolePartnerInfoData.PartnerData)
}

void PB_RolePartnerInfoData_PartnerData::SharedCtor() {
  _cached_size_ = 0;
  partner_id_ = 0;
  level_ = 0;
  upgrade_lv_ = 0;
  quality_ = 0;
  quality_segment_ = 0;
  capability_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_RolePartnerInfoData_PartnerData::~PB_RolePartnerInfoData_PartnerData() {
  // @@protoc_insertion_point(destructor:PB_RolePartnerInfoData.PartnerData)
  SharedDtor();
}

void PB_RolePartnerInfoData_PartnerData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_RolePartnerInfoData_PartnerData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_RolePartnerInfoData_PartnerData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_RolePartnerInfoData_PartnerData_descriptor_;
}

const PB_RolePartnerInfoData_PartnerData& PB_RolePartnerInfoData_PartnerData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_role_5fpet_5fpartner_5fdata_2eproto();
  return *default_instance_;
}

PB_RolePartnerInfoData_PartnerData* PB_RolePartnerInfoData_PartnerData::default_instance_ = NULL;

PB_RolePartnerInfoData_PartnerData* PB_RolePartnerInfoData_PartnerData::New() const {
  return new PB_RolePartnerInfoData_PartnerData;
}

void PB_RolePartnerInfoData_PartnerData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PB_RolePartnerInfoData_PartnerData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 159) {
    ZR_(partner_id_, quality_);
    ZR_(quality_segment_, capability_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  pact_id_list_.Clear();
  equip_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_RolePartnerInfoData_PartnerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_RolePartnerInfoData.PartnerData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 partner_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &partner_id_)));
          set_has_partner_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }

      // optional int32 level = 2;
      case 2: {
        if (tag == 16) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_upgrade_lv;
        break;
      }

      // optional int32 upgrade_lv = 3;
      case 3: {
        if (tag == 24) {
         parse_upgrade_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &upgrade_lv_)));
          set_has_upgrade_lv();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_quality;
        break;
      }

      // optional int32 quality = 4;
      case 4: {
        if (tag == 32) {
         parse_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_quality_segment;
        break;
      }

      // optional int32 quality_segment = 5;
      case 5: {
        if (tag == 40) {
         parse_quality_segment:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quality_segment_)));
          set_has_quality_segment();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_pact_id_list;
        break;
      }

      // repeated int32 pact_id_list = 6;
      case 6: {
        if (tag == 48) {
         parse_pact_id_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_pact_id_list())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pact_id_list())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_pact_id_list;
        if (input->ExpectTag(56)) goto parse_equip_list;
        break;
      }

      // repeated int32 equip_list = 7;
      case 7: {
        if (tag == 56) {
         parse_equip_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_equip_list())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_equip_list())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_equip_list;
        if (input->ExpectTag(64)) goto parse_capability;
        break;
      }

      // optional int32 capability = 8;
      case 8: {
        if (tag == 64) {
         parse_capability:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &capability_)));
          set_has_capability();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_RolePartnerInfoData.PartnerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_RolePartnerInfoData.PartnerData)
  return false;
#undef DO_
}

void PB_RolePartnerInfoData_PartnerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_RolePartnerInfoData.PartnerData)
  // optional int32 partner_id = 1;
  if (has_partner_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->partner_id(), output);
  }

  // optional int32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }

  // optional int32 upgrade_lv = 3;
  if (has_upgrade_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->upgrade_lv(), output);
  }

  // optional int32 quality = 4;
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->quality(), output);
  }

  // optional int32 quality_segment = 5;
  if (has_quality_segment()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->quality_segment(), output);
  }

  // repeated int32 pact_id_list = 6;
  for (int i = 0; i < this->pact_id_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->pact_id_list(i), output);
  }

  // repeated int32 equip_list = 7;
  for (int i = 0; i < this->equip_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->equip_list(i), output);
  }

  // optional int32 capability = 8;
  if (has_capability()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->capability(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB_RolePartnerInfoData.PartnerData)
}

::google::protobuf::uint8* PB_RolePartnerInfoData_PartnerData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_RolePartnerInfoData.PartnerData)
  // optional int32 partner_id = 1;
  if (has_partner_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->partner_id(), target);
  }

  // optional int32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }

  // optional int32 upgrade_lv = 3;
  if (has_upgrade_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->upgrade_lv(), target);
  }

  // optional int32 quality = 4;
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->quality(), target);
  }

  // optional int32 quality_segment = 5;
  if (has_quality_segment()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->quality_segment(), target);
  }

  // repeated int32 pact_id_list = 6;
  for (int i = 0; i < this->pact_id_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->pact_id_list(i), target);
  }

  // repeated int32 equip_list = 7;
  for (int i = 0; i < this->equip_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->equip_list(i), target);
  }

  // optional int32 capability = 8;
  if (has_capability()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->capability(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB_RolePartnerInfoData.PartnerData)
  return target;
}

int PB_RolePartnerInfoData_PartnerData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 partner_id = 1;
    if (has_partner_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->partner_id());
    }

    // optional int32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int32 upgrade_lv = 3;
    if (has_upgrade_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->upgrade_lv());
    }

    // optional int32 quality = 4;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quality());
    }

    // optional int32 quality_segment = 5;
    if (has_quality_segment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quality_segment());
    }

    // optional int32 capability = 8;
    if (has_capability()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->capability());
    }

  }
  // repeated int32 pact_id_list = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->pact_id_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->pact_id_list(i));
    }
    total_size += 1 * this->pact_id_list_size() + data_size;
  }

  // repeated int32 equip_list = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->equip_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->equip_list(i));
    }
    total_size += 1 * this->equip_list_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_RolePartnerInfoData_PartnerData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_RolePartnerInfoData_PartnerData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_RolePartnerInfoData_PartnerData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_RolePartnerInfoData_PartnerData::MergeFrom(const PB_RolePartnerInfoData_PartnerData& from) {
  GOOGLE_CHECK_NE(&from, this);
  pact_id_list_.MergeFrom(from.pact_id_list_);
  equip_list_.MergeFrom(from.equip_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_partner_id()) {
      set_partner_id(from.partner_id());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_upgrade_lv()) {
      set_upgrade_lv(from.upgrade_lv());
    }
    if (from.has_quality()) {
      set_quality(from.quality());
    }
    if (from.has_quality_segment()) {
      set_quality_segment(from.quality_segment());
    }
    if (from.has_capability()) {
      set_capability(from.capability());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_RolePartnerInfoData_PartnerData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_RolePartnerInfoData_PartnerData::CopyFrom(const PB_RolePartnerInfoData_PartnerData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_RolePartnerInfoData_PartnerData::IsInitialized() const {

  return true;
}

void PB_RolePartnerInfoData_PartnerData::Swap(PB_RolePartnerInfoData_PartnerData* other) {
  if (other != this) {
    std::swap(partner_id_, other->partner_id_);
    std::swap(level_, other->level_);
    std::swap(upgrade_lv_, other->upgrade_lv_);
    std::swap(quality_, other->quality_);
    std::swap(quality_segment_, other->quality_segment_);
    pact_id_list_.Swap(&other->pact_id_list_);
    equip_list_.Swap(&other->equip_list_);
    std::swap(capability_, other->capability_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_RolePartnerInfoData_PartnerData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_RolePartnerInfoData_PartnerData_descriptor_;
  metadata.reflection = PB_RolePartnerInfoData_PartnerData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int PB_RolePartnerInfoData::kPertnerDataListFieldNumber;
#endif  // !_MSC_VER

PB_RolePartnerInfoData::PB_RolePartnerInfoData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PB_RolePartnerInfoData)
}

void PB_RolePartnerInfoData::InitAsDefaultInstance() {
}

PB_RolePartnerInfoData::PB_RolePartnerInfoData(const PB_RolePartnerInfoData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PB_RolePartnerInfoData)
}

void PB_RolePartnerInfoData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_RolePartnerInfoData::~PB_RolePartnerInfoData() {
  // @@protoc_insertion_point(destructor:PB_RolePartnerInfoData)
  SharedDtor();
}

void PB_RolePartnerInfoData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_RolePartnerInfoData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_RolePartnerInfoData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_RolePartnerInfoData_descriptor_;
}

const PB_RolePartnerInfoData& PB_RolePartnerInfoData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_role_5fpet_5fpartner_5fdata_2eproto();
  return *default_instance_;
}

PB_RolePartnerInfoData* PB_RolePartnerInfoData::default_instance_ = NULL;

PB_RolePartnerInfoData* PB_RolePartnerInfoData::New() const {
  return new PB_RolePartnerInfoData;
}

void PB_RolePartnerInfoData::Clear() {
  pertner_data_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_RolePartnerInfoData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PB_RolePartnerInfoData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PB_RolePartnerInfoData.PartnerData pertner_data_list = 1;
      case 1: {
        if (tag == 10) {
         parse_pertner_data_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pertner_data_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_pertner_data_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PB_RolePartnerInfoData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PB_RolePartnerInfoData)
  return false;
#undef DO_
}

void PB_RolePartnerInfoData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PB_RolePartnerInfoData)
  // repeated .PB_RolePartnerInfoData.PartnerData pertner_data_list = 1;
  for (int i = 0; i < this->pertner_data_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pertner_data_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PB_RolePartnerInfoData)
}

::google::protobuf::uint8* PB_RolePartnerInfoData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PB_RolePartnerInfoData)
  // repeated .PB_RolePartnerInfoData.PartnerData pertner_data_list = 1;
  for (int i = 0; i < this->pertner_data_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pertner_data_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PB_RolePartnerInfoData)
  return target;
}

int PB_RolePartnerInfoData::ByteSize() const {
  int total_size = 0;

  // repeated .PB_RolePartnerInfoData.PartnerData pertner_data_list = 1;
  total_size += 1 * this->pertner_data_list_size();
  for (int i = 0; i < this->pertner_data_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pertner_data_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_RolePartnerInfoData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_RolePartnerInfoData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_RolePartnerInfoData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_RolePartnerInfoData::MergeFrom(const PB_RolePartnerInfoData& from) {
  GOOGLE_CHECK_NE(&from, this);
  pertner_data_list_.MergeFrom(from.pertner_data_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_RolePartnerInfoData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_RolePartnerInfoData::CopyFrom(const PB_RolePartnerInfoData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_RolePartnerInfoData::IsInitialized() const {

  return true;
}

void PB_RolePartnerInfoData::Swap(PB_RolePartnerInfoData* other) {
  if (other != this) {
    pertner_data_list_.Swap(&other->pertner_data_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_RolePartnerInfoData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_RolePartnerInfoData_descriptor_;
  metadata.reflection = PB_RolePartnerInfoData_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
