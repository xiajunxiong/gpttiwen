// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: universe_team_arena_base_data.proto

#ifndef PROTOBUF_universe_5fteam_5farena_5fbase_5fdata_2eproto__INCLUDED
#define PROTOBUF_universe_5fteam_5farena_5fbase_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_universe_5fteam_5farena_5fbase_5fdata_2eproto();
void protobuf_AssignDesc_universe_5fteam_5farena_5fbase_5fdata_2eproto();
void protobuf_ShutdownFile_universe_5fteam_5farena_5fbase_5fdata_2eproto();

class PB_UTABaseData;

// ===================================================================

class PB_UTABaseData : public ::google::protobuf::Message {
 public:
  PB_UTABaseData();
  virtual ~PB_UTABaseData();

  PB_UTABaseData(const PB_UTABaseData& from);

  inline PB_UTABaseData& operator=(const PB_UTABaseData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_UTABaseData& default_instance();

  void Swap(PB_UTABaseData* other);

  // implements Message ----------------------------------------------

  PB_UTABaseData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_UTABaseData& from);
  void MergeFrom(const PB_UTABaseData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 cur_status = 1;
  inline bool has_cur_status() const;
  inline void clear_cur_status();
  static const int kCurStatusFieldNumber = 1;
  inline ::google::protobuf::int32 cur_status() const;
  inline void set_cur_status(::google::protobuf::int32 value);

  // optional int32 season_index = 2;
  inline bool has_season_index() const;
  inline void clear_season_index();
  static const int kSeasonIndexFieldNumber = 2;
  inline ::google::protobuf::int32 season_index() const;
  inline void set_season_index(::google::protobuf::int32 value);

  // optional int32 qualification_round_idx = 3;
  inline bool has_qualification_round_idx() const;
  inline void clear_qualification_round_idx();
  static const int kQualificationRoundIdxFieldNumber = 3;
  inline ::google::protobuf::int32 qualification_round_idx() const;
  inline void set_qualification_round_idx(::google::protobuf::int32 value);

  // optional int32 main_round_idx = 4;
  inline bool has_main_round_idx() const;
  inline void clear_main_round_idx();
  static const int kMainRoundIdxFieldNumber = 4;
  inline ::google::protobuf::int32 main_round_idx() const;
  inline void set_main_round_idx(::google::protobuf::int32 value);

  // optional uint32 next_status_timestamp = 5;
  inline bool has_next_status_timestamp() const;
  inline void clear_next_status_timestamp();
  static const int kNextStatusTimestampFieldNumber = 5;
  inline ::google::protobuf::uint32 next_status_timestamp() const;
  inline void set_next_status_timestamp(::google::protobuf::uint32 value);

  // optional uint32 prepare_status_timestamp = 6;
  inline bool has_prepare_status_timestamp() const;
  inline void clear_prepare_status_timestamp();
  static const int kPrepareStatusTimestampFieldNumber = 6;
  inline ::google::protobuf::uint32 prepare_status_timestamp() const;
  inline void set_prepare_status_timestamp(::google::protobuf::uint32 value);

  // optional uint32 qualification_status_timestamp = 7;
  inline bool has_qualification_status_timestamp() const;
  inline void clear_qualification_status_timestamp();
  static const int kQualificationStatusTimestampFieldNumber = 7;
  inline ::google::protobuf::uint32 qualification_status_timestamp() const;
  inline void set_qualification_status_timestamp(::google::protobuf::uint32 value);

  // optional uint32 main_status_timestamp = 8;
  inline bool has_main_status_timestamp() const;
  inline void clear_main_status_timestamp();
  static const int kMainStatusTimestampFieldNumber = 8;
  inline ::google::protobuf::uint32 main_status_timestamp() const;
  inline void set_main_status_timestamp(::google::protobuf::uint32 value);

  // optional uint32 calculate_status_timestamp = 9;
  inline bool has_calculate_status_timestamp() const;
  inline void clear_calculate_status_timestamp();
  static const int kCalculateStatusTimestampFieldNumber = 9;
  inline ::google::protobuf::uint32 calculate_status_timestamp() const;
  inline void set_calculate_status_timestamp(::google::protobuf::uint32 value);

  // optional uint32 rest_status_timestamp = 10;
  inline bool has_rest_status_timestamp() const;
  inline void clear_rest_status_timestamp();
  static const int kRestStatusTimestampFieldNumber = 10;
  inline ::google::protobuf::uint32 rest_status_timestamp() const;
  inline void set_rest_status_timestamp(::google::protobuf::uint32 value);

  // optional uint32 qualification_round_timestamp = 11;
  inline bool has_qualification_round_timestamp() const;
  inline void clear_qualification_round_timestamp();
  static const int kQualificationRoundTimestampFieldNumber = 11;
  inline ::google::protobuf::uint32 qualification_round_timestamp() const;
  inline void set_qualification_round_timestamp(::google::protobuf::uint32 value);

  // optional uint32 main_round_timestamp = 12;
  inline bool has_main_round_timestamp() const;
  inline void clear_main_round_timestamp();
  static const int kMainRoundTimestampFieldNumber = 12;
  inline ::google::protobuf::uint32 main_round_timestamp() const;
  inline void set_main_round_timestamp(::google::protobuf::uint32 value);

  // repeated uint32 qualification_timestamp_list = 13;
  inline int qualification_timestamp_list_size() const;
  inline void clear_qualification_timestamp_list();
  static const int kQualificationTimestampListFieldNumber = 13;
  inline ::google::protobuf::uint32 qualification_timestamp_list(int index) const;
  inline void set_qualification_timestamp_list(int index, ::google::protobuf::uint32 value);
  inline void add_qualification_timestamp_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      qualification_timestamp_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_qualification_timestamp_list();

  // repeated uint32 main_timestamp_list = 14;
  inline int main_timestamp_list_size() const;
  inline void clear_main_timestamp_list();
  static const int kMainTimestampListFieldNumber = 14;
  inline ::google::protobuf::uint32 main_timestamp_list(int index) const;
  inline void set_main_timestamp_list(int index, ::google::protobuf::uint32 value);
  inline void add_main_timestamp_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      main_timestamp_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_main_timestamp_list();

  // @@protoc_insertion_point(class_scope:PB_UTABaseData)
 private:
  inline void set_has_cur_status();
  inline void clear_has_cur_status();
  inline void set_has_season_index();
  inline void clear_has_season_index();
  inline void set_has_qualification_round_idx();
  inline void clear_has_qualification_round_idx();
  inline void set_has_main_round_idx();
  inline void clear_has_main_round_idx();
  inline void set_has_next_status_timestamp();
  inline void clear_has_next_status_timestamp();
  inline void set_has_prepare_status_timestamp();
  inline void clear_has_prepare_status_timestamp();
  inline void set_has_qualification_status_timestamp();
  inline void clear_has_qualification_status_timestamp();
  inline void set_has_main_status_timestamp();
  inline void clear_has_main_status_timestamp();
  inline void set_has_calculate_status_timestamp();
  inline void clear_has_calculate_status_timestamp();
  inline void set_has_rest_status_timestamp();
  inline void clear_has_rest_status_timestamp();
  inline void set_has_qualification_round_timestamp();
  inline void clear_has_qualification_round_timestamp();
  inline void set_has_main_round_timestamp();
  inline void clear_has_main_round_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 cur_status_;
  ::google::protobuf::int32 season_index_;
  ::google::protobuf::int32 qualification_round_idx_;
  ::google::protobuf::int32 main_round_idx_;
  ::google::protobuf::uint32 next_status_timestamp_;
  ::google::protobuf::uint32 prepare_status_timestamp_;
  ::google::protobuf::uint32 qualification_status_timestamp_;
  ::google::protobuf::uint32 main_status_timestamp_;
  ::google::protobuf::uint32 calculate_status_timestamp_;
  ::google::protobuf::uint32 rest_status_timestamp_;
  ::google::protobuf::uint32 qualification_round_timestamp_;
  ::google::protobuf::uint32 main_round_timestamp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > qualification_timestamp_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > main_timestamp_list_;
  friend void  protobuf_AddDesc_universe_5fteam_5farena_5fbase_5fdata_2eproto();
  friend void protobuf_AssignDesc_universe_5fteam_5farena_5fbase_5fdata_2eproto();
  friend void protobuf_ShutdownFile_universe_5fteam_5farena_5fbase_5fdata_2eproto();

  void InitAsDefaultInstance();
  static PB_UTABaseData* default_instance_;
};
// ===================================================================


// ===================================================================

// PB_UTABaseData

// optional int32 cur_status = 1;
inline bool PB_UTABaseData::has_cur_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_UTABaseData::set_has_cur_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_UTABaseData::clear_has_cur_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_UTABaseData::clear_cur_status() {
  cur_status_ = 0;
  clear_has_cur_status();
}
inline ::google::protobuf::int32 PB_UTABaseData::cur_status() const {
  // @@protoc_insertion_point(field_get:PB_UTABaseData.cur_status)
  return cur_status_;
}
inline void PB_UTABaseData::set_cur_status(::google::protobuf::int32 value) {
  set_has_cur_status();
  cur_status_ = value;
  // @@protoc_insertion_point(field_set:PB_UTABaseData.cur_status)
}

// optional int32 season_index = 2;
inline bool PB_UTABaseData::has_season_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_UTABaseData::set_has_season_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_UTABaseData::clear_has_season_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_UTABaseData::clear_season_index() {
  season_index_ = 0;
  clear_has_season_index();
}
inline ::google::protobuf::int32 PB_UTABaseData::season_index() const {
  // @@protoc_insertion_point(field_get:PB_UTABaseData.season_index)
  return season_index_;
}
inline void PB_UTABaseData::set_season_index(::google::protobuf::int32 value) {
  set_has_season_index();
  season_index_ = value;
  // @@protoc_insertion_point(field_set:PB_UTABaseData.season_index)
}

// optional int32 qualification_round_idx = 3;
inline bool PB_UTABaseData::has_qualification_round_idx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_UTABaseData::set_has_qualification_round_idx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_UTABaseData::clear_has_qualification_round_idx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_UTABaseData::clear_qualification_round_idx() {
  qualification_round_idx_ = 0;
  clear_has_qualification_round_idx();
}
inline ::google::protobuf::int32 PB_UTABaseData::qualification_round_idx() const {
  // @@protoc_insertion_point(field_get:PB_UTABaseData.qualification_round_idx)
  return qualification_round_idx_;
}
inline void PB_UTABaseData::set_qualification_round_idx(::google::protobuf::int32 value) {
  set_has_qualification_round_idx();
  qualification_round_idx_ = value;
  // @@protoc_insertion_point(field_set:PB_UTABaseData.qualification_round_idx)
}

// optional int32 main_round_idx = 4;
inline bool PB_UTABaseData::has_main_round_idx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PB_UTABaseData::set_has_main_round_idx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PB_UTABaseData::clear_has_main_round_idx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PB_UTABaseData::clear_main_round_idx() {
  main_round_idx_ = 0;
  clear_has_main_round_idx();
}
inline ::google::protobuf::int32 PB_UTABaseData::main_round_idx() const {
  // @@protoc_insertion_point(field_get:PB_UTABaseData.main_round_idx)
  return main_round_idx_;
}
inline void PB_UTABaseData::set_main_round_idx(::google::protobuf::int32 value) {
  set_has_main_round_idx();
  main_round_idx_ = value;
  // @@protoc_insertion_point(field_set:PB_UTABaseData.main_round_idx)
}

// optional uint32 next_status_timestamp = 5;
inline bool PB_UTABaseData::has_next_status_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PB_UTABaseData::set_has_next_status_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PB_UTABaseData::clear_has_next_status_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PB_UTABaseData::clear_next_status_timestamp() {
  next_status_timestamp_ = 0u;
  clear_has_next_status_timestamp();
}
inline ::google::protobuf::uint32 PB_UTABaseData::next_status_timestamp() const {
  // @@protoc_insertion_point(field_get:PB_UTABaseData.next_status_timestamp)
  return next_status_timestamp_;
}
inline void PB_UTABaseData::set_next_status_timestamp(::google::protobuf::uint32 value) {
  set_has_next_status_timestamp();
  next_status_timestamp_ = value;
  // @@protoc_insertion_point(field_set:PB_UTABaseData.next_status_timestamp)
}

// optional uint32 prepare_status_timestamp = 6;
inline bool PB_UTABaseData::has_prepare_status_timestamp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PB_UTABaseData::set_has_prepare_status_timestamp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PB_UTABaseData::clear_has_prepare_status_timestamp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PB_UTABaseData::clear_prepare_status_timestamp() {
  prepare_status_timestamp_ = 0u;
  clear_has_prepare_status_timestamp();
}
inline ::google::protobuf::uint32 PB_UTABaseData::prepare_status_timestamp() const {
  // @@protoc_insertion_point(field_get:PB_UTABaseData.prepare_status_timestamp)
  return prepare_status_timestamp_;
}
inline void PB_UTABaseData::set_prepare_status_timestamp(::google::protobuf::uint32 value) {
  set_has_prepare_status_timestamp();
  prepare_status_timestamp_ = value;
  // @@protoc_insertion_point(field_set:PB_UTABaseData.prepare_status_timestamp)
}

// optional uint32 qualification_status_timestamp = 7;
inline bool PB_UTABaseData::has_qualification_status_timestamp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PB_UTABaseData::set_has_qualification_status_timestamp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PB_UTABaseData::clear_has_qualification_status_timestamp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PB_UTABaseData::clear_qualification_status_timestamp() {
  qualification_status_timestamp_ = 0u;
  clear_has_qualification_status_timestamp();
}
inline ::google::protobuf::uint32 PB_UTABaseData::qualification_status_timestamp() const {
  // @@protoc_insertion_point(field_get:PB_UTABaseData.qualification_status_timestamp)
  return qualification_status_timestamp_;
}
inline void PB_UTABaseData::set_qualification_status_timestamp(::google::protobuf::uint32 value) {
  set_has_qualification_status_timestamp();
  qualification_status_timestamp_ = value;
  // @@protoc_insertion_point(field_set:PB_UTABaseData.qualification_status_timestamp)
}

// optional uint32 main_status_timestamp = 8;
inline bool PB_UTABaseData::has_main_status_timestamp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PB_UTABaseData::set_has_main_status_timestamp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PB_UTABaseData::clear_has_main_status_timestamp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PB_UTABaseData::clear_main_status_timestamp() {
  main_status_timestamp_ = 0u;
  clear_has_main_status_timestamp();
}
inline ::google::protobuf::uint32 PB_UTABaseData::main_status_timestamp() const {
  // @@protoc_insertion_point(field_get:PB_UTABaseData.main_status_timestamp)
  return main_status_timestamp_;
}
inline void PB_UTABaseData::set_main_status_timestamp(::google::protobuf::uint32 value) {
  set_has_main_status_timestamp();
  main_status_timestamp_ = value;
  // @@protoc_insertion_point(field_set:PB_UTABaseData.main_status_timestamp)
}

// optional uint32 calculate_status_timestamp = 9;
inline bool PB_UTABaseData::has_calculate_status_timestamp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PB_UTABaseData::set_has_calculate_status_timestamp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PB_UTABaseData::clear_has_calculate_status_timestamp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PB_UTABaseData::clear_calculate_status_timestamp() {
  calculate_status_timestamp_ = 0u;
  clear_has_calculate_status_timestamp();
}
inline ::google::protobuf::uint32 PB_UTABaseData::calculate_status_timestamp() const {
  // @@protoc_insertion_point(field_get:PB_UTABaseData.calculate_status_timestamp)
  return calculate_status_timestamp_;
}
inline void PB_UTABaseData::set_calculate_status_timestamp(::google::protobuf::uint32 value) {
  set_has_calculate_status_timestamp();
  calculate_status_timestamp_ = value;
  // @@protoc_insertion_point(field_set:PB_UTABaseData.calculate_status_timestamp)
}

// optional uint32 rest_status_timestamp = 10;
inline bool PB_UTABaseData::has_rest_status_timestamp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PB_UTABaseData::set_has_rest_status_timestamp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PB_UTABaseData::clear_has_rest_status_timestamp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PB_UTABaseData::clear_rest_status_timestamp() {
  rest_status_timestamp_ = 0u;
  clear_has_rest_status_timestamp();
}
inline ::google::protobuf::uint32 PB_UTABaseData::rest_status_timestamp() const {
  // @@protoc_insertion_point(field_get:PB_UTABaseData.rest_status_timestamp)
  return rest_status_timestamp_;
}
inline void PB_UTABaseData::set_rest_status_timestamp(::google::protobuf::uint32 value) {
  set_has_rest_status_timestamp();
  rest_status_timestamp_ = value;
  // @@protoc_insertion_point(field_set:PB_UTABaseData.rest_status_timestamp)
}

// optional uint32 qualification_round_timestamp = 11;
inline bool PB_UTABaseData::has_qualification_round_timestamp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PB_UTABaseData::set_has_qualification_round_timestamp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PB_UTABaseData::clear_has_qualification_round_timestamp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PB_UTABaseData::clear_qualification_round_timestamp() {
  qualification_round_timestamp_ = 0u;
  clear_has_qualification_round_timestamp();
}
inline ::google::protobuf::uint32 PB_UTABaseData::qualification_round_timestamp() const {
  // @@protoc_insertion_point(field_get:PB_UTABaseData.qualification_round_timestamp)
  return qualification_round_timestamp_;
}
inline void PB_UTABaseData::set_qualification_round_timestamp(::google::protobuf::uint32 value) {
  set_has_qualification_round_timestamp();
  qualification_round_timestamp_ = value;
  // @@protoc_insertion_point(field_set:PB_UTABaseData.qualification_round_timestamp)
}

// optional uint32 main_round_timestamp = 12;
inline bool PB_UTABaseData::has_main_round_timestamp() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PB_UTABaseData::set_has_main_round_timestamp() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PB_UTABaseData::clear_has_main_round_timestamp() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PB_UTABaseData::clear_main_round_timestamp() {
  main_round_timestamp_ = 0u;
  clear_has_main_round_timestamp();
}
inline ::google::protobuf::uint32 PB_UTABaseData::main_round_timestamp() const {
  // @@protoc_insertion_point(field_get:PB_UTABaseData.main_round_timestamp)
  return main_round_timestamp_;
}
inline void PB_UTABaseData::set_main_round_timestamp(::google::protobuf::uint32 value) {
  set_has_main_round_timestamp();
  main_round_timestamp_ = value;
  // @@protoc_insertion_point(field_set:PB_UTABaseData.main_round_timestamp)
}

// repeated uint32 qualification_timestamp_list = 13;
inline int PB_UTABaseData::qualification_timestamp_list_size() const {
  return qualification_timestamp_list_.size();
}
inline void PB_UTABaseData::clear_qualification_timestamp_list() {
  qualification_timestamp_list_.Clear();
}
inline ::google::protobuf::uint32 PB_UTABaseData::qualification_timestamp_list(int index) const {
  // @@protoc_insertion_point(field_get:PB_UTABaseData.qualification_timestamp_list)
  return qualification_timestamp_list_.Get(index);
}
inline void PB_UTABaseData::set_qualification_timestamp_list(int index, ::google::protobuf::uint32 value) {
  qualification_timestamp_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:PB_UTABaseData.qualification_timestamp_list)
}
inline void PB_UTABaseData::add_qualification_timestamp_list(::google::protobuf::uint32 value) {
  qualification_timestamp_list_.Add(value);
  // @@protoc_insertion_point(field_add:PB_UTABaseData.qualification_timestamp_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PB_UTABaseData::qualification_timestamp_list() const {
  // @@protoc_insertion_point(field_list:PB_UTABaseData.qualification_timestamp_list)
  return qualification_timestamp_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PB_UTABaseData::mutable_qualification_timestamp_list() {
  // @@protoc_insertion_point(field_mutable_list:PB_UTABaseData.qualification_timestamp_list)
  return &qualification_timestamp_list_;
}

// repeated uint32 main_timestamp_list = 14;
inline int PB_UTABaseData::main_timestamp_list_size() const {
  return main_timestamp_list_.size();
}
inline void PB_UTABaseData::clear_main_timestamp_list() {
  main_timestamp_list_.Clear();
}
inline ::google::protobuf::uint32 PB_UTABaseData::main_timestamp_list(int index) const {
  // @@protoc_insertion_point(field_get:PB_UTABaseData.main_timestamp_list)
  return main_timestamp_list_.Get(index);
}
inline void PB_UTABaseData::set_main_timestamp_list(int index, ::google::protobuf::uint32 value) {
  main_timestamp_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:PB_UTABaseData.main_timestamp_list)
}
inline void PB_UTABaseData::add_main_timestamp_list(::google::protobuf::uint32 value) {
  main_timestamp_list_.Add(value);
  // @@protoc_insertion_point(field_add:PB_UTABaseData.main_timestamp_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PB_UTABaseData::main_timestamp_list() const {
  // @@protoc_insertion_point(field_list:PB_UTABaseData.main_timestamp_list)
  return main_timestamp_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PB_UTABaseData::mutable_main_timestamp_list() {
  // @@protoc_insertion_point(field_mutable_list:PB_UTABaseData.main_timestamp_list)
  return &main_timestamp_list_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_universe_5fteam_5farena_5fbase_5fdata_2eproto__INCLUDED
