#ifndef __BATTLE_BUFF_DEF_HPP__
#define __BATTLE_BUFF_DEF_HPP__

#include "servercommon/servercommon.h"

enum BATTLE_BUFF_TYPE
{
	BATTLE_BUFF_TYPE_INVALID = 0,

	BATTLE_BUFF_TYPE_IMPRISON_STATE,			//!< 1  禁锢状态（沉默、怯战、昏睡、癫狂、诅咒、石化、嘲讽）  P1:特殊状态类型号(详见下面的特殊状态类型表）    P2:（几率）
	BATTLE_BUFF_TYPE_ABNORMAL_STATE,			//!< 2  异常状态（重伤、地陷、疲劳、破防、中毒、酒醉、禁疗） P1:特殊状态类型号    (详见下面的特殊状态类型表）  P2:重伤减治疗百分比（当P1为重伤时）
	BATTLE_BUFF_TYPE_INC_DAMAGE,				//!< 3  对敌方伤害增加   P1: 增伤千分比 P2:(BATTLE_DAMAGE_EFFECT_TYPE_MAX)		P3:增伤次数(0:不限制次数) P4:叠加千分比上限(0:无限制)
	BATTLE_BUFF_TYPE_DEC_DAMAGE,				//!< 4  受到敌方伤害减少  P1: 减伤千分比 P2:(0:物理伤害 1：魔法伤害 2：物理与魔法伤害)	P3:减免次数(0:不限制次数) P4:叠加千分比上限(0:无限制)
	BATTLE_BUFF_TYPE_ATTR_CHANGE_BY_PERCENT,	//!< 5  修改属性(千分比)  P1: 修改属性数量（最大为3）   P2: 属性类型号    P3:属性千分比     P4: 属性类型号    P5:属性千分比    P6: 属性类型号    P7:属性千分比  
	BATTLE_BUFF_TYPE_COUNTER_ATTACK,			//!< 6  反击状态   P1: 反击造成的伤害系数百分比    P2: 不装备枪时，不触发反击的概率百分比
	BATTLE_BUFF_TYPE_SHIELD,					//!< 7  圣盾状态   P1: 减伤百分比低位    P2:减伤百分比高位    （比如减伤45%~55%，则P1=45, P2=55)
	BATTLE_BUFF_TYPE_GUARD,						//!< 8  护卫状态   P1: 改变防御的百分比
	BATTLE_BUFF_TYPE_DEFENSE,					//!< 9  防御状态   （这是防御动作所附加的防御buff状态）
	BATTLE_BUFF_TYPE_PRAYER,					//!< 10 祈祷状态   P1: 二次释放的技能的伤害/治疗百分比系数
	BATTLE_BUFF_TYPE_DAMAGE_ABSORB,				//!< 11 伤害吸收（包含反弹 或 伤害转化为回血）   P1:吸收次数  P2:反弹伤害比例  P3:回血比例
	BATTLE_BUFF_TYPE_INVINCIBLE,				//!< 12 无敌状态   P1:是否免疫debuff(1:是 0:否)
	BATTLE_BUFF_TYPE_CLIENT_SHOW,				//!< 13 用于显示，没有特别的功能   P1:特殊状态类型号
	BATTLE_BUFF_TYPE_AXE_BLOCK,					//!< 14 战斧格挡状态   P1：格挡概率
	BATTLE_BUFF_TYPE_FABAO_SKILL_FORBID,		//!< 15 法宝技能封印状态
	BATTLE_BUFF_TYPE_SPECIAL_STATE,				//!< 16 特殊状态（专门用于BATTLE_SPECIAL_STATE的，没有其他效果的)   P1: 特殊状态类型号
	BATTLE_BUFF_TYPE_ELEMENT_TURNOVER,			//!< 17 元素反转状态   
	BATTLE_BUFF_TYPE_SUSTAIN_HEAL,				//!< 18 持续回血   P1:回血系数（百分比） P2:固定回血系数（百分比）P3:目标最大血量回血系数（百分比）
	BATTLE_BUFF_TYPE_SHARE_DAMAGE,				//!< 19 伤害分担 P1:减伤百分比 P2:分担伤害类型（0:物理 1:法术 2:物理+法术) （伤害是默认均分的，且不会造成分担的角色死亡）
	BATTLE_BUFF_TYPE_TAUNT,						//!< 20 嘲讽 （已废弃，嘲讽BUFF现在是一个禁锢状态，见类型1）
	BATTLE_BUFF_TYPE_CRYSTAL_BREAK,				//!< 21 水晶破碎
	BATTLE_BUFF_TYPE_ANTI_RATE_UP,				//!< 22 全异常抗性增加 P1:增加千分比
	BATTLE_BUFF_TYPE_INC_FINAL_DAMAGE,			//!< 23 对敌方最终伤害增加  P1: 增伤百分比 P2:(0:物理伤害 1：魔法伤害 2：物理与魔法伤害)
	BATTLE_BUFF_TYPE_MP_SHIELD,					//!< 24 蓝盾 P1：最终伤害减低百分比  P2：破盾蓝量百分比  （蓝量高于P2时，最终伤害减低P1)
	BATTLE_BUFF_TYPE_ELEMENT_CHAOS,				//!< 25 混沌元素状态
	BATTLE_BUFF_TYPE_SHOW_HP,					//!< 26 显示血量状态
	BATTLE_BUFF_TYPE_SPEED_MODIFY,				//!< 27 改变出手速度 P1:改变的值
	BATTLE_BUFF_TYPE_REALIVE,					//!< 28 复活BUFF P1:回血千分比 P2:回蓝千分比
	BATTLE_BUFF_TYPE_ATTR_CHANGE_BY_VALUE,		//!< 29 按数值改变属性 P1: 修改属性数量（最大为3）   P2: 属性类型号    P3:属性数值     P4: 属性类型号    P5:属性数值    P6: 属性类型号    P7:属性数值  
	BATTLE_BUFF_TYPE_CONTROL_IMMUNE,			//!< 30 控制免疫  P1:免疫次数   P2:概率千分比（注意为0也是必中，兼容老的BUFF）
	BATTLE_BUFF_TYPE_ELEMENT_ENHANCE,			//!< 31 属性克制效果强化  P1:千分比
	BATTLE_BUFF_TYPE_SPECIAL_REALIVE,			//!< 32 特殊复活BUFF P1:回血千分比 P2：复活次数
	BATTLE_BUFF_TYPE_SKILL_UP,					//!< 33 技能强化 P1:技能ID  P2:成功率提供百分比  P3:伤害提高千分比
	BATTLE_BUFF_TYPE_ADD_ATTR_BY_LEVEL,			//!< 34 由等级提升属性值(等级*X+Y) P1:属性类型号 P2:X P3:Y   (不可修改血量/蓝量)
	BATTLE_BUFF_TYPE_IMMUNE_ALL_EFFECT,			//!< 35 概率免疫敌方的一切效果与伤害 P1:X(千分比)
	BATTLE_BUFF_TYPE_LOCK_SOUL,					//!< 36 锁魂:无法恢复血蓝,BUFF持续期间死亡会重新刷新一次持续时间,X回合内无法被复活 P1:X
	BATTLE_BUFF_TYPE_HP_SHIELD,					//!< 37 生命护盾 P1:最大生命值百分比 p2:击破时是否清除本次伤害 0:不清除 1:清除
	BATTLE_BUFF_TYPE_HEAL_UP,					//!< 38 治疗效果提升(治疗他人) P1:提升治疗千分比 P2:叠加千分比上限(0:无限制)
	BATTLE_BUFF_TYPE_LINK_DAMAGE,				//!< 39 铁索连环BUFF（仅做显示，实际效果在其他的代码上） P1:同受伤害比例(千分比) P2:是否双向(0:单向 1:双向)
	BATTLE_BUFF_TYPE_CON_IMMUNE_FATAL_ADD_BUFF,	//!< 40 X%概率免疫控制状态,受到致命伤害添加BUFF P1:X(千分比) P2:buff_id P3:buff_level P4:血量值(<=0默认设置1)
	BATTLE_BUFF_TYPE_DECREASE_DAMAGE_TO_OTHER,	//!< 41 减少对他人的伤害  P1: 减少千分比 P2:(0:物理伤害 1：魔法伤害 2：物理与魔法伤害)	P3:减免次数(0:不限制次数)
	BATTLE_BUFF_TYPE_INCREASE_DAMAGE_FROM_OTHER,//!< 42 增加来自他人的伤害  P1: 增伤千分比 P2:(0:物理伤害 1：魔法伤害 2：物理与魔法伤害)  P3:增伤次数(0:不限制次数)
	BATTLE_BUFF_TYPE_STEALTH,					//!< 43 隐身  P1:对其他单位伤害结果降低千分比
	BATTLE_BUFF_TYPE_BUDDHA_EYES,				//!< 44 慧眼 （用于探测隐身） P1:对隐身单位增伤千分比
	BATTLE_BUFF_TYPE_DAMAGE_UP_BY_ROUND,		//!< 45 越战越勇  P1:每回合增伤千分比  P2:前N回合不计入 
	BATTLE_BUFF_TYPE_DAMAGE_HP_SHILED,			//!< 46 伤害生命护盾 P1:X百分比 P2:击破时是否清除本次伤害 0:不清除 1:清除 P3:0:基于技能命中 1:本次技能释放完毕/行动结束 公式.护盾值:本次技能造成伤害*P1(X)/100
	BATTLE_BUFF_TYPE_HEAL_ON_REMOVE_BUFF,		//!< 47 Buff消失时回复最大生命值的比例  P1:回血千分比
	BATTLE_BUFF_TYPE_FREEZE_WITH_SHIELD,		//!< 48 冰冻（带生命盾） P1:盾数值系数 （盾的数值为角色最大生命值的X%） P2:击破时是否清除本次伤害 0:不清除 1:清除
	BATTLE_BUFF_TYPE_IGNORE_PHYSIC_DEFENCE,		//!< 49 忽略物理防御  P1:千分比
	BATTLE_BUFF_TYPE_MAGIC_IMMUNE,				//!< 50 法术概率免疫  P1:概率千分比 
	BATTLE_BUFF_TYPE_ATTACK_AVOID_DODGE,		//!< 51 无视闪避 
	BATTLE_BUFF_TYPE_MAGIC_CRITICAL_OBSOLETE,	//!< 52 法术必杀 p1 暴击概率百分比 p2 法术暴击系数百分比 -- 废弃
	BATTLE_BUFF_TYPE_DEC_DAMAGE_WITH_COUNTER,	//!< 53 每受到X次伤害，下一次受到敌方伤害减少  P1: 减伤千分比 P2:(0:物理伤害 1：魔法伤害 2：物理与魔法伤害)	P3:触发减免次数(0:不限制次数)  P4:每X次后，下一次伤害减免
	BATTLE_BUFF_TYPE_RAMPAGE,					//!< 54 狂暴  p1 伤害增加千分比  p2 治疗效果增加千分比  p3 控制成功率增加千分比
	BATTLE_BUFF_TYPE_CAN_MERGE_HP_SHIELD,		//!< 55 可叠加生命护盾 P1:击破时是否清除本次伤害 0:不清除 1:清除	//盾的数值由外部计算添加
	BATTLE_BUFF_TYPE_IMMUNE_DAMAGE,				//!< 56 免疫伤害 P1:免疫次数(0:不限制次数)
	BATTLE_BUFF_TYPE_FIRE_SEED,					//!< 57 火焰种子（受到火元素法术伤害时引爆）  p1:额外伤害转化系数千分比（额外伤害=伤害值*系数）
	BATTLE_BUFF_TYPE_WIND_SEED,					//!< 58 飓风种子（受到风元素法术伤害时被控制）  p1:控制概率千分比  p2:控制buff_id  p3:控制buff等级
	BATTLE_BUFF_TYPE_INJURE_COMBO_SAME_TARGET,	//!< 59 连续受到相同目标伤害则造成额外X%最大生命值真实伤害(与真实伤害属性一起触发) P1:技能ID(0:不限制) P2:X(百分比) P3:BATTLE_PLAYER_TYPE_MAX
	BATTLE_BUFF_TYPE_ATTR_CHANGE_BY_VALUE_1,	//!< 60 按数值改变属性 P1: 修改属性数量（最大为2） P2: 属性类型号  P3:属性数值   P4: 最大值   P5:属性类型号   P6: 属性数值  P7:最大值  
	BATTLE_BUFF_TYPE_ABSORB_DAMAGE_CONVERT_HP,	//!< 61 低于X%最大生命值伤害吸收并转化成生命,吸收总量上限为最大生命值Y%倍 P1:X(千分比) P2:Y(百分比)
	BATTLE_BUFF_TYPE_IMMUNE_DAMAGE_2,			//!< 62 免疫伤害值大于最大生命值一定百分比的伤害  P1:免疫次数(0:不限制次数)  P2:免疫伤害值高于最大血量的{p2}%的伤害
	BATTLE_BUFF_TYPE_HALLOW_HP_SHIELD,			//!< 63 圣器生命护盾(默认破盾时清除本次伤害）
	BATTLE_BUFF_TYPE_DEC_ELEMENT_INJURE,		//!< 64 减少受到元素伤害百分比  p1:火元素减伤  p2:水元素减伤  p3:风元素减伤  p4:地元素减伤
	BATTLE_BUFF_TYPE_IMMUNE_DEADLY_INJURE,		//!< 65 免疫致命伤害 每次结算时加血 p1:加血（最大血量百分比）
	BATTLE_BUFF_TYPE_ONE_DIE_DAMAGE_OTHER,		//!< 66 死亡后对其他一个角色造成伤害，伤害值为最后一次受伤的数值  p1:如何查找目标（0为友军 1为敌军）
	BATTLE_BUFF_TYPE_SUSTAIN_DAMAGE_AND_HEAL,	//!< 67 每次结算时造成伤害并回复敌人伤害值一定比例的血量  p1:伤害值  p2:伤害转发回血比例百分比[0,100]
	BATTLE_BUFF_TYPE_ACCUMULATE_DAMAGE_BURST,	//!< 68 累计受到的伤害并在结算时均分给其他角色  p1:0为友军 1为敌军
	BATTLE_BUFF_TYPE_ACCUMULATE_DAMAGE_BURST_2,	//!< 69 累计造成的伤害并在结算时均分给其他角色  p1:0为友军 1为敌军
	BATTLE_BUFF_TYPE_BIANSHEN_RECORD,			//!< 70 某些特殊变身记录
	BATTLE_BUFF_TYPE_PHYSIC_CRITICAL,			//!< 71 物理必杀
	BATTLE_BUFF_TYPE_END_ADD_BUFF,				//!< 72 该buff结束时增加BUFF P1:buff_id P2:buff_level P3:概率(千分比)

	BATTLE_BUFF_TYPE_MAX,
};

//可同时共存数量
enum COEXIST_COUNT
{
	COEXIST_COUNT_IMPRISON_STATE = 1,
	COEXIST_COUNT_ABNORMAL_STATE = 2,
	COEXIST_COUNT_INC_DAMAGE = 4,
	COEXIST_COUNT_DEC_DAMAGE = 4,
	COEXIST_COUNT_ATTR_CHANGE_BY_PERCENT = 4,
	COEXIST_COUNT_COUNTER_ATTACK = 1,
	COEXIST_COUNT_SHIELD = 1,
	COEXIST_COUNT_GUARD = 1,
	COEXIST_COUNT_DEFENSE = 1,
	COEXIST_COUNT_PRAYER = 1,
	COEXIST_COUNT_ABSORB_DAMAGE = 1,
	COEXIST_COUNT_INVINCIBLE = 1,
	COEXIST_COUNT_CLIENT_SHOW = 4,
	COEXIST_COUNT_AXE_BLOCK = 1,
	COEXIST_COUNT_FABAO_SKILL_FORBID = 1,
	COEXIST_COUNT_SPECIAL_STATE = 8,
	COEXIST_COUNT_ELEMENT_TURNOVER = 1,
	COEXIST_COUNT_SUSTAIN_HEAL = 1,
	COEXIST_COUNT_SHARE_DAMAGE = 1,
	COEXIST_COUNT_TAUNT = 1,
	COEXIST_COUNT_CRYSTAL_BREAK = 1,
	COEXIST_COUNT_ANTI_RATE_UP = 1,
	COEXIST_COUNT_INC_FINAL_DAMAGE = 1,
	COEXIST_COUNT_MP_SHIELD = 1,
	COEXIST_COUNT_ELEMENT_CHAOS = 1,
	COEXIST_COUNT_SHOW_HP = 1,
	COEXIST_COUNT_SPEED_MODIFY = 4,
	COEXIST_COUNT_REALIVE = 1,
	COEXIST_COUNT_ATTR_CHANGE_BY_VALUE = 4,
	COEXIST_COUNT_CONTROL_IMMUNE = 1,
	COEXIST_COUNT_ELEMENT_ENHANCE = 1,
	COEXIST_COUNT_SPECIAL_REALIVE = 1,
	COEXIST_COUNT_SKILL_UP = 2,
	COEXIST_COUNT_ADD_ATTR_BY_LEVEL = 4,
	COEXIST_COUNT_IMMUNE_ALL_EFFECT = 1,
	COEXIST_COUNT_LOCK_SOUL = 1,
	COEXIST_COUNT_HP_SHIELD = 1,
	COEXIST_COUNT_HEAL_UP = 1,
	COEXIST_COUNT_LINK_DAMAGE = 4,
	COEXIST_COUNT_CON_IMMUNE_FATAL_ADD_BUFF = 1,
	COEXIST_COUNT_DECREASE_DAMAGE_TO_OTHER = 4,
	COEXIST_COUNT_INCREASE_DAMAGE_FROM_OTHER = 4,
	COEXIST_COUNT_STEALTH = 1,
	COEXIST_COUNT_BUDDHA_EYES = 1,
	COEXIST_COUNT_DAMAGE_UP_BY_ROUND = 1,
	COEXIST_COUNT_DAMAGE_HP_SHIELD = 1,
	COEXIST_COUNT_HEAL_ON_REMOVE_BUFF = 1,
	COEXIST_COUNT_FREEZE_WITH_SHIELD = 1,
	COEXIST_COUNT_IGNORE_PHYSIC_DEFENCE = 2,
	COEXIST_COUNT_MAGIC_IMMUNE = 1,
	COEXIST_COUNT_ATTACK_AVOID_DODGE = 1,
	COEXIST_COUNT_MAGIC_CRITICAL = 1,
	COEXIST_COUNT_DEC_DAMAGE_WITH_COUNTER = 1,
	COEXIST_COUNT_RAMPAGE = 1,
	COEXITS_COUNT_CAN_MERGE_HP_SHIELD = 2,
	COEXIST_COUNT_IMMUNE_DAMAGE = 3,
	COEXIST_COUNT_FIRE_SEED = 1,
	COEXIST_COUNT_WIND_SEED = 1,
	COEXIST_COUNT_RECEIVE_SAME_TARGET_INJURE = 4,
	COEXIST_COUNT_ATTR_CHANGE_BY_VALUE_1 = 4,
	COEXIST_COUNT_ABSORB_DAMAGE_CONVERT_HP = 1,
	COEXIST_COUNT_IMMUNE_DAMAGE_2 = 1,
	COEXIST_COUNT_HALLOW_HP_SHIELD = 1,
	COEXIST_COUNT_DEC_ELEMENT_INJURE = 1,
	COEXIST_COUNT_IMMUNE_DEADLY_INJURE = 1,
	COEXIST_COUNT_ON_DIE_DAMAGE_OTHER = 1,
	COEXIST_COUNT_SUSTAIN_DAMAGE_AND_HEAL = 1,
	COEXIST_COUNT_ACCUMULATE_DAMAGE_BURST = 1,
	COEXIST_COUNT_ACCUMULATE_DAMAGE_BURST_2 = 1,
	COEXIST_COUNT_BIANSHEN_RECORD = 1,
	COEXIST_COUNT_PHYSIC_CRITICAL = 1,
	COEXIST_COUNT_END_ADD_BUFF = 4,

	COEXIST_COUNT_OTHER = 12,
};
UNSTD_STATIC_CHECK(73 == BATTLE_BUFF_TYPE_MAX);

enum BATTLE_BUFF_START_INDEX
{
	BATTLE_BUFF_START_INDEX_IMPRISON_STATE = 0,
	BATTLE_BUFF_START_INDEX_ABNORMAL_STATE = BATTLE_BUFF_START_INDEX_IMPRISON_STATE + COEXIST_COUNT_IMPRISON_STATE,
	BATTLE_BUFF_START_INDEX_INC_DAMAGE = BATTLE_BUFF_START_INDEX_ABNORMAL_STATE + COEXIST_COUNT_ABNORMAL_STATE,
	BATTLE_BUFF_START_INDEX_DEC_DAMAGE = BATTLE_BUFF_START_INDEX_INC_DAMAGE + COEXIST_COUNT_INC_DAMAGE,
	BATTLE_BUFF_START_INDEX_ATTR_CHANGE_BY_PERCENT = BATTLE_BUFF_START_INDEX_DEC_DAMAGE + COEXIST_COUNT_DEC_DAMAGE,
	BATTLE_BUFF_START_INDEX_COUNTER_ATTACK = BATTLE_BUFF_START_INDEX_ATTR_CHANGE_BY_PERCENT + COEXIST_COUNT_ATTR_CHANGE_BY_PERCENT,
	BATTLE_BUFF_START_INDEX_SHIELD = BATTLE_BUFF_START_INDEX_COUNTER_ATTACK + COEXIST_COUNT_COUNTER_ATTACK,
	BATTLE_BUFF_START_INDEX_GUARD = BATTLE_BUFF_START_INDEX_SHIELD + COEXIST_COUNT_SHIELD,
	BATTLE_BUFF_START_INDEX_DEFENSE = BATTLE_BUFF_START_INDEX_GUARD + COEXIST_COUNT_GUARD,
	BATTLE_BUFF_START_INDEX_PRAYER = BATTLE_BUFF_START_INDEX_DEFENSE + COEXIST_COUNT_DEFENSE,
	BATTLE_BUFF_START_INDEX_ABSORB_DAMAGE = BATTLE_BUFF_START_INDEX_PRAYER + COEXIST_COUNT_PRAYER,
	BATTLE_BUFF_START_INDEX_INVINCIBLE = BATTLE_BUFF_START_INDEX_ABSORB_DAMAGE + COEXIST_COUNT_ABSORB_DAMAGE,
	BATTLE_BUFF_START_INDEX_CLIENT_SHOW = BATTLE_BUFF_START_INDEX_INVINCIBLE + COEXIST_COUNT_INVINCIBLE,
	BATTLE_BUFF_START_INDEX_AXE_BLOCK = BATTLE_BUFF_START_INDEX_CLIENT_SHOW + COEXIST_COUNT_CLIENT_SHOW,
	BATTLE_BUFF_START_INDEX_FABAO_SKILL_FORBID = BATTLE_BUFF_START_INDEX_AXE_BLOCK + COEXIST_COUNT_AXE_BLOCK,
	BATTLE_BUFF_START_INDEX_SPECIAL_STATE = BATTLE_BUFF_START_INDEX_FABAO_SKILL_FORBID + COEXIST_COUNT_FABAO_SKILL_FORBID,
	BATTLE_BUFF_START_INDEX_ELEMENT_TURNOVER = BATTLE_BUFF_START_INDEX_SPECIAL_STATE + COEXIST_COUNT_SPECIAL_STATE,
	BATTLE_BUFF_START_INDEX_SUSTAIN_HEAL = BATTLE_BUFF_START_INDEX_ELEMENT_TURNOVER + COEXIST_COUNT_ELEMENT_TURNOVER,
	BATTLE_BUFF_START_INDEX_SHARE_DAMAGE = BATTLE_BUFF_START_INDEX_SUSTAIN_HEAL + COEXIST_COUNT_SUSTAIN_HEAL,
	BATTLE_BUFF_START_INDEX_TAUNT = BATTLE_BUFF_START_INDEX_SHARE_DAMAGE + COEXIST_COUNT_SHARE_DAMAGE,
	BATTLE_BUFF_START_INDEX_CRYSTAL_BREAK = BATTLE_BUFF_START_INDEX_TAUNT + COEXIST_COUNT_TAUNT,
	BATTLE_BUFF_START_INDEX_ANTI_RATE_UP = BATTLE_BUFF_START_INDEX_CRYSTAL_BREAK + COEXIST_COUNT_CRYSTAL_BREAK,
	BATTLE_BUFF_START_INDEX_INC_FINAL_DAMAGE = BATTLE_BUFF_START_INDEX_ANTI_RATE_UP + COEXIST_COUNT_ANTI_RATE_UP,
	BATTLE_BUFF_START_INDEX_MP_SHIELD = BATTLE_BUFF_START_INDEX_INC_FINAL_DAMAGE + COEXIST_COUNT_INC_FINAL_DAMAGE,
	BATTLE_BUFF_START_INDEX_ELEMENT_CHAOS = BATTLE_BUFF_START_INDEX_MP_SHIELD + COEXIST_COUNT_MP_SHIELD,
	BATTLE_BUFF_START_INDEX_SHOW_HP = BATTLE_BUFF_START_INDEX_ELEMENT_CHAOS + COEXIST_COUNT_ELEMENT_CHAOS,
	BATTLE_BUFF_START_INDEX_SPEED_MODIFY = BATTLE_BUFF_START_INDEX_SHOW_HP + COEXIST_COUNT_SHOW_HP,
	BATTLE_BUFF_START_INDEX_REALIVE = BATTLE_BUFF_START_INDEX_SPEED_MODIFY + COEXIST_COUNT_SPEED_MODIFY,
	BATTLE_BUFF_START_INDEX_ATTR_CHANGE_BY_VALUE = BATTLE_BUFF_START_INDEX_REALIVE + COEXIST_COUNT_REALIVE,
	BATTLE_BUFF_START_INDEX_CONTROL_IMMUNE = BATTLE_BUFF_START_INDEX_ATTR_CHANGE_BY_VALUE + COEXIST_COUNT_ATTR_CHANGE_BY_VALUE,
	BATTLE_BUFF_START_INDEX_ELEMENT_ENHANCE = BATTLE_BUFF_START_INDEX_CONTROL_IMMUNE + COEXIST_COUNT_CONTROL_IMMUNE,
	BATTLE_BUFF_START_INDEX_SPECIAL_REALIVE = BATTLE_BUFF_START_INDEX_ELEMENT_ENHANCE + COEXIST_COUNT_ELEMENT_ENHANCE,
	BATTLE_BUFF_START_INDEX_SKILL_UP = BATTLE_BUFF_START_INDEX_SPECIAL_REALIVE + COEXIST_COUNT_SPECIAL_REALIVE,
	BATTLE_BUFF_START_INDEX_ADD_ATTR_BY_LEVEL = BATTLE_BUFF_START_INDEX_SKILL_UP + COEXIST_COUNT_SKILL_UP,
	BATTLE_BUFF_START_INDEX_IMMUNE_ALL_EFFECT = BATTLE_BUFF_START_INDEX_ADD_ATTR_BY_LEVEL + COEXIST_COUNT_ADD_ATTR_BY_LEVEL,
	BATTLE_BUFF_START_INDEX_LOCK_SOUL = BATTLE_BUFF_START_INDEX_IMMUNE_ALL_EFFECT + COEXIST_COUNT_IMMUNE_ALL_EFFECT,
	BATTLE_BUFF_START_INDEX_HEAL_UP = BATTLE_BUFF_START_INDEX_LOCK_SOUL + COEXIST_COUNT_LOCK_SOUL,
	BATTLE_BUFF_START_INDEX_HP_SHIELD = BATTLE_BUFF_START_INDEX_HEAL_UP + COEXIST_COUNT_HEAL_UP,
	BATTLE_BUFF_START_INDEX_LINK_DAMAGE = BATTLE_BUFF_START_INDEX_HP_SHIELD + COEXIST_COUNT_HP_SHIELD,
	BATTLE_BUFF_START_INDEX_CON_IMMUNE_FATAL_ADD_BUFF = BATTLE_BUFF_START_INDEX_LINK_DAMAGE + COEXIST_COUNT_LINK_DAMAGE,
	BATTLE_BUFF_START_INDEX_DECREASE_DAMAGE_TO_OTHER = BATTLE_BUFF_START_INDEX_CON_IMMUNE_FATAL_ADD_BUFF + COEXIST_COUNT_CON_IMMUNE_FATAL_ADD_BUFF,
	BATTLE_BUFF_START_INDEX_INCREASE_DAMAGE_FROM_OTHER = BATTLE_BUFF_START_INDEX_DECREASE_DAMAGE_TO_OTHER + COEXIST_COUNT_DECREASE_DAMAGE_TO_OTHER,
	BATTLE_BUFF_START_INDEX_STEALTH = BATTLE_BUFF_START_INDEX_INCREASE_DAMAGE_FROM_OTHER + COEXIST_COUNT_INCREASE_DAMAGE_FROM_OTHER,
	BATTLE_BUFF_START_INDEX_BUDDHA_EYES = BATTLE_BUFF_START_INDEX_STEALTH + COEXIST_COUNT_STEALTH,
	BATTLE_BUFF_START_INDEX_DAMAGE_UP_BY_ROUND = BATTLE_BUFF_START_INDEX_BUDDHA_EYES + COEXIST_COUNT_BUDDHA_EYES,
	BATTLE_BUFF_START_INDEX_DAMAGE_HP_SHIELD = BATTLE_BUFF_START_INDEX_DAMAGE_UP_BY_ROUND + COEXIST_COUNT_DAMAGE_UP_BY_ROUND,
	BATTLE_BUFF_START_INDEX_HEAL_ON_REMOVE_BUFF = BATTLE_BUFF_START_INDEX_DAMAGE_HP_SHIELD + COEXIST_COUNT_DAMAGE_HP_SHIELD,
	BATTLE_BUFF_START_INDEX_FREEZE_WITH_SHIELD = BATTLE_BUFF_START_INDEX_HEAL_ON_REMOVE_BUFF + COEXIST_COUNT_HEAL_ON_REMOVE_BUFF,
	BATTLE_BUFF_START_INDEX_IGNORE_PHYSIC_DEFENCE = BATTLE_BUFF_START_INDEX_FREEZE_WITH_SHIELD + COEXIST_COUNT_FREEZE_WITH_SHIELD,
	BATTLE_BUFF_START_INDEX_MAGIC_IMMUNE = BATTLE_BUFF_START_INDEX_IGNORE_PHYSIC_DEFENCE + COEXIST_COUNT_IGNORE_PHYSIC_DEFENCE,
	BATTLE_BUFF_START_INDEX_ATTACK_AVOID_DODGE = BATTLE_BUFF_START_INDEX_MAGIC_IMMUNE + COEXIST_COUNT_MAGIC_IMMUNE,
	BATTLE_BUFF_START_INDEX_MAGIC_CRITICAL = BATTLE_BUFF_START_INDEX_ATTACK_AVOID_DODGE + COEXIST_COUNT_ATTACK_AVOID_DODGE,
	BATTLE_BUFF_START_INDEX_DEC_DAMAGE_WITH_COUNTER = BATTLE_BUFF_START_INDEX_MAGIC_CRITICAL + COEXIST_COUNT_MAGIC_CRITICAL,
	BATTLE_BUFF_START_INDEX_RAMPAGE = BATTLE_BUFF_START_INDEX_DEC_DAMAGE_WITH_COUNTER + COEXIST_COUNT_DEC_DAMAGE_WITH_COUNTER,
	BATTLE_BUFF_START_INDEX_CAN_MERGE_HP_SHIELD = BATTLE_BUFF_START_INDEX_RAMPAGE + COEXIST_COUNT_RAMPAGE,
	BATTLE_BUFF_START_INDEX_IMMUNE_DAMAGE = BATTLE_BUFF_START_INDEX_CAN_MERGE_HP_SHIELD + COEXITS_COUNT_CAN_MERGE_HP_SHIELD,
	BATTLE_BUFF_START_INDEX_FIRE_SEED = BATTLE_BUFF_START_INDEX_IMMUNE_DAMAGE + COEXIST_COUNT_IMMUNE_DAMAGE,
	BATTLE_BUFF_START_INDEX_WIND_SEED = BATTLE_BUFF_START_INDEX_FIRE_SEED + COEXIST_COUNT_FIRE_SEED,
	BATTLE_BUFF_START_INDEX_RECEIVE_SAME_TARGET_INJURE = BATTLE_BUFF_START_INDEX_WIND_SEED + COEXIST_COUNT_WIND_SEED,
	BATTLE_BUFF_START_INDEX_ATTR_CHANGE_BY_VALUE_1 = BATTLE_BUFF_START_INDEX_RECEIVE_SAME_TARGET_INJURE + COEXIST_COUNT_RECEIVE_SAME_TARGET_INJURE,
	BATTLE_BUFF_START_INDEX_ABSORB_DAMAGE_CONVERT_HP = BATTLE_BUFF_START_INDEX_ATTR_CHANGE_BY_VALUE_1 + COEXIST_COUNT_ATTR_CHANGE_BY_VALUE_1,
	BATTLE_BUFF_START_INDEX_IMMUNE_DAMAGE_2 = BATTLE_BUFF_START_INDEX_ABSORB_DAMAGE_CONVERT_HP + COEXIST_COUNT_ABSORB_DAMAGE_CONVERT_HP,
	BATTLE_BUFF_START_INDEX_HALLOW_HP_SHIELD = BATTLE_BUFF_START_INDEX_IMMUNE_DAMAGE_2 + COEXIST_COUNT_IMMUNE_DAMAGE_2,
	BATTLE_BUFF_START_INDEX_DEC_ELEMENT_INJURE = BATTLE_BUFF_START_INDEX_HALLOW_HP_SHIELD + COEXIST_COUNT_HALLOW_HP_SHIELD,
	BATTLE_BUFF_START_INDEX_IMMUNE_DEADLY_INJURE = BATTLE_BUFF_START_INDEX_DEC_ELEMENT_INJURE + COEXIST_COUNT_DEC_ELEMENT_INJURE,
	BATTLE_BUFF_START_INDEX_ON_DIE_DAMAGE_OTHER = BATTLE_BUFF_START_INDEX_IMMUNE_DEADLY_INJURE + COEXIST_COUNT_IMMUNE_DEADLY_INJURE,
	BATTLE_BUFF_START_INDEX_SUSTAIN_DAMAGE_AND_HEAL = BATTLE_BUFF_START_INDEX_ON_DIE_DAMAGE_OTHER + COEXIST_COUNT_ON_DIE_DAMAGE_OTHER,
	BATTLE_BUFF_START_INDEX_ACCUMULATE_DAMAGE_BURST = BATTLE_BUFF_START_INDEX_SUSTAIN_DAMAGE_AND_HEAL + COEXIST_COUNT_SUSTAIN_DAMAGE_AND_HEAL,
	BATTLE_BUFF_START_INDEX_ACCUMULATE_DAMAGE_BURST_2 = BATTLE_BUFF_START_INDEX_ACCUMULATE_DAMAGE_BURST + COEXIST_COUNT_ACCUMULATE_DAMAGE_BURST,
	BATTLE_BUFF_START_INDEX_BIANSHEN_RECORD = BATTLE_BUFF_START_INDEX_ACCUMULATE_DAMAGE_BURST_2 + COEXIST_COUNT_ACCUMULATE_DAMAGE_BURST_2,
	BATTLE_BUFF_START_INDEX_PHYSIC_CRITICAL = BATTLE_BUFF_START_INDEX_BIANSHEN_RECORD + COEXIST_COUNT_BIANSHEN_RECORD,
	BATTLE_BUFF_START_INDEX_END_ADD_BUFF = BATTLE_BUFF_START_INDEX_PHYSIC_CRITICAL + COEXIST_COUNT_PHYSIC_CRITICAL,
	BATTLE_BUFF_START_INDEX_OTHER = BATTLE_BUFF_START_INDEX_END_ADD_BUFF + COEXIST_COUNT_END_ADD_BUFF,
};

UNSTD_STATIC_CHECK(73 == BATTLE_BUFF_TYPE_MAX);

enum BATTLE_BUFF_EXIST_METHOD
{
	BATTLE_BUFF_EXIST_METHOD_MERGE = 0,			// 叠加
	BATTLE_BUFF_EXIST_METHOD_REPLACE = 1,		// 替换
	BATTLE_BUFF_EXIST_METHOD_COEXIST = 2,		// 共存
	BATTLE_BUFF_EXIST_METHOD_IGNORE = 3,		// 忽略
};

// 只有相同buff_id的才需要考虑merge_rule (意味着类型是相同的） 如果这个设定被改变，则必须重新定义MergeRule
enum BATTLE_BUFF_MERGE_RULE
{
	BATTLE_BUFF_MERGE_RULE_INVALID = -1,

	BATTLE_BUFF_MERGE_RULE_MERGE,				// 角色无关 叠加效果
	BATTLE_BUFF_MERGE_RULE_COUNTER,				// 角色无关 叠加计数器

	BATTLE_BUFF_MERGE_RULE_NOMERGE_1,			// 角色无关 等级高的取代等级低的
	BATTLE_BUFF_MERGE_RULE_NOMERGE_2,			// 角色无关 剩余时间长的取代剩余时间短的

	BATTLE_BUFF_MERGE_RULE_IGNORE,				// 忽略

	BATTLE_BUFF_MERGE_RULE_MAX,
};

enum BATTLE_SPECIAL_STATE
{
	BATTLE_SPECIAL_STATE_INVALID = 0,
	BATTLE_SPECIAL_STATE_DEFENCE,				//!< 1 防御
	BATTLE_SPECIAL_STATE_SHIELD,				//!< 2 圣盾
	BATTLE_SPECIAL_STATE_COUNTER_ATTACK,		//!< 3 反击
	BATTLE_SPECIAL_STATE_GUARD,					//!< 4 护卫

	BATTLE_SPECIAL_STATE_SILENT,				//!< 5 沉默
	BATTLE_SPECIAL_STATE_FEAR__OBSOLETE,		//!< 6 怯战(已废弃）
	BATTLE_SPECIAL_STATE_SLEEP,					//!< 7 昏睡
	BATTLE_SPECIAL_STATE_CHAOS,					//!< 8 混乱
	BATTLE_SPECIAL_STATE_CURSE,					//!< 9 诅咒
	BATTLE_SPECIAL_STATE_PETRIFY,				//!< 10 石化
	BATTLE_SPECIAL_STATE_POISON,				//!< 11 中毒

	BATTLE_SPECIAL_STATE_SEVERE_INJURE,			//!< 12 重伤
	BATTLE_SPECIAL_STATE_SINK_HOLE,				//!< 13 地陷
	BATTLE_SPECIAL_STATE_TIRED__OBSOLETE,		//!< 14 疲劳(已废弃）
	BATTLE_SPECIAL_STATE_DEFENCE_CRACKED,		//!< 15 破防

	BATTLE_SPECIAL_STATE_PRAYER,				//!< 16 祈祷
	BATTLE_SPECIAL_STATE_INVINCIBLE,			//!< 17 无敌

	BATTLE_SPECIAL_STATE_DRUNK,					//!< 18 酒醉
	BATTLE_SPECIAL_STATE_RAMPAGE,				//!< 19 狂暴（没有特殊效果）
	BATTLE_SPECIAL_STATE_BLOCK,					//!< 20 格挡

	BATTLE_SPECIAL_STATE_FABAO_SKILL_FORBID,	//!< 21 法宝技能封印
	BATTLE_SPECIAL_STATE_REST,					//!< 22 休整
	BATTLE_SPECIAL_STATE_SHARE_DAMAGE,			//!< 23 分担伤害状态

	BATTLE_SPECIAL_STATE_TAUNT,					//!< 24 嘲讽
	BATTLE_SPECIAL_STATE_CRYSTAL_BREAK,			//!< 25 水晶破碎状态

	BATTLE_SPECIAL_STATE_CHAOS_ELEMENT,			//!< 26 混沌元素状态
	BATTLE_SPECIAL_STATE_LOCK_SOUL,				//!< 27 锁魂

	BATTLE_SPECIAL_STATE_STEALTH,				//!< 28 隐身
	BATTLE_SPECIAL_STATE_BUDDHA_EYES,			//!< 29 慧眼
	BATTLE_SPECIAL_STATE_HP_SHIELD,				//!< 30 生命护盾

	BATTLE_SPECIAL_STATE_FREEZE,				//!< 31 冰冻状态
	BATTLE_SPECIAL_STATE_FORBID_HEAL,			//!< 32 禁疗
	BATTLE_SPECIAL_STATE_TRANSFORM_INTO_MONKEY, //!< 33 变猴

	BATTLE_SPECIAL_STATE_MAX
};
UNSTD_STATIC_CHECK(BATTLE_SPECIAL_STATE_MAX < 64);

enum BATTLE_BUFF_SUSTAIN_TYPE
{
	BATTLE_BUFF_SUSTAIN_TYPE_MIN = 0,
	BATTLE_BUFF_SUSTAIN_TYPE_BEFORE_ACTION = BATTLE_BUFF_SUSTAIN_TYPE_MIN,	// 行动前
	BATTLE_BUFF_SUSTAIN_TYPE_AFTER_ACTION,		// 行动后
	BATTLE_BUFF_SUSTAIN_TYPE_ON_TURN_OVER,		// 回合结束
	BATTLE_BUFF_SUSTAIN_TYPE_TURN_OR_ACTION,	// 行动后或回合结束
	BATTLE_BUFF_SUSTAIN_TYPE_AFTER_BATTLE_PHASE, // 一个战斗阶段结束后结算
	BATTLE_BUFF_SUSTAIN_TYPE_TURN_OR_BEFORE_ACTION, // 行动前或回合结束
	BATTLE_BUFF_SUSTAIN_TYPE_MAX,
};

enum BATTLE_IMMUNE_BUFF_TYPE
{
	BATTLE_IMMUNE_BUFF_TYPE_NONE = 0,	//!< 0 不免疫BUFF
	BATTLE_IMMUNE_BUFF_TYPE_ALL = 1,	//!< 1 免疫所有BUFF
	BATTLE_IMMUNE_BUFF_TYPE_DEBUFF = 2,	//!< 2 免疫所有DEBUFF
	BATTLE_IMMUNE_BUFF_TYPE_IMPRISON_AND_ABNORMAL = 3, //!< 3 免疫禁锢和异常状态
	BATTLE_IMMUNE_BUFF_TYPE_IMPRISON = 4, //!< 4 免疫禁锢状态
	BATTLE_IMMUNE_BUFF_TYPE_ABNORMAL = 5, //!< 5 免疫异常状态
	BATTLE_IMMUNE_BUFF_TYPE_MAX,
};

#endif